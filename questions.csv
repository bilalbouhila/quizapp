Question_number;Question;NumCorrect;Answer1;Answer2;Answer3;Answer4;Answer5;Answer6;Correct;Explanation
1;Your company built a TensorFlow neutral-network model with a large number of neurons and layers. The model fits well for the training data. However, when tested against new data, it performs poorly. What method can you employ to address this?;1;Threading;Serialization;Dropout Methods;Dimensionality Reduction;;;Dropout Methods;The model is overfitting. A dropout method can be used to prevent overfitting by randomly setting a fraction of input units to 0 at each update during training time, which helps to prevent overfitting.
2;You are building a model to make clothing recommendations. You know a user's fashion preference is likely to change over time, so you build a data pipeline to stream new data back to the model as it becomes available. How should you use this data to train the model?;1;Continuously retrain the model on just the new data;Continuously retrain the model on a combination of existing data and the new data;Train on the existing data while using the new data as your test set;Train on the new data while using the existing data as your test set;;;Continuously retrain the model on a combination of existing data and the new data;To keep the model updated and also not to lose the previous patterns, the model should be continuously retrained on a mix of the existing data and the new data.
3;You designed a database for patient records as a pilot project to cover a few hundred patients in three clinics. Your design used a single database table to represent all patients and their visits, and you used self-joins to generate reports. The server resource utilization was at 50%. Since then, the scope of the project has expanded. The database must now store 100 times more patient records. You can no longer run the reports, because they either take too long or they encounter errors with insufficient compute resources. How should you adjust the database design?;1;Add capacity (memory and disk space) to the database server by the order of 200;Shard the tables into smaller ones based on date ranges, and only generate reports with prespecified date ranges;Normalize the master patient-record table into the patient table and the visits table, and create other necessary tables to avoid self-join;Partition the table into smaller tables, with one for each clinic. Run queries against the smaller table pairs, and use unions for consolidated reports;;;Normalize the master patient-record table into the patient table and the visits table, and create other necessary tables to avoid self-join;Normalization is a process that removes redundancy in a relational database and improves its design. It would help to reduce the complexity of the queries, improve the efficiency, and reduce the load on compute resources.
4;You create an important report for your large team in Google Data Studio 360. The report uses Google BigQuery as its data source. You notice that visualizations are not showing data that is less than 1 hour old. What should you do?;1;Disable caching by editing the report settings;Disable caching in BigQuery by editing table details;Refresh your browser tab showing the visualizations;Clear your browser history for the past hour then reload the tab showing the virtualizations;;;Disable caching by editing the report settings;In Google Data Studio, the data source cache improves report performance by storing the data returned by the data source. If you disable caching in the report settings, the reports will fetch the latest data directly from the data source, improving the freshness of the data displayed in your report.
5;An external customer provides you with a daily dump of data from their database. The data flows into Google Cloud Storage GCS as comma-separated values (CSV) files. You want to analyze this data in Google BigQuery, but the data could have rows that are formatted incorrectly or corrupted. How should you build this pipeline?;1;Use federated data sources, and check data in the SQL query;Enable BigQuery monitoring in Google Stackdriver and create an alert;Import the data into BigQuery using the gcloud CLI and set max_bad_records to 0;Run a Google Cloud Dataflow batch pipeline to import the data into BigQuery, and push errors to another dead-letter table for analysis;;;Run a Google Cloud Dataflow batch pipeline to import the data into BigQuery, and push errors to another dead-letter table for analysis;By running a Google Cloud Dataflow batch pipeline, it provides the ability to handle errors during the process. The corrupted or incorrectly formatted rows can be pushed to a separate 'dead-letter' table for further analysis, ensuring that the main analysis is not hampered by such records.
6;Your weather app queries a database every 15 minutes to get the current temperature. The frontend is powered by Google App Engine and server millions of users. How should you design the frontend to respond to a database failure?;1;Issue a command to restart the database servers.;Retry the query with exponential backoff, up to a cap of 15 minutes.;Retry the query every second until it comes back online to minimize staleness of data.;Reduce the query frequency to once every hour until the database comes back online.;;;Retry the query with exponential backoff, up to a cap of 15 minutes.;Exponential backoff is a standard error handling strategy for network applications in which the client periodically retries a failed request over an increasing amount of time. If a high number of requests fail, backing off more drastically reduces the load on the server and maximizes the throughput of successful requests. The retries continue until the request is successful, or until the retry period limit is reached.
7;You are creating a model to predict housing prices. Due to budget constraints, you must run it on a single resource-constrained virtual machine. Which learning algorithm should you use?;1;Linear regression;Logistic classification;Recurrent neural network;Feedforward neural network;;;Linear regression;Linear regression is less resource-intensive compared to the other methods and works well for predicting a continuous outcome variable (such as housing prices) from one or more explanatory variables
8;You are building new real-time data warehouse for your company and will use Google BigQuery streaming inserts. There is no guarantee that data will only be sent in once but you do have a unique ID for each row of data and an event timestamp. You want to ensure that duplicates are not included while interactively querying data. Which query type should you use?;1;Include ORDER BY DESK on timestamp column and LIMIT to 1.;Use GROUP BY on the unique ID column and timestamp column and SUM on the values.;Use the LAG window function with PARTITION by unique ID along with WHERE LAG IS NOT NULL.;Use the ROW_NUMBER window function with PARTITION by unique ID along with WHERE row equals 1.;;;Use the ROW_NUMBER window function with PARTITION by unique ID along with WHERE row equals 1.;The ROW_NUMBER function assigns a unique row number to each row in a partition. By partitioning data by unique ID, each record will have a unique row number. Using a WHERE clause to filter out rows where the row number is not equal to 1 will ensure that only the first occurrence of each ID is returned in the query, thus eliminating duplicates.
9;Your company is using WILDCARD tables to query data across multiple tables with similar names. The SQL statement is currently failing with the following error:<br> Which table name will make the SQL statement work correctly?;1;'bigquery-public-data.noaa_gsod.gsod';bigquery-public-data.noaa_gsod.gsod*;'bigquery-public-data.noaa_gsod.gsod';`bigquery-public-data.noaa_gsod.gsod`;;;`bigquery-public-data.noaa_gsod.gsod*`;The wildcard character (*) is used in BigQuery to query multiple tables with similar names. When specifying the table name, the wildcard should not be enclosed within quotes.
10;Your company is in a highly regulated industry. One of your requirements is to ensure individual users have access only to the minimum amount of information required to do their jobs. You want to enforce this requirement with Google BigQuery. Which three approaches can you take? (Choose three.);3;Disable writes to certain tables.;Restrict access to tables by role.;Ensure that the data is encrypted at all times.;Restrict BigQuery API access to approved users.;Segregate data across multiple tables or databases.;Use Google Stackdriver Audit Logging to determine policy violations.;Restrict access to tables by role.|Restrict BigQuery API access to approved users.|Segregate data across multiple tables or databases.;By restricting access to tables by role, restricting BigQuery API access to approved users, and segregating data across multiple tables or databases, you can ensure that users only have access to the information they need to perform their jobs.
11;You are designing a basket abandonment system for an ecommerce company. The system will send a message to a user based on these rules:<br> <BR> No interaction by the user on the site for 1 hour, Has added more than $30 worth of products to the basket, Has not completed a transaction. You use Google Cloud Dataflow to process the data and decide if a message should be sent. How should you design the pipeline?;1;Use a fixed-time window with a duration of 60 minutes.;Use a sliding time window with a duration of 60 minutes.;Use a session window with a gap time duration of 60 minutes.;Use a global window with a time based trigger with a delay of 60 minutes.;;;Use a session window with a gap time duration of 60 minutes.;In this case, you would use session windows to group events related to a single user into sessions defined by periods of activity followed by inactivity (the gap duration). If the user has no interaction for 60 minutes, this signifies the end of a session and triggers the action (sending a message).
12;Your company handles data processing for a number of different clients. Each client prefers to use their own suite of analytics tools, with some allowing direct query access via Google BigQuery. You need to secure the data so that clients cannot see each other's data. You want to ensure appropriate access to the data. Which three steps should you take? (Choose three.);3;Load data into different partitions.;Load data into a different dataset for each client.;Put each client's BigQuery dataset into a different table.;Restrict a client's dataset to approved users.;Only allow a service account to access the datasets.;Use the appropriate identity and access management (IAM) roles for each client's users.;Load data into a different dataset for each client.|Restrict a client's dataset to approved users.|Use the appropriate identity and access management (IAM) roles for each client's users.;Loading data into a separate dataset for each client ensures data isolation, restricting a client's dataset to approved users prevents unauthorized access, and using appropriate IAM roles allows fine-grained access control to each dataset.
13;You want to process payment transactions in a point-of-sale application that will run on Google Cloud Platform. Your user base could grow exponentially, but you do not want to manage infrastructure scaling. Which Google database service should you use?;1;Cloud SQL;BigQuery;Cloud Bigtable;Cloud Datastore;;;Cloud Datastore;Cloud Datastore is a highly scalable, fully managed NoSQL database service that automatically handles sharding and replication, providing a highly reliable and durable database that scales automatically to handle your applications' load.
14;You want to use a database of information about tissue samples to classify future tissue samples as either normal or mutated. You are evaluating an unsupervised anomaly detection method for classifying the tissue samples. Which two characteristic support this method? (Choose two.);2;There are very few occurrences of mutations relative to normal samples.;There are roughly equal occurrences of both normal and mutated samples in the database.;You expect future mutations to have different features from the mutated samples in the database.;You expect future mutations to have similar features to the mutated samples in the database.;You already have labels for which samples are mutated and which are normal in the database.;;There are very few occurrences of mutations relative to normal samples.|You expect future mutations to have different features from the mutated samples in the database.;Unsupervised anomaly detection works best when there is a large imbalance in the classes (i.e., fewer mutations relative to normal samples), and when the anomalous class (mutations) are expected to exhibit different features in the future.
15;You need to store and analyze social media postings in Google BigQuery at a rate of 10,000 messages per minute in near real-time. Initially, design the application to use streaming inserts for individual postings. Your application also performs data aggregations right after the streaming inserts. You discover that the queries after streaming inserts do not exhibit strong consistency, and reports from the queries might miss in-flight data. How can you adjust your application design?;1;Re-write the application to load accumulated data every 2 minutes.;Convert the streaming insert code to batch load for individual messages.;Load the original message to Google Cloud SQL, and export the table every hour to BigQuery via streaming inserts.;Estimate the average latency for data availability after streaming inserts, and always run queries after waiting twice as long.;;;Re-write the application to load accumulated data every 2 minutes.;Batch loading accumulated data periodically is a more efficient approach as it groups many smaller operations into one larger one, reducing network overhead and increasing consistency.
16;Your startup has never implemented a formal security policy. Currently, everyone in the company has access to the datasets stored in Google BigQuery. Teams have freedom to use the service as they see fit, and they have not documented their use cases. You have been asked to secure the data warehouse. You need to discover what everyone is doing. What should you do first?;1;Use Google Stackdriver Audit Logs to review data access.;Get the identity and access management (IAM) policy of each table;Use Stackdriver Monitoring to see the usage of BigQuery query slots.;Use the Google Cloud Billing API to see what account the warehouse is being billed to.;;;Use Google Stackdriver Audit Logs to review data access.;Google Stackdriver Audit Logs allows you to review who has accessed data, giving you insight into how your BigQuery service is being used. This will be the first step in securing your data warehouse, as it will provide information on which teams or individuals are accessing certain datasets.
17;Your company is migrating their 30-node Apache Hadoop cluster to the cloud. They want to re-use Hadoop jobs they have already created and minimize the management of the cluster as much as possible. They also want to be able to persist data beyond the life of the cluster. What should you do?;1;Create a Google Cloud Dataflow job to process the data.;Create a Google Cloud Dataproc cluster that uses persistent disks for HDFS.;Create a Hadoop cluster on Google Compute Engine that uses persistent disks.;Create a Cloud Dataproc cluster that uses the Google Cloud Storage connector.;Create a Hadoop cluster on Google Compute Engine that uses Local SSD disks.;;Create a Cloud Dataproc cluster that uses the Google Cloud Storage connector.;Google Cloud Dataproc can reuse existing Hadoop jobs, provides managed clusters, and using Google Cloud Storage for data storage allows data to persist beyond the life of the cluster.
18;Business owners at your company have given you a database of bank transactions. Each row contains the user ID, transaction type, transaction location, and transaction amount. They ask you to investigate what type of machine learning can be applied to the data. Which three machine learning applications can you use? (Choose three.);3;Supervised learning to determine which transactions are most likely to be fraudulent.;Unsupervised learning to determine which transactions are most likely to be fraudulent.;Clustering to divide the transactions into N categories based on feature similarity.;Supervised learning to predict the location of a transaction.;Reinforcement learning to predict the location of a transaction.;Unsupervised learning to predict the location of a transaction.;Unsupervised learning to determine which transactions are most likely to be fraudulent.|Clustering to divide the transactions into N categories based on feature similarity.|Supervised learning to predict the location of a transaction.;In the absence of labeled data for fraudulent transactions, unsupervised learning can be used to determine anomalies which could be potential frauds. Clustering can be used to divide the transactions into N categories based on feature similarity. And supervised learning can be used to predict the location of a transaction if we have historic data with known locations.
19;Your company's on-premises Apache Hadoop servers are approaching end-of-life, and IT has decided to migrate the cluster to Google Cloud Dataproc. A like-for- like migration of the cluster would require 50 TB of Google Persistent Disk per node. The CIO is concerned about the cost of using that much block storage. You want to minimize the storage cost of the migration. What should you do?;1;Put the data into Google Cloud Storage.;Use preemptible virtual machines (VMs) for the Cloud Dataproc cluster.;Tune the Cloud Dataproc cluster so that there is just enough disk for all data.;Migrate some of the cold data into Google Cloud Storage, and keep only the hot data in Persistent Disk.;;;Put the data into Google Cloud Storage.;Google Cloud Storage (GCS) offers a highly scalable and durable storage option which is cost-effective compared to Persistent Disk. With the Google Cloud Storage connector, Dataproc can directly operate on data stored in GCS, enabling you to separate storage and compute, increasing flexibility and potentially reducing costs.
20;You work for a car manufacturer and have set up a data pipeline using Google Cloud Pub/Sub to capture anomalous sensor events. You are using a push subscription in Cloud Pub/Sub that calls a custom HTTPS endpoint that you have created to take action of these anomalous events as they occur. Your custom HTTPS endpoint keeps getting an inordinate amount of duplicate messages. What is the most likely cause of these duplicate messages?;1;The message body for the sensor event is too large.;Your custom endpoint has an out-of-date SSL certificate.;The Cloud Pub/Sub topic has too many messages published to it.;Your custom endpoint is not acknowledging messages within the acknowledgement deadline.;;;Your custom endpoint is not acknowledging messages within the acknowledgement deadline.;Cloud Pub/Sub guarantees at-least-once message delivery, which means that occasional duplicates are possible in the event of push failures or if messages aren't acknowledged in a timely manner. If your endpoint does not acknowledge the message within the deadline, the message is sent again because Pub/Sub considers that the message delivery has failed.
21;Your company uses a proprietary system to send inventory data every 6 hours to a data ingestion service in the cloud. Transmitted data includes a payload of several fields and the timestamp of the transmission. If there are any concerns about a transmission, the system re-transmits the data. How should you deduplicate the data most efficiency?;1;Assign global unique identifiers (GUID) to each data entry.;Compute the hash value of each data entry, and compare it with all historical data.;Store each data entry as the primary key in a separate database and apply an index.;Maintain a database table to store the hash value and other metadata for each data entry.;;;Assign global unique identifiers (GUID) to each data entry.;"Assigning a globally unique identifier (GUID) to each data entry is an effective way to deduplicate data in this scenario. GUIDs are unique across all space and time, so even if the same data is transmitted multiple times (due to concerns about transmission), the GUID will stay constant. Then, when processing the data, you can simply ignore entries that have a GUID that you have already processed, thus effectively deduplicating your data.<br>Answer ""D"" is not as efficient or error-proof due to two reasons<br>1. You need to calculate hash at sender as well as at receiver end to do the comparison. Waste of computing power.<br>2. Even if we discount the computing power, we should note that the system is sending inventory information. Two messages sent at different can denote same inventory level (and thus have same hash). Adding sender time stamp to hash will defeat the purpose of using hash as now retried messages will have different timestamp and a different hash.<br>if timestamp is used as message creation timestamp than that can also be used as a UUID."
22;Your company has hired a new data scientist who wants to perform complicated analyses across very large datasets stored in Google Cloud Storage and in a Cassandra cluster on Google Compute Engine. The scientist primarily wants to create labelled data sets for machine learning projects, along with some visualization tasks. She reports that her laptop is not powerful enough to perform her tasks and it is slowing her down. You want to help her perform her tasks. What should you do?;1;Run a local version of Jupiter on the laptop.;Grant the user access to Google Cloud Shell.;Host a visualization tool on a VM on Google Compute Engine.;Deploy Google Cloud Datalab to a virtual machine (VM) on Google Compute Engine.;;;Deploy Google Cloud Datalab to a virtual machine (VM) on Google Compute Engine.;Google Cloud Datalab is an interactive tool for exploration, transformation, analysis and visualization of data on Google Cloud. It runs on Google Compute Engine and connects to multiple cloud services easily so you can focus on your data science tasks. This will allow the data scientist to work with large datasets without being limited by the resources on her laptop
23;You are deploying 10,000 new Internet of Things devices to collect temperature data in your warehouses globally. You need to process, store and analyze these very large datasets in real time. What should you do?;1;Send the data to Google Cloud Datastore and then export to BigQuery.;Send the data to Google Cloud Pub/Sub, stream Cloud Pub/Sub to Google Cloud Dataflow, and store the data in Google BigQuery.;Send the data to Cloud Storage and then spin up an Apache Hadoop cluster as needed in Google Cloud Dataproc whenever analysis is required.;Export logs in batch to Google Cloud Storage and then spin up a Google Cloud SQL instance, import the data from Cloud Storage, and run an analysis as needed.;;;Send the data to Google Cloud Pub/Sub, stream Cloud Pub/Sub to Google Cloud Dataflow, and store the data in Google BigQuery.;Google Cloud Pub/Sub allows you to collect the data from IoT devices, Google Cloud Dataflow allows real-time processing and transformation of data, and Google BigQuery is a fully-managed and highly scalable data warehouse for analytics, perfect for storing processed data for analysis
24;You have spent a few days loading data from comma-separated values (CSV) files into the Google BigQuery table CLICK_STREAM. The column DT stores the epoch time of click events. For convenience, you chose a simple schema where every field is treated as the STRING type. Now, you want to compute web session durations of users who visit your site, and you want to change its data type to the TIMESTAMP. You want to minimize the migration effort without making future queries computationally expensive. What should you do?;1;Delete the table CLICK_STREAM, and then re-create it such that the column DT is of the TIMESTAMP type. Reload the data.;Add a column TS of the TIMESTAMP type to the table CLICK_STREAM, and populate the numeric values from the column TS for each row. Reference the column TS instead of the column DT from now on.;Create a view CLICK_STREAM_V, where strings from the column DT are cast into TIMESTAMP values. Reference the view CLICK_STREAM_V instead of the table CLICK_STREAM from now on.;Construct a query to return every row of the table CLICK_STREAM, while using the built-in function to cast strings from the column DT into TIMESTAMP values. Run the query into a destination table NEW_CLICK_STREAM, in which the column TS is the TIMESTAMP type. Reference the table NEW_CLICK_STREAM instead of the table CLICK_STREAM from now on. In the future, new data is loaded into the table NEW_CLICK_STREAM.;;;Construct a query to return every row of the table CLICK_STREAM, while using the built-in function to cast strings from the column DT into TIMESTAMP values. Run the query into a destination table NEW_CLICK_STREAM, in which the column TS is the TIMESTAMP type. Reference the table NEW_CLICK_STREAM instead of the table CLICK_STREAM from now on. In the future, new data is loaded into the table NEW_CLICK_STREAM.;Construct a query to return every row of the table CLICK_STREAM, while using the built-in function to cast strings from the column DT into TIMESTAMP values. Run the query into a destination table NEW_CLICK_STREAM, in which the column TS is the TIMESTAMP type. This approach allows for changing the data type of the existing column by creating a new table and transferring data from the old table to the new one, with casting to the necessary data type. It doesn't require reloading of the original data and doesn't impact the efficiency of future queries.
25;You want to use Google Stackdriver Logging to monitor Google BigQuery usage. You need an instant notification to be sent to your monitoring tool when new data is appended to a certain table using an insert job, but you do not want to receive notifications for other tables. What should you do?;1;Make a call to the Stackdriver API to list all logs, and apply an advanced filter.;In the Stackdriver logging admin interface, and enable a log sink export to BigQuery.;In the Stackdriver logging admin interface, enable a log sink export to Google Cloud Pub/Sub, and subscribe to the topic from your monitoring tool.;Add two columns to the table CLICK STREAM: TS of the TIMESTAMP type and IS_NEW of the BOOLEAN type. Reload all data in append mode. For each appended row, set the value of IS_NEW to true. For future queries, reference the column TS instead of the column DT, with the WHERE clause ensuring that the value of IS_NEW must be true.;Using the Stackdriver API, create a project sink with advanced log filter to export to Pub/Sub, and subscribe to the topic from your monitoring tool.;;Using the Stackdriver API, create a project sink with advanced log filter to export to Pub/Sub, and subscribe to the topic from your monitoring tool.;Using the Stackdriver API, create a project sink with an advanced log filter to export to Pub/Sub, and subscribe to the topic from your monitoring tool. This approach allows you to specifically target the events of interest (in this case, new data being appended to a specific table). You can then export these events to Pub/Sub, where your monitoring tool can subscribe to the relevant topic and receive instant notifications.
26;You are working on a sensitive project involving private user data. You have set up a project on Google Cloud Platform to house your work internally. An external consultant is going to assist with coding a complex transformation in a Google Cloud Dataflow pipeline for your project. How should you maintain users' privacy?;1;Grant the consultant the Viewer role on the project.;Grant the consultant the Cloud Dataflow Developer role on the project.;Create a service account and allow the consultant to log on with it.;Create an anonymized sample of the data for the consultant to work with in a different project.;;;Create an anonymized sample of the data for the consultant to work with in a different project.;The safest way to maintain user privacy is to create an anonymized sample of the data for the consultant to work with. This approach allows the consultant to assist with coding the complex transformation without accessing any sensitive user data.
27;You are building a model to predict whether or not it will rain on a given day. You have thousands of input features and want to see if you can improve training speed by removing some features while having a minimum effect on model accuracy. What can you do?;1;Eliminate features that are highly correlated to the output labels.;Combine highly co-dependent features into one representative feature.;Instead of feeding in each feature individually, average their values in batches of 3.;Remove the features that have null values for more than 50% of the training records.;;;Combine highly co-dependent features into one representative feature.;Combining co-dependent features can reduce the dimensionality of the data, which can increase training speed with minimal effect on model accuracy. This is because co-dependent features tend to carry similar information, and reducing them into a single feature retains most of this information.
28;Your company is performing data preprocessing for a learning algorithm in Google Cloud Dataflow. Numerous data logs are being generated during this step, and the team wants to analyze them. Due to the dynamic nature of the campaign, the data is growing exponentially every hour. The data scientists have written the following code to read the data for a new key features in the logs.<br> BigQueryIO.Read - .named('ReadLogData') .from('clouddataflow-readonly:<br>samples.log_data')<br> You want to improve the performance of this data read. What should you do?;1;Specify the TableReference object in the code.;Use .fromQuery operation to read specific fields from the table.;Use of both the Google BigQuery TableSchema and TableFieldSchema classes.;Call a transform that returns TableRow objects, where each element in the PCollection represents a single row in the table.;;;Use .fromQuery operation to read specific fields from the table.;Instead of reading all fields from the table, using .fromQuery operation can help to improve performance by only reading the specific fields that are needed. This reduces the amount of data that needs to be processed.
29;Your company is streaming real-time sensor data from their factory floor into Bigtable and they have noticed extremely poor performance. How should the row key be redesigned to improve Bigtable performance on queries that populate real-time dashboards?;1;Use a row key of the form <timestamp>.;Use a row key of the form <sensorid>.;Use a row key of the form <timestamp>#<sensorid>.;Use a row key of the form <sensorid>#<timestamp>.;;;Use a row key of the form <sensorid>#<timestamp>.;Bigtable stores rows in lexicographic order by key, and it distributes rows across nodes by key ranges. Having sensorid first will distribute writes across nodes, and having timestamp next will allow efficient time range scans for a particular sensor, improving the performance for queries populating real-time dashboards.
30;Your company's customer and order databases are often under heavy load. This makes performing analytics against them difficult without harming operations. The databases are in a MySQL cluster, with nightly backups taken using mysqldump. You want to perform analytics with minimal impact on operations. What should you do?;1;Add a node to the MySQL cluster and build an OLAP cube there.;Use an ETL tool to load the data from MySQL into Google BigQuery.;Connect an on-premises Apache Hadoop cluster to MySQL and perform ETL.;Mount the backups to Google Cloud SQL, and then process the data using Google Cloud Dataproc.;;;Use an ETL tool to load the data from MySQL into Google BigQuery.;Google BigQuery is designed for performing analytics on large data sets, and it separates compute and storage, allowing each to scale independently. This would allow you to perform the necessary analytics without impacting the operations of your MySQL database.
31;You have Google Cloud Dataflow streaming pipeline running with a Google Cloud Pub/Sub subscription as the source. You need to make an update to the code that will make the new Cloud Dataflow pipeline incompatible with the current version. You do not want to lose any data when making this update. What should you do?;1;Update the current pipeline and use the drain flag.;Update the current pipeline and provide the transform mapping JSON object.;Create a new pipeline that has the same Cloud Pub/Sub subscription and cancel the old pipeline.;Create a new pipeline that has a new Cloud Pub/Sub subscription and cancel the old pipeline.;;;Update the current pipeline and use the drain flag.;The 'drain' option allows the current Dataflow job to finish processing its current data but does not accept any new data. The job finishes and updates its state in the job list to 'drained'. Any new pipeline updates can be done without loss of data
32;Your company is running their first dynamic campaign, serving different offers by analyzing real-time data during the holiday season. The data scientists are collecting terabytes of data that rapidly grows every hour during their 30-day campaign. They are using Google Cloud Dataflow to preprocess the data and collect the feature (signals) data that is needed for the machine learning model in Google Cloud Bigtable. The team is observing suboptimal performance with reads and writes of their initial load of 10 TB of data. They want to improve this performance while minimizing cost. What should they do?;1;Redefine the schema by evenly distributing reads and writes across the row space of the table.;The performance issue should be resolved over time as the site of the BigDate cluster is increased.;Redesign the schema to use a single row key to identify values that need to be updated frequently in the cluster.;Redesign the schema to use row keys based on numeric IDs that increase sequentially per user viewing the offers.;;;Redefine the schema by evenly distributing reads and writes across the row space of the table.;In Google Cloud Bigtable, having a well-designed schema that evenly distributes reads and writes across the row space of the table can significantly improve performance, as it allows the system to effectively spread the workload across multiple nodes.
33;Your software uses a simple JSON format for all messages. These messages are published to Google Cloud Pub/Sub, then processed with Google Cloud Dataflow to create a real-time dashboard for the CFO. During testing, you notice that some messages are missing in the dashboard. You check the logs, and all messages are being published to Cloud Pub/Sub successfully. What should you do next?;1;Check the dashboard application to see if it is not displaying correctly.;Run a fixed dataset through the Cloud Dataflow pipeline and analyze the output.;Use Google Stackdriver Monitoring on Cloud Pub/Sub to find the missing messages.;Switch Cloud Dataflow to pull messages from Cloud Pub/Sub instead of Cloud Pub/Sub pushing messages to Cloud Dataflow.;;;Run a fixed dataset through the Cloud Dataflow pipeline and analyze the output.;Given that messages are published successfully to Cloud Pub/Sub, it's possible that the issue lies in the processing stage (Cloud Dataflow). Running a fixed dataset through the pipeline can help identify if there are any issues in the processing or downstream stages that cause the missing messages
34;"Flowlogistic Case Study -<br><br>Company Overview -<br>Flowlogistic is a leading logistics and supply chain provider. They help businesses throughout the world manage their resources and transport them to their final destination. The company has grown rapidly, expanding their offerings to include rail, truck, aircraft, and oceanic shipping.<br><br>Company Background -<br>The company started as a regional trucking company, and then expanded into other logistics market. Because they have not updated their infrastructure, managing and tracking orders and shipments has become a bottleneck. To improve operations, Flowlogistic developed proprietary technology for tracking shipments in real time at the parcel level. However, they are unable to deploy it because their technology stack, based on Apache Kafka, cannot support the processing volume. In addition, Flowlogistic wants to further analyze their orders and shipments to determine how best to deploy their resources.<br><br>Solution Concept -<br>Flowlogistic wants to implement two concepts using the cloud:<br><br> -Use their proprietary technology in a real-time inventory-tracking system that indicates the location of their loads<br><br> -Perform analytics on all their orders and shipment logs, which contain both structured and unstructured data, to determine how best to deploy resources, which markets to expand info. They also want to use predictive analytics to learn earlier when a shipment will be delayed.<br><br>Existing Technical Environment -<br>Flowlogistic architecture resides in a single data center:<br><br> -Databases<br>8 physical servers in 2 clusters<br>- SQL Server `"" user data, inventory, static data<br>3 physical servers<br>- Cassandra `"" metadata, tracking messages<br>10 Kafka servers `"" tracking message aggregation and batch insert<br><br> -Application servers `"" customer front end, middleware for order/customs<br>60 virtual machines across 20 physical servers<br>- Tomcat `"" Java services<br>- Nginx `"" static content<br>- Batch servers<br><br> -Storage appliances<br>- iSCSI for virtual machine (VM) hosts<br>- Fibre Channel storage area network (FC SAN) `"" SQL server storage<br>- Network-attached storage (NAS) image storage, logs, backups<br><br> -10 Apache Hadoop /Spark servers<br>- Core Data Lake<br>- Data analysis workloads<br><br> -20 miscellaneous servers<br>- Jenkins, monitoring, bastion hosts,<br><br>Business Requirements -<br>Build a reliable and reproducible environment with scaled panty of production.<br><br><br> -Aggregate data in a centralized Data Lake for analysis<br><br> -Use historical data to perform predictive analytics on future shipments<br><br> -Accurately track every shipment worldwide using proprietary technology<br><br> -Improve business agility and speed of innovation through rapid provisioning of new resources<br><br> -Analyze and optimize architecture for performance in the cloud<br><br> -Migrate fully to the cloud if all other requirements are met<br><br>Technical Requirements -<br><br> -Handle both streaming and batch data<br><br> -Migrate existing Hadoop workloads<br><br> -Ensure architecture is scalable and elastic to meet the changing demands of the company.<br><br> -Use managed services whenever possible<br><br> -Encrypt data flight and at rest<br><br> -Connect a VPN between the production data center and cloud environment<br><br>SEO Statement -<br>We have grown so quickly that our inability to upgrade our infrastructure is really hampering further growth and efficiency. We are efficient at moving shipments around the world, but we are inefficient at moving data around.<br>We need to organize our information so we can more easily understand where our customers are and what they are shipping.<br><br>CTO Statement -<br>IT has never been a priority for us, so as our data has grown, we have not invested enough in our technology. I have a good staff to manage IT, but they are so busy managing our infrastructure that I cannot get them to do the things that really matter, such as organizing our data, building the analytics, and figuring out how to implement the CFO' s tracking technology.<br><br>CFO Statement -<br>Part of our competitive advantage is that we penalize ourselves for late shipments and deliveries. Knowing where out shipments are at all times has a direct correlation to our bottom line and profitability. Additionally, I don't want to commit capital to building out a server environment.<br>Flowlogistic wants to use Google BigQuery as their primary analysis system, but they still have Apache Hadoop and Spark workloads that they cannot move to<br>BigQuery. Flowlogistic does not know how to store the data that is common to both workloads. What should they do? <br>";1;A. Store the common data in BigQuery as partitioned tables.;B. Store the common data in BigQuery and expose authorized views.;C. Store the common data encoded as Avro in Google Cloud Storage.;D. Store he common data in the HDFS storage for a Google Cloud Dataproc cluster.;;;C. Store the common data encoded as Avro in Google Cloud Storage.;
35;"Flowlogistic Case Study -<br>Company Overview -<br>Flowlogistic is a leading logistics and supply chain provider. They help businesses throughout the world manage their resources and transport them to their final destination. The company has grown rapidly, expanding their offerings to include rail, truck, aircraft, and oceanic shipping.<br>Company Background -<br>The company started as a regional trucking company, and then expanded into other logistics market. Because they have not updated their infrastructure, managing and tracking orders and shipments has become a bottleneck. To improve operations, Flowlogistic developed proprietary technology for tracking shipments in real time at the parcel level. However, they are unable to deploy it because their technology stack, based on Apache Kafka, cannot support the processing volume. In addition, Flowlogistic wants to further analyze their orders and shipments to determine how best to deploy their resources.<br>Solution Concept -<br>Flowlogistic wants to implement two concepts using the cloud:<br> - Use their proprietary technology in a real-time inventory-tracking system that indicates the location of their loads<br> - Perform analytics on all their orders and shipment logs, which contain both structured and unstructured data, to determine how best to deploy resources, which markets to expand info. They also want to use predictive analytics to learn earlier when a shipment will be delayed.<br>Existing Technical Environment -<br>Flowlogistic architecture resides in a single data center:<br> - Databases<br>8 physical servers in 2 clusters<br>- SQL Server `"" user data, inventory, static data<br>3 physical servers<br>- Cassandra `"" metadata, tracking messages<br>10 Kafka servers `"" tracking message aggregation and batch insert<br> - Application servers `"" customer front end, middleware for order/customs<br>60 virtual machines across 20 physical servers<br>- Tomcat `"" Java services<br>- Nginx `"" static content<br>- Batch servers<br> - Storage appliances<br>- iSCSI for virtual machine (VM) hosts<br>- Fibre Channel storage area network (FC SAN) `"" SQL server storage<br>- Network-attached storage (NAS) image storage, logs, backups<br> - 10 Apache Hadoop /Spark servers<br>- Core Data Lake<br>- Data analysis workloads<br> - 20 miscellaneous servers<br>- Jenkins, monitoring, bastion hosts,<br>Business Requirements -<br> - Build a reliable and reproducible environment with scaled panty of production.<br> - Aggregate data in a centralized Data Lake for analysis<br> - Use historical data to perform predictive analytics on future shipments<br> - Accurately track every shipment worldwide using proprietary technology<br> - Improve business agility and speed of innovation through rapid provisioning of new resources<br> - Analyze and optimize architecture for performance in the cloud<br> - Migrate fully to the cloud if all other requirements are met<br>Technical Requirements -<br> - Handle both streaming and batch data<br> - Migrate existing Hadoop workloads<br> - Ensure architecture is scalable and elastic to meet the changing demands of the company.<br> - Use managed services whenever possible<br> - Encrypt data flight and at rest<br> - Connect a VPN between the production data center and cloud environment<br>SEO Statement -<br>We have grown so quickly that our inability to upgrade our infrastructure is really hampering further growth and efficiency. We are efficient at moving shipments around the world, but we are inefficient at moving data around.<br>We need to organize our information so we can more easily understand where our customers are and what they are shipping.<br>CTO Statement -<br>IT has never been a priority for us, so as our data has grown, we have not invested enough in our technology. I have a good staff to manage IT, but they are so busy managing our infrastructure that I cannot get them to do the things that really matter, such as organizing our data, building the analytics, and figuring out how to implement the CFO' s tracking technology.<br>CFO Statement -<br>Part of our competitive advantage is that we penalize ourselves for late shipments and deliveries. Knowing where out shipments are at all times has a direct correlation to our bottom line and profitability. Additionally, I don't want to commit capital to building out a server environment.<br>Flowlogistic's management has determined that the current Apache Kafka servers cannot handle the data volume for their real-time inventory tracking system.<br>You need to build a new system on Google Cloud Platform (GCP) that will feed the proprietary tracking software. The system must be able to ingest data from a variety of global sources, process and query in real-time, and store the data reliably. Which combination of GCP products should you choose?";1;A. Cloud Pub/Sub, Cloud Dataflow, and Cloud Storage;B. Cloud Pub/Sub, Cloud Dataflow, and Local SSD;C. Cloud Pub/Sub, Cloud SQL, and Cloud Storage;D. Cloud Load Balancing, Cloud Dataflow, and Cloud Storage;;;A. Cloud Pub/Sub, Cloud Dataflow, and Cloud Storage;
36;"Flowlogistic Case Study -<br>Company Overview -<br>Flowlogistic is a leading logistics and supply chain provider. They help businesses throughout the world manage their resources and transport them to their final destination. The company has grown rapidly, expanding their offerings to include rail, truck, aircraft, and oceanic shipping.<br>Company Background -<br>The company started as a regional trucking company, and then expanded into other logistics market. Because they have not updated their infrastructure, managing and tracking orders and shipments has become a bottleneck. To improve operations, Flowlogistic developed proprietary technology for tracking shipments in real time at the parcel level. However, they are unable to deploy it because their technology stack, based on Apache Kafka, cannot support the processing volume. In addition, Flowlogistic wants to further analyze their orders and shipments to determine how best to deploy their resources.<br>Solution Concept -<br>Flowlogistic wants to implement two concepts using the cloud:<br>Use their proprietary technology in a real-time inventory-tracking system that indicates the location of their loads<br>=> Perform analytics on all their orders and shipment logs, which contain both structured and unstructured data, to determine how best to deploy resources, which markets to expand info. They also want to use predictive analytics to learn earlier when a shipment will be delayed.<br>Existing Technical Environment -<br>Flowlogistic architecture resides in a single data center:<br>=> Databases<br>8 physical servers in 2 clusters<br>- SQL Server `"" user data, inventory, static data<br>3 physical servers<br>- Cassandra `"" metadata, tracking messages<br>10 Kafka servers `"" tracking message aggregation and batch insert<br>=> Application servers `"" customer front end, middleware for order/customs<br>60 virtual machines across 20 physical servers<br>- Tomcat `"" Java services<br>- Nginx `"" static content<br>- Batch servers<br>=> Storage appliances<br>- iSCSI for virtual machine (VM) hosts<br>- Fibre Channel storage area network (FC SAN) `"" SQL server storage<br>- Network-attached storage (NAS) image storage, logs, backups<br>=> 10 Apache Hadoop /Spark servers<br>- Core Data Lake<br>- Data analysis workloads<br>=> 20 miscellaneous servers<br>- Jenkins, monitoring, bastion hosts,<br>Business Requirements -<br>=> Build a reliable and reproducible environment with scaled panty of production.<br>=> Aggregate data in a centralized Data Lake for analysis<br>=> Use historical data to perform predictive analytics on future shipments<br>=> Accurately track every shipment worldwide using proprietary technology<br>=> Improve business agility and speed of innovation through rapid provisioning of new resources<br>=> Analyze and optimize architecture for performance in the cloud<br>=> Migrate fully to the cloud if all other requirements are met<br>Technical Requirements -<br>Handle both streaming and batch data<br>=> Migrate existing Hadoop workloads<br>=> Ensure architecture is scalable and elastic to meet the changing demands of the company.<br>=> Use managed services whenever possible<br>=> Encrypt data flight and at rest<br>=> Connect a VPN between the production data center and cloud environment<br>SEO Statement -<br>We have grown so quickly that our inability to upgrade our infrastructure is really hampering further growth and efficiency. We are efficient at moving shipments around the world, but we are inefficient at moving data around.<br>We need to organize our information so we can more easily understand where our customers are and what they are shipping.<br>CTO Statement -<br>IT has never been a priority for us, so as our data has grown, we have not invested enough in our technology. I have a good staff to manage IT, but they are so busy managing our infrastructure that I cannot get them to do the things that really matter, such as organizing our data, building the analytics, and figuring out how to implement the CFO' s tracking technology.<br>CFO Statement -<br>Part of our competitive advantage is that we penalize ourselves for late shipments and deliveries. Knowing where out shipments are at all times has a direct correlation to our bottom line and profitability. Additionally, I don't want to commit capital to building out a server environment.<br>Flowlogistic's CEO wants to gain rapid insight into their customer base so his sales team can be better informed in the field. This team is not very technical, so they've purchased a visualization tool to simplify the creation of BigQuery reports. However, they've been overwhelmed by all the data in the table, and are spending a lot of money on queries trying to find the data they need. You want to solve their problem in the most cost-effective way. What should you do?";1;A. Export the data into a Google Sheet for virtualization.;B. Create an additional table with only the necessary columns.;C. Create a view on the table to present to the virtualization tool.;D. Create identity and access management (IAM) roles on the appropriate columns, so only they appear in a query.;;;C. Create a view on the table to present to the virtualization tool.;
37;"Flowlogistic Case Study -<br>Company Overview -<br>Flowlogistic is a leading logistics and supply chain provider. They help businesses throughout the world manage their resources and transport them to their final destination. The company has grown rapidly, expanding their offerings to include rail, truck, aircraft, and oceanic shipping.<br>Company Background -<br>The company started as a regional trucking company, and then expanded into other logistics market. Because they have not updated their infrastructure, managing and tracking orders and shipments has become a bottleneck. To improve operations, Flowlogistic developed proprietary technology for tracking shipments in real time at the parcel level. However, they are unable to deploy it because their technology stack, based on Apache Kafka, cannot support the processing volume. In addition, Flowlogistic wants to further analyze their orders and shipments to determine how best to deploy their resources.<br>Solution Concept -<br>Flowlogistic wants to implement two concepts using the cloud:<br>=> Use their proprietary technology in a real-time inventory-tracking system that indicates the location of their loads<br>=> Perform analytics on all their orders and shipment logs, which contain both structured and unstructured data, to determine how best to deploy resources, which markets to expand info. They also want to use predictive analytics to learn earlier when a shipment will be delayed.<br>Existing Technical Environment -<br>Flowlogistic architecture resides in a single data center:<br>=> Databases<br>8 physical servers in 2 clusters<br>- SQL Server `"" user data, inventory, static data<br>3 physical servers<br>- Cassandra `"" metadata, tracking messages<br>10 Kafka servers `"" tracking message aggregation and batch insert<br>=> Application servers `"" customer front end, middleware for order/customs<br>60 virtual machines across 20 physical servers<br>- Tomcat `"" Java services<br>- Nginx `"" static content<br>- Batch servers<br>=> Storage appliances<br>- iSCSI for virtual machine (VM) hosts<br>- Fibre Channel storage area network (FC SAN) `"" SQL server storage<br>- Network-attached storage (NAS) image storage, logs, backups<br>=> 10 Apache Hadoop /Spark servers<br>- Core Data Lake<br>- Data analysis workloads<br>=> 20 miscellaneous servers<br>- Jenkins, monitoring, bastion hosts,<br>Business Requirements -<br>=> Build a reliable and reproducible environment with scaled panty of production.<br>=> Aggregate data in a centralized Data Lake for analysis<br>=> Use historical data to perform predictive analytics on future shipments<br>=> Accurately track every shipment worldwide using proprietary technology<br>=> Improve business agility and speed of innovation through rapid provisioning of new resources<br>=> Analyze and optimize architecture for performance in the cloud<br>=> Migrate fully to the cloud if all other requirements are met<br>Technical Requirements -<br>=> Handle both streaming and batch data<br>=> Migrate existing Hadoop workloads<br>=> Ensure architecture is scalable and elastic to meet the changing demands of the company.<br>=> Use managed services whenever possible<br>=> Encrypt data flight and at rest<br>=> Connect a VPN between the production data center and cloud environment<br>SEO Statement -<br>We have grown so quickly that our inability to upgrade our infrastructure is really hampering further growth and efficiency. We are efficient at moving shipments around the world, but we are inefficient at moving data around.<br>We need to organize our information so we can more easily understand where our customers are and what they are shipping.<br>CTO Statement -<br>IT has never been a priority for us, so as our data has grown, we have not invested enough in our technology. I have a good staff to manage IT, but they are so busy managing our infrastructure that I cannot get them to do the things that really matter, such as organizing our data, building the analytics, and figuring out how to implement the CFO' s tracking technology.<br>CFO Statement -<br>Part of our competitive advantage is that we penalize ourselves for late shipments and deliveries. Knowing where out shipments are at all times has a direct correlation to our bottom line and profitability. Additionally, I don't want to commit capital to building out a server environment.<br>Flowlogistic is rolling out their real-time inventory tracking system. The tracking devices will all send package-tracking messages, which will now go to a single<br>Google Cloud Pub/Sub topic instead of the Apache Kafka cluster. A subscriber application will then process the messages for real-time reporting and store them in<br>Google BigQuery for historical analysis. You want to ensure the package data can be analyzed over time.<br>Which approach should you take? <br>";1;A. Attach the timestamp on each message in the Cloud Pub/Sub subscriber application as they are received.;B. Attach the timestamp and Package ID on the outbound message from each publisher device as they are sent to Clod Pub/Sub.;C. Use the NOW () function in BigQuery to record the event's time.;D. Use the automatically generated timestamp from Cloud Pub/Sub to order the data.;;;B. Attach the timestamp and Package ID on the outbound message from each publisher device as they are sent to Clod Pub/Sub.;
38;"MJTelco Case Study -<br>Company Overview -<br>MJTelco is a startup that plans to build networks in rapidly growing, underserved markets around the world. The company has patents for innovative optical communications hardware. Based on these patents, they can create many reliable, high-speed backbone links with inexpensive hardware.<br>Company Background -<br>Founded by experienced telecom executives, MJTelco uses technologies originally developed to overcome communications challenges in space. Fundamental to their operation, they need to create a distributed data infrastructure that drives real-time analysis and incorporates machine learning to continuously optimize their topologies. Because their hardware is inexpensive, they plan to overdeploy the network allowing them to account for the impact of dynamic regional politics on location availability and cost.<br>Their management and operations teams are situated all around the globe creating many-to-many relationship between data consumers and provides in their system. After careful consideration, they decided public cloud is the perfect environment to support their needs.<br>Solution Concept -<br>MJTelco is running a successful proof-of-concept (PoC) project in its labs. They have two primary needs:<br>? Scale and harden their PoC to support significantly more data flows generated when they ramp to more than 50,000 installations.<br>? Refine their machine-learning cycles to verify and improve the dynamic models they use to control topology definition.<br>MJTelco will also use three separate operating environments `"" development/test, staging, and production `"" to meet the needs of running experiments, deploying new features, and serving production customers.<br>Business Requirements -<br>? Scale up their production environment with minimal cost, instantiating resources when and where needed in an unpredictable, distributed telecom user community.<br>? Ensure security of their proprietary data to protect their leading-edge machine learning and analysis.<br>? Provide reliable and timely access to data for analysis from distributed research workers<br>? Maintain isolated environments that support rapid iteration of their machine-learning models without affecting their customers.<br>Technical Requirements -<br>? Ensure secure and efficient transport and storage of telemetry data<br>? Rapidly scale instances to support between 10,000 and 100,000 data providers with multiple flows each.<br>? Allow analysis and presentation against data tables tracking up to 2 years of data storing approximately 100m records/day<br>? Support rapid iteration of monitoring infrastructure focused on awareness of data pipeline problems both in telemetry flows and in production learning cycles.<br>CEO Statement -<br>Our business model relies on our patents, analytics and dynamic machine learning. Our inexpensive hardware is organized to be highly reliable, which gives us cost advantages. We need to quickly stabilize our large distributed data pipelines to meet our reliability and capacity commitments.<br>CTO Statement -<br>Our public cloud services must operate as advertised. We need resources that scale and keep our data secure. We also need environments in which our data scientists can carefully study and quickly adapt our models. Because we rely on automation to process our data, we also need our development and test environments to work as we iterate.<br>CFO Statement -<br>The project is too large for us to maintain the hardware and software required for the data and analysis. Also, we cannot afford to staff an operations team to monitor so many data feeds, so we will rely on automation and infrastructure. Google Cloud's machine learning will allow our quantitative researchers to work on our high-value problems instead of problems with our data pipelines.<br>MJTelco's Google Cloud Dataflow pipeline is now ready to start receiving data from the 50,000 installations. You want to allow Cloud Dataflow to scale its compute power up as required. Which Cloud Dataflow pipeline configuration setting should you update?";1;A. The zone;B. The number of workers;C. The disk size per worker;D. The maximum number of workers;;;D. The maximum number of workers;
39;"MJTelco Case Study -<br>Company Overview -<br>MJTelco is a startup that plans to build networks in rapidly growing, underserved markets around the world. The company has patents for innovative optical communications hardware. Based on these patents, they can create many reliable, high-speed backbone links with inexpensive hardware.<br>Company Background -<br>Founded by experienced telecom executives, MJTelco uses technologies originally developed to overcome communications challenges in space. Fundamental to their operation, they need to create a distributed data infrastructure that drives real-time analysis and incorporates machine learning to continuously optimize their topologies. Because their hardware is inexpensive, they plan to overdeploy the network allowing them to account for the impact of dynamic regional politics on location availability and cost.<br>Their management and operations teams are situated all around the globe creating many-to-many relationship between data consumers and provides in their system. After careful consideration, they decided public cloud is the perfect environment to support their needs.<br>Solution Concept -<br>MJTelco is running a successful proof-of-concept (PoC) project in its labs. They have two primary needs:<br>=> Scale and harden their PoC to support significantly more data flows generated when they ramp to more than 50,000 installations.<br>=> Refine their machine-learning cycles to verify and improve the dynamic models they use to control topology definition.<br>MJTelco will also use three separate operating environments `"" development/test, staging, and production `"" to meet the needs of running experiments, deploying new features, and serving production customers.<br>Business Requirements -<br>=> Scale up their production environment with minimal cost, instantiating resources when and where needed in an unpredictable, distributed telecom user community.<br>=> Ensure security of their proprietary data to protect their leading-edge machine learning and analysis.<br>=> Provide reliable and timely access to data for analysis from distributed research workers<br>Maintain isolated environments that support rapid iteration of their machine-learning models without affecting their customers.<br>Technical Requirements -<br>=> Ensure secure and efficient transport and storage of telemetry data<br>=> Rapidly scale instances to support between 10,000 and 100,000 data providers with multiple flows each.<br>=> Allow analysis and presentation against data tables tracking up to 2 years of data storing approximately 100m records/day<br>=> Support rapid iteration of monitoring infrastructure focused on awareness of data pipeline problems both in telemetry flows and in production learning cycles.<br>CEO Statement -<br>Our business model relies on our patents, analytics and dynamic machine learning. Our inexpensive hardware is organized to be highly reliable, which gives us cost advantages. We need to quickly stabilize our large distributed data pipelines to meet our reliability and capacity commitments.<br>CTO Statement -<br>Our public cloud services must operate as advertised. We need resources that scale and keep our data secure. We also need environments in which our data scientists can carefully study and quickly adapt our models. Because we rely on automation to process our data, we also need our development and test environments to work as we iterate.<br>CFO Statement -<br>The project is too large for us to maintain the hardware and software required for the data and analysis. Also, we cannot afford to staff an operations team to monitor so many data feeds, so we will rely on automation and infrastructure. Google Cloud's machine learning will allow our quantitative researchers to work on our high-value problems instead of problems with our data pipelines.<br>You need to compose visualizations for operations teams with the following requirements:<br>=> The report must include telemetry data from all 50,000 installations for the most resent 6 weeks (sampling once every minute).<br>=> The report must not be more than 3 hours delayed from live data.<br>=> The actionable report should only show suboptimal links.<br>=> Most suboptimal links should be sorted to the top.<br>=> Suboptimal links can be grouped and filtered by regional geography.<br>=> User response time to load the report must be <5 seconds.<br>Which approach meets the requirements?";1;A. Load the data into Google Sheets, use formulas to calculate a metric, and use filters/sorting to show only suboptimal links in a table.;B. Load the data into Google BigQuery tables, write Google Apps Script that queries the data, calculates the metric, and shows only suboptimal rows in a table in Google Sheets.;C. Load the data into Google Cloud Datastore tables, write a Google App Engine Application that queries all rows, applies a function to derive the metric, and then renders results in a table using the Google charts and visualization API.;D. Load the data into Google BigQuery tables, write a Google Data Studio 360 report that connects to your data, calculates a metric, and then uses a filter expression to show only suboptimal rows in a table.;;;D. Load the data into Google BigQuery tables, write a Google Data Studio 360 report that connects to your data, calculates a metric, and then uses a filter expression to show only suboptimal rows in a table.;
40;"MJTelco Case Study -<br>Company Overview -<br>MJTelco is a startup that plans to build networks in rapidly growing, underserved markets around the world. The company has patents for innovative optical communications hardware. Based on these patents, they can create many reliable, high-speed backbone links with inexpensive hardware.<br>Company Background -<br>Founded by experienced telecom executives, MJTelco uses technologies originally developed to overcome communications challenges in space. Fundamental to their operation, they need to create a distributed data infrastructure that drives real-time analysis and incorporates machine learning to continuously optimize their topologies. Because their hardware is inexpensive, they plan to overdeploy the network allowing them to account for the impact of dynamic regional politics on location availability and cost.<br>Their management and operations teams are situated all around the globe creating many-to-many relationship between data consumers and provides in their system. After careful consideration, they decided public cloud is the perfect environment to support their needs.<br>Solution Concept -<br>MJTelco is running a successful proof-of-concept (PoC) project in its labs. They have two primary needs:<br>=> Scale and harden their PoC to support significantly more data flows generated when they ramp to more than 50,000 installations.<br>=> Refine their machine-learning cycles to verify and improve the dynamic models they use to control topology definition.<br>MJTelco will also use three separate operating environments `"" development/test, staging, and production `"" to meet the needs of running experiments, deploying new features, and serving production customers.<br>Business Requirements -<br>=> Scale up their production environment with minimal cost, instantiating resources when and where needed in an unpredictable, distributed telecom user community.<br>=> Ensure security of their proprietary data to protect their leading-edge machine learning and analysis.<br>Provide reliable and timely access to data for analysis from distributed research workers<br>=> Maintain isolated environments that support rapid iteration of their machine-learning models without affecting their customers.<br>Technical Requirements -<br>=> Ensure secure and efficient transport and storage of telemetry data<br>=> Rapidly scale instances to support between 10,000 and 100,000 data providers with multiple flows each.<br>=> Allow analysis and presentation against data tables tracking up to 2 years of data storing approximately 100m records/day<br>=> Support rapid iteration of monitoring infrastructure focused on awareness of data pipeline problems both in telemetry flows and in production learning cycles.<br>CEO Statement -<br>Our business model relies on our patents, analytics and dynamic machine learning. Our inexpensive hardware is organized to be highly reliable, which gives us cost advantages. We need to quickly stabilize our large distributed data pipelines to meet our reliability and capacity commitments.<br>CTO Statement -<br>Our public cloud services must operate as advertised. We need resources that scale and keep our data secure. We also need environments in which our data scientists can carefully study and quickly adapt our models. Because we rely on automation to process our data, we also need our development and test environments to work as we iterate.<br>CFO Statement -<br>The project is too large for us to maintain the hardware and software required for the data and analysis. Also, we cannot afford to staff an operations team to monitor so many data feeds, so we will rely on automation and infrastructure. Google Cloud's machine learning will allow our quantitative researchers to work on our high-value problems instead of problems with our data pipelines.<br>You create a new report for your large team in Google Data Studio 360. The report uses Google BigQuery as its data source. It is company policy to ensure employees can view only the data associated with their region, so you create and populate a table for each region. You need to enforce the regional access policy to the data.<br>Which two actions should you take? (Choose two.)";2;A. Ensure all the tables are included in global dataset.;B. Ensure each table is included in a dataset for a region.;C. Adjust the settings for each table to allow a related region-based security group view access.;D. Adjust the settings for each view to allow a related region-based security group view access.;E. Adjust the settings for each dataset to allow a related region-based security group view access.;;B. Ensure each table is included in a dataset for a region.|E. Adjust the settings for each dataset to allow a related region-based security group view access.;
41;"MJTelco Case Study -<br>Company Overview -<br>MJTelco is a startup that plans to build networks in rapidly growing, underserved markets around the world. The company has patents for innovative optical communications hardware. Based on these patents, they can create many reliable, high-speed backbone links with inexpensive hardware.<br>Company Background -<br>Founded by experienced telecom executives, MJTelco uses technologies originally developed to overcome communications challenges in space. Fundamental to their operation, they need to create a distributed data infrastructure that drives real-time analysis and incorporates machine learning to continuously optimize their topologies. Because their hardware is inexpensive, they plan to overdeploy the network allowing them to account for the impact of dynamic regional politics on location availability and cost.<br>Their management and operations teams are situated all around the globe creating many-to-many relationship between data consumers and provides in their system. After careful consideration, they decided public cloud is the perfect environment to support their needs.<br>Solution Concept -<br>MJTelco is running a successful proof-of-concept (PoC) project in its labs. They have two primary needs:<br>=> Scale and harden their PoC to support significantly more data flows generated when they ramp to more than 50,000 installations.<br>=> Refine their machine-learning cycles to verify and improve the dynamic models they use to control topology definition.<br>MJTelco will also use three separate operating environments `"" development/test, staging, and production `"" to meet the needs of running experiments, deploying new features, and serving production customers.<br>Business Requirements -<br>=> Scale up their production environment with minimal cost, instantiating resources when and where needed in an unpredictable, distributed telecom user community.<br>=> Ensure security of their proprietary data to protect their leading-edge machine learning and analysis.<br>=> Provide reliable and timely access to data for analysis from distributed research workers<br>=> Maintain isolated environments that support rapid iteration of their machine-learning models without affecting their customers.<br>Technical Requirements -<br>Ensure secure and efficient transport and storage of telemetry data<br>=> Rapidly scale instances to support between 10,000 and 100,000 data providers with multiple flows each.<br>=> Allow analysis and presentation against data tables tracking up to 2 years of data storing approximately 100m records/day<br>=> Support rapid iteration of monitoring infrastructure focused on awareness of data pipeline problems both in telemetry flows and in production learning cycles.<br>CEO Statement -<br>Our business model relies on our patents, analytics and dynamic machine learning. Our inexpensive hardware is organized to be highly reliable, which gives us cost advantages. We need to quickly stabilize our large distributed data pipelines to meet our reliability and capacity commitments.<br>CTO Statement -<br>Our public cloud services must operate as advertised. We need resources that scale and keep our data secure. We also need environments in which our data scientists can carefully study and quickly adapt our models. Because we rely on automation to process our data, we also need our development and test environments to work as we iterate.<br>CFO Statement -<br>The project is too large for us to maintain the hardware and software required for the data and analysis. Also, we cannot afford to staff an operations team to monitor so many data feeds, so we will rely on automation and infrastructure. Google Cloud's machine learning will allow our quantitative researchers to work on our high-value problems instead of problems with our data pipelines.<br>MJTelco needs you to create a schema in Google Bigtable that will allow for the historical analysis of the last 2 years of records. Each record that comes in is sent every 15 minutes, and contains a unique identifier of the device and a data record. The most common query is for all the data for a given device for a given day.<br>Which schema should you use?";1;A. Rowkey: date#device_id Column data: data_point;B. Rowkey: date Column data: device_id, data_point;C. Rowkey: device_id Column data: date, data_point;D. Rowkey: data_point Column data: device_id, date;E. Rowkey: date#data_point Column data: device_id;;A. Rowkey: date#device_id Column data: data_point;
42;Your company has recently grown rapidly and now ingesting data at a significantly higher rate than it was previously. You manage the daily batch MapReduce analytics jobs in Apache Hadoop. However, the recent increase in data has meant the batch jobs are falling behind. You were asked to recommend ways the development team could increase the responsiveness of the analytics without increasing costs. What should you recommend they do?;1;Rewrite the job in Pig.;Rewrite the job in Apache Spark.;Increase the size of the Hadoop cluster.;Decrease the size of the Hadoop cluster but also rewrite the job in Hive.;;;Rewrite the job in Apache Spark.;Apache Spark is known for its performance advantages over traditional MapReduce jobs in Hadoop. It uses in-memory processing which greatly improves the speed of iterative algorithms and interactive data mining tasks. Hence, rewriting the job in Apache Spark can enhance the responsiveness of the analytics
43;You work for a large fast food restaurant chain with over 400,000 employees. You store employee information in Google BigQuery in a Users table consisting of a FirstName field and a LastName field. A member of IT is building an application and asks you to modify the schema and data in BigQuery so the application can query a FullName field consisting of the value of the FirstName field concatenated with a space, followed by the value of the LastName field for each employee. How can you make that data available while minimizing cost?;1;Create a view in BigQuery that concatenates the FirstName and LastName field values to produce the FullName.;Add a new column called FullName to the Users table. Run an UPDATE statement that updates the FullName column for each user with the concatenation of the FirstName and LastName values.;Create a Google Cloud Dataflow job that queries BigQuery for the entire Users table, concatenates the FirstName value and LastName value for each user, and loads the proper values for FirstName, LastName, and FullName into a new table in BigQuery.;Use BigQuery to export the data for the table to a CSV file. Create a Google Cloud Dataproc job to process the CSV file and output a new CSV file containing the proper values for FirstName, LastName and FullName. Run a BigQuery load job to load the new CSV file into BigQuery.;;;Create a view in BigQuery that concatenates the FirstName and LastName field values to produce the FullName.;Creating a view in BigQuery that concatenates the FirstName and LastName fields to produce the FullName is the most cost-effective solution. This approach doesn't require additional storage or data processing resources as it computes the FullName on the fly when the view is queried.
44;You are deploying a new storage system for your mobile application, which is a media streaming service.<br> You decide the best fit is Google Cloud Datastore.<br> You have entities with multiple properties, some of which can take on multiple values. For example, in the entity 'Movie' the property 'actors' and the property 'tags' have multiple values but the property 'date released' does not. A typical query would ask for all movies with actor=<actorname> ordered by date_released or all movies with tag=Comedy ordered by date_released. How should you avoid a combinatorial explosion in the number of indexes?;1;"Manually configure the index in your index config as follows : <img src=""https://www.examtopics.com/assets/media/exam-media/03098/0003600001.png>";"Manually configure the index in your index config as follows:  <img src=""https://www.examtopics.com/assets/media/exam-media/03098/0003600002.png>";Set the following in your entity options: exclude_from_indexes \= 'actors, tags';Set the following in your entity options\: exclude_from_indexes \= 'date_published';;;Manually configure the index in your index config as follows: ;In Google Cloud Datastore, you need to manually configure your indexes to manage the properties that you want to be indexed. This will allow you to efficiently query your data while avoiding the combinatorial explosion in the number of indexes <br> link :https://www.examtopics.com/exams/google/professional-data-engineer/view/9/
45;You work for a manufacturing plant that batches application log files together into a single log file once a day at 2:<br>00 AM. You have written a Google Cloud Dataflow job to process that log file. You need to make sure the log file in processed once per day as inexpensively as possible. What should you do?;1;Change the processing job to use Google Cloud Dataproc instead.;Manually start the Cloud Dataflow job each morning when you get into the office.;Create a cron job with Google App Engine Cron Service to run the Cloud Dataflow job.;Configure the Cloud Dataflow job as a streaming job so that it processes the log data immediately.;;;Create a cron job with Google App Engine Cron Service to run the Cloud Dataflow job.;To automate the process and run it at a specific time daily, it would be best to create a cron job using Google App Engine's Cron Service. This would ensure the job is run only once daily at a specified time, reducing costs associated with unnecessary or repeated computations.
46;You work for an economic consulting firm that helps companies identify economic trends as they happen. As part of your analysis, you use Google BigQuery to correlate customer data with the average prices of the 100 most common goods sold, including bread, gasoline, milk, and others. The average prices of these goods are updated every 30 minutes. You want to make sure this data stays up to date so you can combine it with other data in BigQuery as cheaply as possible. What should you do?;1;Load the data every 30 minutes into a new partitioned table in BigQuery.;Store and update the data in a regional Google Cloud Storage bucket and create a federated data source in BigQuery;Store the data in Google Cloud Datastore. Use Google Cloud Dataflow to query BigQuery and combine the data programmatically with the data stored in Cloud Datastore;Store the data in a file in a regional Google Cloud Storage bucket. Use Cloud Dataflow to query BigQuery and combine the data programmatically with the data stored in Google Cloud Storage.;;;Store and update the data in a regional Google Cloud Storage bucket and create a federated data source in BigQuery;With federated data sources in BigQuery, you can analyze data across different data repositories with SQL queries. So, you can keep your data in Google Cloud Storage (GCS), and update it as required. Then, you can use BigQuery to run analytics on this data directly from GCS without the need to load the data into BigQuery. This provides cost benefits and ensures the data stays up to date.
47;You are designing the database schema for a machine learning-based food ordering service that will predict what users want to eat. Here is some of the information you need to store:<br> The user profile:<br> What the user likes and doesn't like to eat<br> The user account information:<br> Name, address, preferred meal times<br> The order information:<br> When orders are made, from where, to whom. The database will be used to store all the transactional data of the product. You want to optimize the data schema. Which Google Cloud Platform product should you use?;1;BigQuery;Cloud SQL;Cloud Bigtable;Cloud Datastore;;;Cloud SQL;Cloud SQL is a fully-managed relational database service, making it a good fit for this use case. You have a structured dataset with complex relationships among data entities (user profile, user account information, and order information). Cloud SQL, offering both MySQL and PostgreSQL, supports complex transactions and sophisticated queries, making it a good fit for storing transactional data.
48;Your company is loading comma-separated values (CSV) files into Google BigQuery. The data is fully imported successfully, however, the imported data is not matching byte-to-byte to the source file. What is the most likely cause of this problem?;1;The CSV data loaded in BigQuery is not flagged as CSV;The CSV data has invalid rows that were skipped on import;The CSV data loaded in BigQuery is not using BigQuery's default encoding;The CSV data has not gone through an ETL phase before loading into BigQuery;;;The CSV data loaded in BigQuery is not using BigQuery's default encoding;BigQuery expects CSV data to be UTF-8 encoded. If your data uses a different encoding, it can lead to discrepancies between the source file and the imported data in BigQuery
49;Your company produces 20,000 files every hour. Each data file is formatted as a comma separated values (CSV) file that is less than 4 KB. All files must be ingested on Google Cloud Platform before they can be processed. Your company site has a 200 ms latency to Google Cloud, and your Internet connection bandwidth is limited as 50 Mbps. You currently deploy a secure FTP (SFTP) server on a virtual machine in Google Compute Engine as the data ingestion point. A local SFTP client runs on a dedicated machine to transmit the CSV files as is. The goal is to make reports with data from the previous day available to the executives by 10:<br>00 a.m. each day. This design is barely able to keep up with the current volume, even though the bandwidth utilization is rather low. You are told that due to seasonality, your company expects the number of files to double for the next three months. Which two actions should you take? (Choose two.);2;Introduce data compression for each file to increase the rate file of file transfer;Contact your internet service provider (ISP) to increase your maximum bandwidth to at least 100 Mbps;Redesign the data ingestion process to use gsutil tool to send the CSV files to a storage bucket in parallel;Assemble 1,000 files into a tape archive (TAR) file. Transmit the TAR files instead, and disassemble the CSV files in the cloud upon receiving them;Create an S3-compatible storage endpoint in your network, and use Google Cloud Storage Transfer Service to transfer on-premises data to the designated storage bucket.;;Redesign the data ingestion process to use gsutil tool to send the CSV files to a storage bucket in parallel|Assemble 1,000 files into a tape archive (TAR) file. Transmit the TAR files instead, and disassemble the CSV files in the cloud upon receiving them.;Gsutil tool has parallel composite upload feature which increases the upload speed. Also, bundling the files into a single TAR file can decrease the number of connections needed, increasing transfer speed.
50;You are choosing a NoSQL database to handle telemetry data submitted from millions of Internet-of-Things (IoT) devices. The volume of data is growing at 100 TB per year, and each data entry has about 100 attributes. The data processing pipeline does not require atomicity, consistency, isolation, and durability (ACID). However, high availability and low latency are required. You need to analyze the data by querying against individual fields. Which three databases meet your requirements? (Choose three.);3;Redis;HBase;MySQL;MongoDB;Cassandra;HDFS with Hive;HBase|Cassandra|MongoDB;HBase, Cassandra, and MongoDB are all NoSQL databases that are designed to handle large amounts of data across many commodity servers, providing high availability with no single point of failure. They also allow for querying against individual fields, which is a requirement in this case.
51;You are training a spam classifier. You notice that you are overfitting the training data. Which three actions can you take to resolve this problem? (Choose three.);3;Get more training examples;Reduce the number of training examples;Use a smaller set of features;Use a larger set of features;Increase the regularization parameters;Decrease the regularization parameters;Get more training examples|Use a smaller set of features|Increase the regularization parameters;When a model is overfitting, it means it is performing well on the training data but not on the validation or test data. This usually happens when the model is too complex and is capturing the noise in the training data. To resolve this, you can get more training examples, use a simpler model with fewer features, or increase the regularization parameters to reduce the complexity of the model
52;You are implementing security best practices on your data pipeline. Currently, you are manually executing jobs as the Project Owner. You want to automate these jobs by taking nightly batch files containing non-public information from Google Cloud Storage, processing them with a Spark Scala job on a Google Cloud Dataproc cluster, and depositing the results into Google BigQuery. How should you securely run this workload?;1;Restrict the Google Cloud Storage bucket so only you can see the files;Grant the Project Owner role to a service account, and run the job with it;Use a service account with the ability to read the batch files and to write to BigQuery;Use a user account with the Project Viewer role on the Cloud Dataproc cluster to read the batch files and write to BigQuery;;;Use a service account with the ability to read the batch files and to write to BigQuery;Using a service account with the necessary read and write permissions is a best practice as it limits the scope of permissions and follows the principle of least privilege. This means that the service account has only the permissions it needs to perform the tasks it is responsible for, and no more, reducing the potential damage if its credentials are compromised.
53;You are using Google BigQuery as your data warehouse. Your users report that the following simple query is running very slowly, no matter when they run the query:<br> SELECT country, state, city FROM [myproject:<br>mydataset.mytable] GROUP BY country You check the query plan for the query and see the following output in the Read section of Stage:<br>1: <br><img src='https://www.examtopics.com/assets/media/exam-media/04341/0004200001.jpg'><br>What is the most likely cause of the delay for this query?;1;Users are running too many concurrent queries in the system;The [myproject:mydataset.mytable] table has too many partitions;Either the state or the city columns in the [myproject:mydataset.mytable] table have too many NULL values;Most rows in the [myproject:mydataset.mytable] table have the same value in the country column, causing data skew;;;Most rows in the [myproject:mydataset.mytable] table have the same value in the country column, causing data skew;Data skew can occur when a large amount of data has the same value in one column, making it difficult to evenly distribute processing and causing certain operations to be slower.
54;Your globally distributed auction application allows users to bid on items. Occasionally, users place identical bids at nearly identical times, and different application servers process those bids. Each bid event contains the item, amount, user, and timestamp. You want to collate those bid events into a single location in real time to determine which user bid first. What should you do?;1;A. Create a file on a shared file and have the application servers write all bid events to that file. Process the file with Apache Hadoop to identify which user bid first.; B. Have each application server write the bid events to Cloud Pub/Sub as they occur. Push the events from Cloud Pub/Sub to a custom endpoint that writes the bid event information into Cloud SQL.; C. Set up a MySQL database for each application server to write bid events into. Periodically query each of those distributed MySQL databases and update a master MySQL database with bid event information.;D. Have each application server write the bid events to Google Cloud Pub/Sub as they occur. Use a pull subscription to pull the bid events using Google Cloud Dataflow. Give the bid for each item to the user in the bid event that is processed first.;;;D. Have each application server write the bid events to Google Cloud Pub/Sub as they occur. Use a pull subscription to pull the bid events using Google Cloud Dataflow. Give the bid for each item to the user in the bid event that is processed first.;Both options B and D use Google Cloud Pub/Sub to capture real-time bids, which is a good choice for this use case as Pub/Sub allows for the capture of high-volume, real-time data from various sources. However, there are important differences in the subsequent handling of data in these two options which leads to D being the preferred choice: 1. Data Processing: Option B uses a custom endpoint to write the bid event information into Cloud SQL. Custom endpoints often require additional setup and maintenance. More importantly, custom endpoints can become a bottleneck if they are not designed to handle high load, which might be the case in a globally distributed auction application. On the other hand, option D uses Google Cloud Dataflow, a serverless service designed for high-volume data processing tasks. Dataflow can handle complex transformations and analysis, which might be needed to determine the first bid. 2. Data Storage: Option B uses Cloud SQL as the storage solution. Cloud SQL is a fully managed relational database service, which is not ideally suited for real-time analytics. In contrast, option D does not specify a storage solution, but the use of Dataflow implies that data could be written to a system more suited for real-time analytics, such as BigQuery. 3. Event Ordering: The requirement is to determine which user bid first when identical bids are placed at nearly identical times. Cloud Dataflow has built-in capabilities to handle event time and processing time semantics, which is crucial in determining the order of bids accurately. This level of time-based ordering would be more challenging to achieve with a custom endpoint and Cloud SQL as described in option B. These factors make option D more suited to the task of processing and analyzing real-time bid data in a globally distributed auction application.
55;Your organization has been collecting and analyzing data in Google BigQuery for 6 months. The majority of the data analyzed is placed in a time-partitioned table named events_partitioned. To reduce the cost of queries, your organization created a view called events, which queries only the last 14 days of data. The view is described in legacy SQL. Next month, existing applications will be connecting to BigQuery to read the events data via an ODBC connection. You need to ensure the applications can connect. Which two actions should you take? (Choose two.);2;A. Create a new view over events using standard SQL;B. Create a new partitioned table using a standard SQL query;C. Create a new view over events_partitioned using standard SQL;D. Create a service account for the ODBC connection to use for authentication;E. Create a Google Cloud Identity and Access Management (Cloud IAM) role for the ODBC connection and shared events;;C. Create a new view over events_partitioned using standard SQL|D. Create a service account for the ODBC connection to use for authentication;To ensure that the applications can connect to BigQuery via an ODBC connection, two main tasks need to be accomplished: 1) Convert the existing view from Legacy SQL to Standard SQL. Legacy SQL is deprecated and the BigQuery ODBC driver supports Standard SQL. So, 'Create a new view over events using standard SQL' is a correct action. 2) Authenticate the ODBC connection. The ODBC connection needs permissions to access the data in BigQuery. Creating a service account and granting it appropriate permissions is a common way to handle authentication for programmatic access. Hence, 'Create a service account for the ODBC connection to use for authentication' is the second correct action. Note: BigQuery views are logical views, not materialized views, meaning that the query that defines the view is re-executed every time the view is queried. Views are not precomputed tables.
56;You have enabled the free integration between Firebase Analytics and Google BigQuery. Firebase now automatically creates a new table daily in BigQuery in the format app_events_YYYYMMDD. You want to query all of the tables for the past 30 days in legacy SQL. What should you do?;1;Use the TABLE_DATE_RANGE function;Use the WHERE_PARTITIONTIME pseudo column;Use WHERE date BETWEEN YYYY-MM-DD AND YYYY-MM-DD;Use SELECT IF.(date >= YYYY-MM-DD AND date <= YYYY-MM-DD);;;Use the TABLE_DATE_RANGE function;In Legacy SQL, the TABLE_DATE_RANGE function is used to query multiple tables in a specific date range.
57;Your company is currently setting up data pipelines for their campaign. For all the Google Cloud Pub/Sub streaming data, one of the important business requirements is to be able to periodically identify the inputs and their timings during their campaign. Engineers have decided to use windowing and transformation in Google Cloud Dataflow for this purpose. However, when testing this feature, they find that the Cloud Dataflow job fails for the all streaming insert. What is the most likely cause of this problem?;1;They have not assigned the timestamp, which causes the job to fail;They have not set the triggers to accommodate the data coming in late, which causes the job to fail;They have not applied a global windowing function, which causes the job to fail when the pipeline is created;They have not applied a non-global windowing function, which causes the job to fail when the pipeline is created;;;They have not applied a non-global windowing function, which causes the job to fail when the pipeline is created;IDescription: Caution: Beam’s default windowing behavior is to assign all elements of a PCollection to a single, global window and discard late data, even for unbounded PCollections. Before you use a grouping transform such as GroupByKey on an unbounded PCollection, you must do at least one of the following:<br>—->>>>>>Set a non-global windowing function. See Setting your PCollection’s windowing function.<br> Set a non-default trigger. This allows the global window to emit results under other conditions, since the default windowing behavior (waiting for all data to arrive) will never occur.<br>—->>>>If you don’t set a non-global windowing function or a non-default trigger for your unbounded PCollection and subsequently use a grouping transform such as GroupByKey or Combine, your pipeline will generate an error upon construction and your job will fail.
58;You architect a system to analyze seismic data. Your extract, transform, and load (ETL) process runs as a series of MapReduce jobs on an Apache Hadoop cluster. The ETL process takes days to process a data set because some steps are computationally expensive. Then you discover that a sensor calibration step has been omitted. How should you change your ETL process to carry out sensor calibration systematically in the future?;1;Modify the transformMapReduce jobs to apply sensor calibration before they do anything else.;Introduce a new MapReduce job to apply sensor calibration to raw data, and ensure all other MapReduce jobs are chained after this.;Add sensor calibration data to the output of the ETL process, and document that all users need to apply sensor calibration themselves.;Develop an algorithm through simulation to predict variance of data output from the last MapReduce job based on calibration factors, and apply the correction to all data.;;;Introduce a new MapReduce job to apply sensor calibration to raw data, and ensure all other MapReduce jobs are chained after this.;This approach would ensure that sensor calibration is systematically carried out every time the ETL process runs, as the new MapReduce job would be responsible for calibrating the sensors before the data is processed by the other steps. This would ensure that all data is calibrated before being analyzed, thus avoiding the omission of the sensor calibration step in the future. It also allows you to chain all other MapReduce jobs after this one, so that the calibrated data is used in all the downstream jobs.<br>Option A is not ideal, as it would be time-consuming to modify all the transformMapReduce jobs to apply sensor calibration before doing anything else, and there is a risk of introducing bugs or errors.<br>ption C is not ideal, as it would rely on users to apply sensor calibration themselves, which would be inefficient and could introduce inconsistencies in the data.<br>Option D is not ideal, as it would require a lot of simulation and testing to develop an algorithm that can predict the variance of data output accurately and it may not be as accurate as calibrating the sensor directly.
59;An online retailer has built their current application on Google App Engine. A new initiative at the company mandates that they extend their application to allow their customers to transact directly via the application. They need to manage their shopping transactions and analyze combined data from multiple datasets using a business intelligence (BI) tool. They want to use only a single database for this purpose. Which Google Cloud database should they choose?;1;BigQuery;Cloud SQL;Cloud BigTable;Cloud Datastore;;;Cloud SQL;Cloud SQL is a fully managed relational database service that supports transactions and can be used with business intelligence tools for data analysis.
60;You launched a new gaming app almost three years ago. You have been uploading log files from the previous day to a separate Google BigQuery table with the table name format LOGS_yyyymmdd. You have been using table wildcard functions to generate daily and monthly reports for all time ranges. Recently, you discovered that some queries that cover long date ranges are exceeding the limit of 1,000 tables and failing. How can you resolve this issue?;1;Convert all daily log tables into date-partitioned tables;Convert the sharded tables into a single partitioned table;Enable query caching so you can cache data from previous months;Create separate views to cover each month, and query from these views;;;Convert the sharded tables into a single partitioned table;By converting multiple sharded tables into a single partitioned table, queries over a long date range can be performed more efficiently without exceeding the table limit<br>Table sharding is the practice of storing data in multiple tables, using a naming prefix such as [PREFIX]_YYYYMMDD.<br>Partitioning is recommended over table sharding, because partitioned tables perform better. With sharded tables, BigQuery must maintain a copy of the schema and metadata for each table. BigQuery might also need to verify permissions for each queried table. This practice also adds to query overhead and affects query performance.<br>In answer A. we still are creating tableS (even though partioned). So we still facing the issue of max 1000 tables. In B. we have only ONE table (partioned).
61;Your analytics team wants to build a simple statistical model to determine which customers are most likely to work with your company again, based on a few different metrics. They want to run the model on Apache Spark, using data housed in Google Cloud Storage, and you have recommended using Google Cloud Dataproc to execute this job. Testing has shown that this workload can run in approximately 30 minutes on a 15-node cluster, outputting the results into Google BigQuery. The plan is to run this workload weekly. How should you optimize the cluster for cost?;1;Migrate the workload to Google Cloud Dataflow;Use pre-emptible virtual machines (VMs) for the cluster;Use a higher-memory node so that the job runs faster;Use SSDs on the worker nodes so that the job can run faster;;;Use pre-emptible virtual machines (VMs) for the cluster;Preemptible VMs are Google Cloud Compute instances that last a maximum of 24 hours and provide no availability guarantees. They are significantly cheaper than standard instances and are a cost-effective choice if your applications are fault-tolerant.
62;Your company receives both batch- and stream-based event data. You want to process the data using Google Cloud Dataflow over a predictable time period. However, you realize that in some instances data can arrive late or out of order. How should you design your Cloud Dataflow pipeline to handle data that is late or out of order?;1;Set a single global window to capture all the data.;Set sliding windows to capture all the lagged data.;Use watermarks and timestamps to capture the lagged data.;Ensure every datasource type (stream or batch) has a timestamp, and use the timestamps to define the logic for lagged data.;;;Use watermarks and timestamps to capture the lagged data.;Watermarks are a system for measuring progress and completeness in out-of-order data streams.
63;"You have some data, which is shown in the graphic below. The two dimensions are X and Y, and the shade of each dot represents what class it is. You want to classify this data accurately using a linear algorithm. To do this you need to add a synthetic feature. What should the value of that feature be? <br> <img src=""https://www.examtopics.com/assets/media/exam-media/04341/0005000001.jpg"">";1;X2+Y2;X2;Y2;cos(X);;;X2+Y2;The synthetic feature X2+Y2 helps to map the two-dimensional data to a higher dimension where the classes can be separated by a hyperplane.
64;You are integrating one of your internal IT applications and Google BigQuery, so users can query BigQuery from the application's interface. You do not want individual users to authenticate to BigQuery and you do not want to give them access to the dataset. You need to securely access BigQuery from your IT application. What should you do?;1;Create groups for your users and give those groups access to the dataset;Integrate with a single sign-on (SSO) platform, and pass each user's credentials along with the query request;Create a service account and grant dataset access to that account. Use the service account's private key to access the dataset;Create a dummy user and grant dataset access to that user. Store the username and password for that user in a file on the files system, and use those credentials to access the BigQuery dataset;;;Create a service account and grant dataset access to that account. Use the service account's private key to access the dataset;Service accounts are used for server-to-server interactions, where users do not directly interact with the service. By granting the necessary access to a service account, you can control which resources can be accessed and how they are used, without giving direct access to the users.
65;You are building a data pipeline on Google Cloud. You need to prepare data using a casual method for a machine-learning process. You want to support a logistic regression model. You also need to monitor and adjust for null values, which must remain real-valued and cannot be removed. What should you do?;1;Use Cloud Dataprep to find null values in sample source data. Convert all nulls to 'none' using a Cloud Dataproc job.;Use Cloud Dataprep to find null values in sample source data. Convert all nulls to 0 using a Cloud Dataprep job.;Use Cloud Dataflow to find null values in sample source data. Convert all nulls to 'none' using a Cloud Dataprep job.;Use Cloud Dataflow to find null values in sample source data. Convert all nulls to 0 using a custom script.;;;Use Cloud Dataprep to find null values in sample source data. Convert all nulls to 0 using a Cloud Dataprep job.;Google Cloud Dataprep is an intelligent data service for visually exploring, cleaning, and preparing data for analysis. In this case, Cloud Dataprep can be used to find null values and then replace those nulls with zeros to keep the data real-valued and compatible with the logistic regression model, which expects numerical inputs.
66;You set up a streaming data insert into a Redis cluster via a Kafka cluster. Both clusters are running on Compute Engine instances. You need to encrypt data at rest with encryption keys that you can create, rotate, and destroy as needed. What should you do?;1;Create a dedicated service account, and use encryption at rest to reference your data stored in your Compute Engine cluster instances as part of your API service calls.;Create encryption keys in Cloud Key Management Service. Use those keys to encrypt your data in all of the Compute Engine cluster instances.;Create encryption keys locally. Upload your encryption keys to Cloud Key Management Service. Use those keys to encrypt your data in all of the Compute Engine cluster instances.;Create encryption keys in Cloud Key Management Service. Reference those keys in your API service calls when accessing the data in your Compute Engine cluster instances.;;;Create encryption keys in Cloud Key Management Service. Use those keys to encrypt your data in all of the Compute Engine cluster instances.;Google Cloud Key Management Service (KMS) allows you to generate, use, rotate, and destroy symmetric encryption keys, making it a suitable service to handle the need for encryption keys in this scenario. These keys can be used to encrypt the data at rest in the Compute Engine instances where the Redis and Kafka clusters are running.
67;You are developing an application that uses a recommendation engine on Google Cloud. Your solution should display new videos to customers based on past views. Your solution needs to generate labels for the entities in videos that the customer has viewed. Your design must be able to provide very fast filtering suggestions based on data from other customer preferences on several TB of data. What should you do?;1;Build and train a complex classification model with Spark MLlib to generate labels and filter the results. Deploy the models using Cloud Dataproc. Call the model from your application.;Build and train a classification model with Spark MLlib to generate labels. Build and train a second classification model with Spark MLlib to filter results to match customer preferences. Deploy the models using Cloud Dataproc. Call the models from your application.;Build an application that calls the Cloud Video Intelligence API to generate labels. Store data in Cloud Bigtable, and filter the predicted labels to match the user's viewing history to generate preferences.;Build an application that calls the Cloud Video Intelligence API to generate labels. Store data in Cloud SQL, and join and filter the predicted labels to match the user's viewing history to generate preferences.;;;Build an application that calls the Cloud Video Intelligence API to generate labels. Store data in Cloud Bigtable, and filter the predicted labels to match the user's viewing history to generate preferences.;Cloud Video Intelligence API is a Google Cloud tool that allows developers to extract actionable insights from video files, which would be beneficial in generating labels for entities in videos in this case. Cloud Bigtable is Google's NoSQL Big Data database service, which is designed to handle the throughput and low latency needs of global businesses, and is perfect for storing several TB of data and providing very fast filtering suggestions.
68;You are selecting services to write and transform JSON messages from Cloud Pub/Sub to BigQuery for a data pipeline on Google Cloud. You want to minimize service costs. You also want to monitor and accommodate input data volume that will vary in size with minimal manual intervention. What should you do?;1;Use Cloud Dataproc to run your transformations. Monitor CPU utilization for the cluster. Resize the number of worker nodes in your cluster via the command line.;Use Cloud Dataproc to run your transformations. Use the diagnose command to generate an operational output archive. Locate the bottleneck and adjust cluster resources.;Use Cloud Dataflow to run your transformations. Monitor the job system lag with Stackdriver. Use the default autoscaling setting for worker instances.;Use Cloud Dataflow to run your transformations. Monitor the total execution time for a sampling of jobs. Configure the job to use non-default Compute Engine machine types when needed.;;;Use Cloud Dataflow to run your transformations. Monitor the job system lag with Stackdriver. Use the default autoscaling setting for worker instances.;Cloud Dataflow is designed for cost-effective, dynamic data processing pipelines. It automatically manages resource allocation and can adjust to different data volumes without manual intervention. Stackdriver can be used for monitoring performance metrics such as job system lag. The default autoscaling setting for worker instances allows the system to resize resources based on the workload.
69;Your infrastructure includes a set of YouTube channels. You have been tasked with creating a process for sending the YouTube channel data to Google Cloud for analysis. You want to design a solution that allows your world-wide marketing teams to perform ANSI SQL and other types of analysis on up-to-date YouTube channels log data. How should you set up the log data transfer into Google Cloud?;1;Use Storage Transfer Service to transfer the offsite backup files to a Cloud Storage Multi-Regional storage bucket as a final destination.;Use Storage Transfer Service to transfer the offsite backup files to a Cloud Storage Regional bucket as a final destination.;Use BigQuery Data Transfer Service to transfer the offsite backup files to a Cloud Storage Multi-Regional storage bucket as a final destination.;Use BigQuery Data Transfer Service to transfer the offsite backup files to a Cloud Storage Regional storage bucket as a final destination.;;;Use BigQuery Data Transfer Service to transfer the offsite backup files to a Cloud Storage Multi-Regional storage bucket as a final destination.;BigQuery Data Transfer Service is used to automate data movement from SaaS applications to Google BigQuery on a scheduled, managed basis. It supports YouTube Channel Reports for transferring YouTube channel data to BigQuery. Using Multi-Regional storage bucket can ensure high availability and geo-redundancy.
70;You are designing storage for very large text files for a data pipeline on Google Cloud. You want to support ANSI SQL queries. You also want to support compression and parallel load from the input locations using Google recommended practices. What should you do?;1;Transform text files to compressed Avro using Cloud Dataflow. Use BigQuery for storage and query.;Transform text files to compressed Avro using Cloud Dataflow. Use Cloud Storage and BigQuery permanent linked tables for query.;Compress text files to gzip using the Grid Computing Tools. Use BigQuery for storage and query.;Compress text files to gzip using the Grid Computing Tools. Use Cloud Storage, and then import into Cloud Bigtable for query.;;;Transform text files to compressed Avro using Cloud Dataflow. Use Cloud Storage and BigQuery permanent linked tables for query.;This option offers several advantages:<br>- Transforming the text files to compressed Avro using Cloud Dataflow allows for parallel processing of the input data, improving the efficiency of the pipeline.<br>- Compressing the data in Avro format further reduces the storage space required and improves data transfer performance.<br>- Storing the data in BigQuery supports ANSI SQL queries and allows for easy querying of the data.<br>- BigQuery is a fully-managed data warehousing solution, it's scalable and can handle large datasets and concurrent queries, so it's suitable for large text files.
71;You are developing an application on Google Cloud that will automatically generate subject labels for users' blog posts. You are under competitive pressure to add this feature quickly, and you have no additional developer resources. No one on your team has experience with machine learning. What should you do?;1;Call the Cloud Natural Language API from your application. Process the generated Entity Analysis as labels.;Call the Cloud Natural Language API from your application. Process the generated Sentiment Analysis as labels.;Build and train a text classification model using TensorFlow. Deploy the model using Cloud Machine Learning Engine. Call the model from your application and process the results as labels.;Build and train a text classification model using TensorFlow. Deploy the model using a Kubernetes Engine cluster. Call the model from your application and process the results as labels.;;;Call the Cloud Natural Language API from your application. Process the generated Entity Analysis as labels.;Google's Cloud Natural Language API provides features to analyze and understand the content of the text, including entity recognition, sentiment analysis, syntax analysis, and content classification. Since you want to generate labels for the content (subjects of blog posts), Entity Analysis is a suitable choice. Entity Analysis will identify the most important entities (nouns such as proper names, public figures, landmarks, etc.) in the text, which could be used as labels.
72;You are designing storage for 20 TB of text files as part of deploying a data pipeline on Google Cloud. Your input data is in CSV format. You want to minimize the cost of querying aggregate values for multiple users who will query the data in Cloud Storage with multiple engines. Which storage service and schema design should you use?;1;Use Cloud Bigtable for storage. Install the HBase shell on a Compute Engine instance to query the Cloud Bigtable data.;Use Cloud Bigtable for storage. Link as permanent tables in BigQuery for query.;Use Cloud Storage for storage. Link as permanent tables in BigQuery for query.;Use Cloud Storage for storage. Link as temporary tables in BigQuery for query.;;;Use Cloud Storage for storage. Link as permanent tables in BigQuery for query.;Google Cloud Storage is a cost-effective way to store large amounts of data. Once the data is in Cloud Storage, it can be linked to BigQuery for analysis. BigQuery is Google's fully managed, NoOps, low-cost analytics database. With BigQuery you can query terabytes and terabytes of data without having any infrastructure to manage or needing a database administrator. By creating permanent tables in BigQuery, multiple users will be able to query the data efficiently.
73;You are designing storage for two relational tables that are part of a 10-TB database on Google Cloud. You want to support transactions that scale horizontally. You also want to optimize data for range queries on non-key columns. What should you do?;1;Use Cloud SQL for storage. Add secondary indexes to support query patterns.;Use Cloud SQL for storage. Use Cloud Dataflow to transform data to support query patterns.;Use Cloud Spanner for storage. Add secondary indexes to support query patterns.;Use Cloud Spanner for storage. Use Cloud Dataflow to transform data to support query patterns.;;;Use Cloud Spanner for storage. Add secondary indexes to support query patterns.;Google Cloud Spanner is a globally distributed, horizontally scalable, and strongly consistent relational database service that's built for the cloud. It is a good choice for applications that require high-availability and strong transactional consistency at a global scale. In this case, you can add secondary indexes to optimize data for range queries on non-key columns. This will also enhance the performance of read queries over a large dataset, making it suitable for the given scenario.
74;Your financial services company is moving to cloud technology and wants to store 50 TB of financial time-series data in the cloud. This data is updated frequently and new data will be streaming in all the time. Your company also wants to move their existing Apache Hadoop jobs to the cloud to get insights into this data. Which product should they use to store the data?;1;Cloud Bigtable;Google BigQuery;Google Cloud Storage;Google Cloud Datastore;;;Cloud Bigtable;Google Cloud Bigtable is a scalable, fully-managed NoSQL wide-column database that is suitable for both real-time access and analytics workloads. It can handle high write and read loads, making it suitable for financial time-series data that's updated frequently and streamed in real-time. Also, Cloud Bigtable integrates well with Apache Hadoop and other big data tools, making it a good fit for the company's existing Hadoop jobs.
75;An organization maintains a Google BigQuery dataset that contains tables with user-level data. They want to expose aggregates of this data to other Google Cloud projects, while still controlling access to the user-level data. Additionally, they need to minimize their overall storage cost and ensure the analysis cost for other projects is assigned to those projects. What should they do?;1;Create and share an authorized view that provides the aggregate results.;Create and share a new dataset and view that provides the aggregate results.;Create and share a new dataset and table that contains the aggregate results.;Create dataViewer Identity and Access Management (IAM) roles on the dataset to enable sharing.;;;Create and share an authorized view that provides the aggregate results.;An authorized view in BigQuery allows the users of other projects to access the data without granting them permissions on the underlying datasets. It allows access control at the dataset level while still providing aggregated results. This does not increase storage costs, and the costs of queries performed using the view are billed to the project that contains the query job. Therefore, it fulfills the requirements of controlling access, minimizing storage cost, and ensuring the analysis cost is assigned to the respective projects.
76;Government regulations in your industry mandate that you have to maintain an auditable record of access to certain types of data. Assuming that all expiring logs will be archived correctly, where should you store data that is subject to that mandate?;1;Encrypted on Cloud Storage with user-supplied encryption keys. A separate decryption key will be given to each authorized user.;In a BigQuery dataset that is viewable only by authorized personnel, with the Data Access log used to provide the auditability.;In Cloud SQL, with separate database user names to each user. The Cloud SQL Admin activity logs will be used to provide the auditability.;In a bucket on Cloud Storage that is accessible only by an AppEngine service that collects user information and logs the access before providing a link to the bucket.;;;In a BigQuery dataset that is viewable only by authorized personnel, with the Data Access log used to provide the auditability.;BigQuery offers robust logging capabilities using Stackdriver, including the Data Access logs that record API calls for services and resources. If data access logs are enabled, you can get details about who accessed what data and when. BigQuery also allows for granular permission controls which restrict access to authorized personnel only, so the data is secured. This helps meet regulatory requirements for auditability of access to sensitive data.
77;Your neural network model is taking days to train. You want to increase the training speed. What can you do?;1;Subsample your test dataset.;Subsample your training dataset.;Increase the number of input features to your model.;Increase the number of layers in your neural network.;;;Subsample your training dataset.;Subsampling your training dataset will reduce the amount of data that your model has to learn from, which can lead to faster training times. However, it's important to be aware that subsampling should be done carefully because it could also lead to your model being less accurate if significant or representative data is left out.
78;You are responsible for writing your company's ETL pipelines to run on an Apache Hadoop cluster. The pipeline will require some checkpointing and splitting pipelines. Which method should you use to write the pipelines?;1;PigLatin using Pig;HiveQL using Hive;Java using MapReduce;Python using MapReduce;;;Java using MapReduce;Apache Hadoop primarily uses MapReduce for processing and generating large datasets with a parallel and distributed algorithm on a cluster. MapReduce enables users to write their computational logic using a key-value pair approach. In MapReduce, checkpointing is possible to handle failures and Java is the most commonly used language for writing MapReduce programs.
79;Your company maintains a hybrid deployment with GCP, where analytics are performed on your anonymized customer data. The data are imported to Cloud Storage from your data center through parallel uploads to a data transfer server running on GCP. Management informs you that the daily transfers take too long and have asked you to fix the problem. You want to maximize transfer speeds. Which action should you take?;1;Increase the CPU size on your server;Increase the size of the Google Persistent Disk on your server;Increase your network bandwidth from your datacenter to GCP;Increase your network bandwidth from Compute Engine to Cloud Storage;;;Increase your network bandwidth from your datacenter to GCP;In a hybrid deployment scenario where data is transferred from your data center to Google Cloud, network bandwidth is the critical factor that determines the speed of data transfer. If the data transfers are slow, increasing the network bandwidth from your data center to GCP can improve the data transfer speed. The bandwidth between your data center and GCP is the bottleneck, not the resources in GCP itself
80;"MJTelco Case Study -<br>Company Overview -<br>MJTelco is a startup that plans to build networks in rapidly growing, underserved markets around the world. The company has patents for innovative optical communications hardware. Based on these patents, they can create many reliable, high-speed backbone links with inexpensive hardware.<br>Company Background -<br>Founded by experienced telecom executives, MJTelco uses technologies originally developed to overcome communications challenges in space. Fundamental to their operation, they need to create a distributed data infrastructure that drives real-time analysis and incorporates machine learning to continuously optimize their topologies. Because their hardware is inexpensive, they plan to overdeploy the network allowing them to account for the impact of dynamic regional politics on location availability and cost.<br>Their management and operations teams are situated all around the globe creating many-to-many relationship between data consumers and provides in their system. After careful consideration, they decided public cloud is the perfect environment to support their needs.<br>Solution Concept -<br>MJTelco is running a successful proof-of-concept (PoC) project in its labs. They have two primary needs:<br>=> Scale and harden their PoC to support significantly more data flows generated when they ramp to more than 50,000 installations.<br>=> Refine their machine-learning cycles to verify and improve the dynamic models they use to control topology definition.<br>MJTelco will also use three separate operating environments `"" development/test, staging, and production `"" to meet the needs of running experiments, deploying new features, and serving production customers.<br>Business Requirements -<br>=> Scale up their production environment with minimal cost, instantiating resources when and where needed in an unpredictable, distributed telecom user community.<br>=> Ensure security of their proprietary data to protect their leading-edge machine learning and analysis.<br>=> Provide reliable and timely access to data for analysis from distributed research workers<br>=> Maintain isolated environments that support rapid iteration of their machine-learning models without affecting their customers.<br>Technical Requirements -<br>Ensure secure and efficient transport and storage of telemetry data<br>Rapidly scale instances to support between 10,000 and 100,000 data providers with multiple flows each.<br>Allow analysis and presentation against data tables tracking up to 2 years of data storing approximately 100m records/day<br>Support rapid iteration of monitoring infrastructure focused on awareness of data pipeline problems both in telemetry flows and in production learning cycles.<br>CEO Statement -<br>Our business model relies on our patents, analytics and dynamic machine learning. Our inexpensive hardware is organized to be highly reliable, which gives us cost advantages. We need to quickly stabilize our large distributed data pipelines to meet our reliability and capacity commitments.<br>CTO Statement -<br>Our public cloud services must operate as advertised. We need resources that scale and keep our data secure. We also need environments in which our data scientists can carefully study and quickly adapt our models. Because we rely on automation to process our data, we also need our development and test environments to work as we iterate.<br>CFO Statement -<br>The project is too large for us to maintain the hardware and software required for the data and analysis. Also, we cannot afford to staff an operations team to monitor so many data feeds, so we will rely on automation and infrastructure. Google Cloud's machine learning will allow our quantitative researchers to work on our high-value problems instead of problems with our data pipelines.<br>MJTelco is building a custom interface to share data. They have these requirements:<br>1. They need to do aggregations over their petabyte-scale datasets.<br>2. They need to scan specific time range rows with a very fast response time (milliseconds).<br>Which combination of Google Cloud Platform products should you recommend?";1;A. Cloud Datastore and Cloud Bigtable;B. Cloud Bigtable and Cloud SQL;C. BigQuery and Cloud Bigtable;D. BigQuery and Cloud Storage;;;C. BigQuery and Cloud Bigtable;
81;"MJTelco Case Study -<br>Company Overview -<br>MJTelco is a startup that plans to build networks in rapidly growing, underserved markets around the world. The company has patents for innovative optical communications hardware. Based on these patents, they can create many reliable, high-speed backbone links with inexpensive hardware.<br>Company Background -<br>Founded by experienced telecom executives, MJTelco uses technologies originally developed to overcome communications challenges in space. Fundamental to their operation, they need to create a distributed data infrastructure that drives real-time analysis and incorporates machine learning to continuously optimize their topologies. Because their hardware is inexpensive, they plan to overdeploy the network allowing them to account for the impact of dynamic regional politics on location availability and cost.<br>Their management and operations teams are situated all around the globe creating many-to-many relationship between data consumers and provides in their system. After careful consideration, they decided public cloud is the perfect environment to support their needs.<br>Solution Concept -<br>MJTelco is running a successful proof-of-concept (PoC) project in its labs. They have two primary needs:<br>=> Scale and harden their PoC to support significantly more data flows generated when they ramp to more than 50,000 installations.<br>Refine their machine-learning cycles to verify and improve the dynamic models they use to control topology definition.<br>MJTelco will also use three separate operating environments `"" development/test, staging, and production `"" to meet the needs of running experiments, deploying new features, and serving production customers.<br>Business Requirements -<br>=> Scale up their production environment with minimal cost, instantiating resources when and where needed in an unpredictable, distributed telecom user community.<br>=> Ensure security of their proprietary data to protect their leading-edge machine learning and analysis.<br>=> Provide reliable and timely access to data for analysis from distributed research workers<br>=> Maintain isolated environments that support rapid iteration of their machine-learning models without affecting their customers.<br>Technical Requirements -<br>Ensure secure and efficient transport and storage of telemetry data<br>Rapidly scale instances to support between 10,000 and 100,000 data providers with multiple flows each.<br>Allow analysis and presentation against data tables tracking up to 2 years of data storing approximately 100m records/day<br>Support rapid iteration of monitoring infrastructure focused on awareness of data pipeline problems both in telemetry flows and in production learning cycles.<br>CEO Statement -<br>Our business model relies on our patents, analytics and dynamic machine learning. Our inexpensive hardware is organized to be highly reliable, which gives us cost advantages. We need to quickly stabilize our large distributed data pipelines to meet our reliability and capacity commitments.<br>CTO Statement -<br>Our public cloud services must operate as advertised. We need resources that scale and keep our data secure. We also need environments in which our data scientists can carefully study and quickly adapt our models. Because we rely on automation to process our data, we also need our development and test environments to work as we iterate.<br>CFO Statement -<br>The project is too large for us to maintain the hardware and software required for the data and analysis. Also, we cannot afford to staff an operations team to monitor so many data feeds, so we will rely on automation and infrastructure. Google Cloud's machine learning will allow our quantitative researchers to work on our high-value problems instead of problems with our data pipelines.<br>You need to compose visualization for operations teams with the following requirements:<br>=> Telemetry must include data from all 50,000 installations for the most recent 6 weeks (sampling once every minute)<br>=> The report must not be more than 3 hours delayed from live data.<br>=> The actionable report should only show suboptimal links.<br>=> Most suboptimal links should be sorted to the top.<br>Suboptimal links can be grouped and filtered by regional geography.<br>=> User response time to load the report must be <5 seconds.<br>You create a data source to store the last 6 weeks of data, and create visualizations that allow viewers to see multiple date ranges, distinct geographic regions, and unique installation types. You always show the latest data without any changes to your visualizations. You want to avoid creating and updating new visualizations each month. What should you do?";1;A. Look through the current data and compose a series of charts and tables, one for each possible combination of criteria.;B. Look through the current data and compose a small set of generalized charts and tables bound to criteria filters that allow value selection.;C. Export the data to a spreadsheet, compose a series of charts and tables, one for each possible combination of criteria, and spread them across multiple tabs.;D. Load the data into relational database tables, write a Google App Engine application that queries all rows, summarizes the data across each criteria, and then renders results using the Google Charts and visualization API. ;;;D. Load the data into relational database tables, write a Google App Engine application that queries all rows, summarizes the data across each criteria, and then renders results using the Google Charts and visualization API. ;
82;"MJTelco Case Study -<br>Company Overview -<br>MJTelco is a startup that plans to build networks in rapidly growing, underserved markets around the world. The company has patents for innovative optical communications hardware. Based on these patents, they can create many reliable, high-speed backbone links with inexpensive hardware.<br>Company Background -<br>Founded by experienced telecom executives, MJTelco uses technologies originally developed to overcome communications challenges in space. Fundamental to their operation, they need to create a distributed data infrastructure that drives real-time analysis and incorporates machine learning to continuously optimize their topologies. Because their hardware is inexpensive, they plan to overdeploy the network allowing them to account for the impact of dynamic regional politics on location availability and cost.<br>Their management and operations teams are situated all around the globe creating many-to-many relationship between data consumers and provides in their system. After careful consideration, they decided public cloud is the perfect environment to support their needs.<br>Solution Concept -<br>MJTelco is running a successful proof-of-concept (PoC) project in its labs. They have two primary needs:<br>=> Scale and harden their PoC to support significantly more data flows generated when they ramp to more than 50,000 installations.<br>=> Refine their machine-learning cycles to verify and improve the dynamic models they use to control topology definition.<br>MJTelco will also use three separate operating environments `"" development/test, staging, and production `"" to meet the needs of running experiments, deploying new features, and serving production customers.<br>Business Requirements -<br>=> Scale up their production environment with minimal cost, instantiating resources when and where needed in an unpredictable, distributed telecom user community.<br>=> Ensure security of their proprietary data to protect their leading-edge machine learning and analysis.<br>=> Provide reliable and timely access to data for analysis from distributed research workers<br>=> Maintain isolated environments that support rapid iteration of their machine-learning models without affecting their customers.<br>Technical Requirements -<br>Ensure secure and efficient transport and storage of telemetry data<br>Rapidly scale instances to support between 10,000 and 100,000 data providers with multiple flows each.<br>Allow analysis and presentation against data tables tracking up to 2 years of data storing approximately 100m records/day<br>Support rapid iteration of monitoring infrastructure focused on awareness of data pipeline problems both in telemetry flows and in production learning cycles.<br>CEO Statement -<br>Our business model relies on our patents, analytics and dynamic machine learning. Our inexpensive hardware is organized to be highly reliable, which gives us cost advantages. We need to quickly stabilize our large distributed data pipelines to meet our reliability and capacity commitments.<br>CTO Statement -<br>Our public cloud services must operate as advertised. We need resources that scale and keep our data secure. We also need environments in which our data scientists can carefully study and quickly adapt our models. Because we rely on automation to process our data, we also need our development and test environments to work as we iterate.<br>CFO Statement -<br>The project is too large for us to maintain the hardware and software required for the data and analysis. Also, we cannot afford to staff an operations team to monitor so many data feeds, so we will rely on automation and infrastructure. Google Cloud's machine learning will allow our quantitative researchers to work on our high-value problems instead of problems with our data pipelines.<br>Given the record streams MJTelco is interested in ingesting per day, they are concerned about the cost of Google BigQuery increasing. MJTelco asks you to provide a design solution. They require a single large data table called tracking_table. Additionally, they want to minimize the cost of daily queries while performing fine-grained analysis of each day's events. They also want to use streaming ingestion. What should you do?";1;A. Create a table called tracking_table and include a DATE column.;B. Create a partitioned table called tracking_table and include a TIMESTAMP column.;C. Create sharded tables for each day following the pattern tracking_table_YYYYMMDD.;D. Create a table called tracking_table with a TIMESTAMP column to represent the day.;;;B. Create a partitioned table called tracking_table and include a TIMESTAMP column.;
83;"Flowlogistic Case Study -<br>Company Overview -<br>Flowlogistic is a leading logistics and supply chain provider. They help businesses throughout the world manage their resources and transport them to their final destination. The company has grown rapidly, expanding their offerings to include rail, truck, aircraft, and oceanic shipping<br><br>Company Background -<br>The company started as a regional trucking company, and then expanded into other logistics market. Because they have not updated their infrastructure, managing and tracking orders and shipments has become a bottleneck. To improve operations, Flowlogistic developed proprietary technology for tracking shipments in real time at the parcel level. However, they are unable to deploy it because their technology stack, based on Apache Kafka, cannot support the processing volume. In addition, Flowlogistic wants to further analyze their orders and shipments to determine how best to deploy their resources<br><br>Solution Concept -<br>Flowlogistic wants to implement two concepts using the cloud<br>=> Use their proprietary technology in a real-time inventory-tracking system that indicates the location of their loads<br>=> Perform analytics on all their orders and shipment logs, which contain both structured and unstructured data, to determine how best to deploy resources, which markets to expand info. They also want to use predictive analytics to learn earlier when a shipment will be delayed<br><br>Existing Technical Environment -<br>Flowlogistic architecture resides in a single data center<br>=> Databases<br>- 8 physical servers in 2 clusters<br>- SQL Server `"" user data, inventory, static data<br>- 3 physical servers<br>- Cassandra `"" metadata, tracking messages<br>10 Kafka servers `"" tracking message aggregation and batch insert<br>=> Application servers `"" customer front end, middleware for order/customs<br>- 60 virtual machines across 20 physical servers<br>- Tomcat `"" Java services<br>- Nginx `"" static content<br>- Batch servers<br>=> Storage appliances<br>- iSCSI for virtual machine (VM) hosts<br>- Fibre Channel storage area network (FC SAN) `"" SQL server storage<br>Network-attached storage (NAS) image storage, logs, backups<br>=> 10 Apache Hadoop /Spark servers<br>- Core Data Lake<br>- Data analysis workloads<br>=> 20 miscellaneous servers<br>- Jenkins, monitoring, bastion hosts<br><br>Business Requirements -<br>=> Build a reliable and reproducible environment with scaled panty of production<br>=> Aggregate data in a centralized Data Lake for analysis<br>=> Use historical data to perform predictive analytics on future shipments<br>=> Accurately track every shipment worldwide using proprietary technology<br>=> Improve business agility and speed of innovation through rapid provisioning of new resources<br>=> Analyze and optimize architecture for performance in the cloud<br>=> Migrate fully to the cloud if all other requirements are met<br>Technical Requirements -<br>=> Handle both streaming and batch data<br>=> Migrate existing Hadoop workloads<br>=> Ensure architecture is scalable and elastic to meet the changing demands of the company<br>=> Use managed services whenever possible<br>=> Encrypt data flight and at rest<br>Connect a VPN between the production data center and cloud environment<br>SEO Statement -<br>We have grown so quickly that our inability to upgrade our infrastructure is really hampering further growth and efficiency. We are efficient at moving shipments around the world, but we are inefficient at moving data around<br>We need to organize our information so we can more easily understand where our customers are and what they are shipping<br><br>CTO Statement -<br>IT has never been a priority for us, so as our data has grown, we have not invested enough in our technology. I have a good staff to manage IT, but they are so busy managing our infrastructure that I cannot get them to do the things that really matter, such as organizing our data, building the analytics, and figuring out how to implement the CFO' s tracking technology<br><br>CFO Statement -<br>Part of our competitive advantage is that we penalize ourselves for late shipments and deliveries. Knowing where out shipments are at all times has a direct correlation to our bottom line and profitability. Additionally, I don't want to commit capital to building out a server environment<br>Flowlogistic's management has determined that the current Apache Kafka servers cannot handle the data volume for their real-time inventory tracking system<br>You need to build a new system on Google Cloud Platform (GCP) that will feed the proprietary tracking software. The system must be able to ingest data from a variety of global sources, process and query in real-time, and store the data reliably. Which combination of GCP products should you choose?";1;A. Cloud Pub/Sub, Cloud Dataflow, and Cloud Storage;B. Cloud Pub/Sub, Cloud Dataflow, and Local SSD;C. Cloud Pub/Sub, Cloud SQL, and Cloud Storage;D. Cloud Load Balancing, Cloud Dataflow, and Cloud Storage;E. Cloud Dataflow, Cloud SQL, and Cloud Storage;;A. Cloud Pub/Sub, Cloud Dataflow, and Cloud Storage;
84;After migrating ETL jobs to run on BigQuery, you need to verify that the output of the migrated jobs is the same as the output of the original. You've loaded a table containing the output of the original job and want to compare the contents with output from the migrated job to show that they are identical. The tables do not contain a primary key column that would enable you to join them together for comparison. What should you do?;1;Select random samples from the tables using the RAND() function and compare the samples.;Select random samples from the tables using the HASH() function and compare the samples.;Use a Dataproc cluster and the BigQuery Hadoop connector to read the data from each table and calculate a hash from non-timestamp columns of the table after sorting. Compare the hashes of each table.;Create stratified random samples using the OVER() function and compare equivalent samples from each table.;;;Use a Dataproc cluster and the BigQuery Hadoop connector to read the data from each table and calculate a hash from non-timestamp columns of the table after sorting. Compare the hashes of each table.;Because the tables do not contain a primary key column that would enable you to join them together for comparison, you need a different method to ensure the two datasets are identical. By using a Dataproc cluster and the BigQuery Hadoop connector, you can read the data from each table, calculate a hash from non-timestamp columns of the table after sorting, and then compare the hashes of each table. If the hashes match, the contents of the tables are the same.
85;You are a head of BI at a large enterprise company with multiple business units that each have different priorities and budgets. You use on-demand pricing for BigQuery with a quota of 2K concurrent on-demand slots per project. Users at your organization sometimes don't get slots to execute their query and you need to correct this. You'd like to avoid introducing new projects to your account. What should you do?;1;Convert your batch BQ queries into interactive BQ queries.;Create an additional project to overcome the 2K on-demand per-project quota.;Switch to flat-rate pricing and establish a hierarchical priority model for your projects.;Increase the amount of concurrent slots per project at the Quotas page at the Cloud Console.;;;Switch to flat-rate pricing and establish a hierarchical priority model for your projects.;When using on-demand pricing, you pay for the amount of data processed by each query. However, BigQuery enforces a concurrent rate limit and a daily limit on the amount of query data, which may restrict the resources for executing queries. Switching to flat-rate pricing allows you to run a virtually unlimited number of queries while only paying for the resources reserved for your project, not by the amount of data processed by each query. The introduction of a hierarchical priority model will ensure that the available resources are allocated according to the priorities of different projects, reducing the chance that users won't get slots to execute their query
86;You have an Apache Kafka cluster on-prem with topics containing web application logs. You need to replicate the data to Google Cloud for analysis in BigQuery and Cloud Storage. The preferred replication method is mirroring to avoid deployment of Kafka Connect plugins. What should you do?;1;Deploy a Kafka cluster on GCE VM Instances. Configure your on-prem cluster to mirror your topics to the cluster running in GCE. Use a Dataproc cluster or Dataflow job to read from Kafka and write to GCS.;Deploy a Kafka cluster on GCE VM Instances with the Pub/Sub Kafka connector configured as a Sink connector. Use a Dataproc cluster or Dataflow job to read from Kafka and write to GCS.;Deploy the Pub/Sub Kafka connector to your on-prem Kafka cluster and configure Pub/Sub as a Source connector. Use a Dataflow job to read from Pub/Sub and write to GCS.;Deploy the Pub/Sub Kafka connector to your on-prem Kafka cluster and configure Pub/Sub as a Sink connector. Use a Dataflow job to read from Pub/Sub and write to GCS.;;;Deploy a Kafka cluster on GCE VM Instances. Configure your on-prem cluster to mirror your topics to the cluster running in GCE. Use a Dataproc cluster or Dataflow job to read from Kafka and write to GCS.;This approach avoids the use of Kafka Connect plugins (as per the requirement). The on-premises Kafka cluster is mirrored to a Kafka cluster running on Google Compute Engine (GCE) VM instances. Data can then be read from this GCE Kafka cluster using either a Dataproc cluster or a Dataflow job, and then written to Google Cloud Storage (GCS) for analysis in BigQuery.
87;You've migrated a Hadoop job from an on-prem cluster to dataproc and GCS. Your Spark job is a complicated analytical workload that consists of many shuffling operations and initial data are parquet files (on average 200-400 MB size each). You see some degradation in performance after the migration to Dataproc, so you'd like to optimize for it. You need to keep in mind that your organization is very cost-sensitive, so you'd like to continue using Dataproc on preemptibles (with 2 non-preemptible workers only) for this workload. What should you do?;1;Increase the size of your parquet files to ensure them to be 1 GB minimum.;Switch to TFRecords formats (appr. 200MB per file) instead of parquet files.;Switch from HDDs to SSDs, copy initial data from GCS to HDFS, run the Spark job and copy results back to GCS.;Switch from HDDs to SSDs, override the preemptible VMs configuration to increase the boot disk size.;;;Switch from HDDs to SSDs, override the preemptible VMs configuration to increase the boot disk size.;Since the workload involves many shuffle operations, it is important to ensure that the disk performance is optimized. SSDs offer faster read and write speeds compared to HDDs, which can help to improve the performance of shuffle operations. Moreover, increasing the boot disk size can help to provide more space for the local storage of shuffle data, thus reducing the risk of running out of disk space during shuffle operations. This can be especially helpful when using preemptible VMs, which often have lower resources than standard VMs.
88;Your team is responsible for developing and maintaining ETLs in your company. One of your Dataflow jobs is failing because of some errors in the input data, and you need to improve reliability of the pipeline (incl. being able to reprocess all failing data). What should you do?;1;Add a filtering step to skip these types of errors in the future, extract erroneous rows from logs.;Add a tryג€¦ catch block to your DoFn that transforms the data, extract erroneous rows from logs.;Add a tryג€¦ catch block to your DoFn that transforms the data, write erroneous rows to Pub/Sub PubSub directly from the DoFn.;Add a tryג€¦ catch block to your DoFn that transforms the data, use a sideOutput to create a PCollection that can be stored to Pub/Sub later.;;;Add a tryג€¦ catch block to your DoFn that transforms the data, use a sideOutput to create a PCollection that can be stored to Pub/Sub later.;In Apache Beam (and hence in Dataflow), side outputs can be used to output to multiple PCollections from a single PTransform. This approach allows you to handle errors in a fine-grained way without stopping your entire pipeline. You can use side outputs to capture the error records and store them separately for future processing. In this case, you can add a try-catch block to handle errors, and use a sideOutput to capture erroneous records. These records can be written to Pub/Sub later for reprocessing or analysis.
89;You're training a model to predict housing prices based on an available dataset with real estate properties. Your plan is to train a fully connected neural net, and you've discovered that the dataset contains latitude and longitude of the property. Real estate professionals have told you that the location of the property is highly influential on price, so you'd like to engineer a feature that incorporates this physical dependency. What should you do?;1;Provide latitude and longitude as input vectors to your neural net.;Create a numeric column from a feature cross of latitude and longitude.;Create a feature cross of latitude and longitude, bucketize it at the minute level and use L1 regularization during optimization.;Create a feature cross of latitude and longitude, bucketize it at the minute level and use L2 regularization during optimization.;;;Create a numeric column from a feature cross of latitude and longitude.;Creating a feature cross of two or more features can capture more complex relationships in the data. This is especially true for geographical data, where the interaction of latitude and longitude can represent a specific location on earth. You can create a numeric column from this feature cross to feed into your neural network. While L1 and L2 regularization can help prevent overfitting, they are not directly related to the task of creating and using a feature cross of latitude and longitude.<br>While L1 and L2 regularization can help prevent overfitting, they are not directly related to the task of creating and using a feature cross of latitude and longitude.
90;You are deploying MariaDB SQL databases on GCE VM Instances and need to configure monitoring and alerting. You want to collect metrics including network connections, disk IO and replication status from MariaDB with minimal development effort and use StackDriver for dashboards and alerts. What should you do?;1;Install the OpenCensus Agent and create a custom metric collection application with a StackDriver exporter.;Place the MariaDB instances in an Instance Group with a Health Check.;Install the StackDriver Logging Agent and configure fluentd in_tail plugin to read MariaDB logs.;Install the StackDriver Agent and configure the MySQL plugin.;;;Install the StackDriver Agent and configure the MySQL plugin.;Stackdriver Agent supports the collection of system and application metrics from your VM instances. For databases like MariaDB and MySQL, it has a built-in MySQL plugin, which can be used to collect and send various metrics to Stackdriver, like disk IO, network connections, and replication status. This solution requires minimal development effort and can be easily integrated with Stackdriver for monitoring, alerting, and dashboards.
91;You work for a bank. You have a labelled dataset that contains information on already granted loan application and whether these applications have been defaulted. You have been asked to train a model to predict default rates for credit applicants. What should you do?;1;Increase the size of the dataset by collecting additional data.;Train a linear regression to predict a credit default risk score.;Remove the bias from the data and collect applications that have been declined loans.;Match loan applicants with their social profiles to enable feature engineering.;;;Train a linear regression to predict a credit default risk score.;In this context, we already have a labeled dataset that marks whether loan applications defaulted. This is a classic use case for supervised learning where we have input data (loan application details) and output data (default or not). A linear regression model could be used to predict a continuous value (the credit default risk score), which can be thresholded to make a binary classification (likely to default or not).
92;You need to migrate a 2TB relational database to Google Cloud Platform. You do not have the resources to significantly refactor the application that uses this database and cost to operate is of primary concern. Which service do you select for storing and serving your data?;1;Cloud Spanner;Cloud Bigtable;Cloud Firestore;Cloud SQL;;;Cloud SQL;Cloud SQL is a fully-managed relational database service that can handle MySQL, PostgreSQL, and SQL Server. It is an ideal choice for migrating a 2TB relational database without significant refactoring, as it provides a familiar SQL interface and support for existing tools and libraries. While Cloud Spanner can also handle relational data and provide stronger consistency guarantees at global scale, it may be overkill for many applications and can be more expensive than Cloud SQL. Cloud Bigtable and Firestore are both NoSQL databases and would likely require significant application refactoring
93;You're using Bigtable for a real-time application, and you have a heavy load that is a mix of read and writes. You've recently identified an additional use case and need to perform hourly an analytical job to calculate certain statistics across the whole database. You need to ensure both the reliability of your production application as well as the analytical workload.;1;Export Bigtable dump to GCS and run your analytical job on top of the exported files.;Add a second cluster to an existing instance with a multi-cluster routing, use live-traffic app profile for your regular workload and batch-analytics profile for the analytics workload.;Add a second cluster to an existing instance with a single-cluster routing, use live-traffic app profile for your regular workload and batch-analytics profile for the analytics workload.;Increase the size of your existing cluster twice and execute your analytics workload on your new resized cluster.;;;Add a second cluster to an existing instance with a multi-cluster routing, use live-traffic app profile for your regular workload and batch-analytics profile for the analytics workload.;Adding a second cluster to the existing instance with multi-cluster routing can effectively handle the mix of real-time and analytical workload. With multi-cluster routing, you can create different application profiles (like live-traffic and batch-analytics in this case) that route data to different clusters based on your workload needs. This approach avoids overloading a single cluster with all types of workloads, ensuring better reliability and performance. The other options are less suitable or more complex for this specific scenario
94;You are designing an Apache Beam pipeline to enrich data from Cloud Pub/Sub with static reference data from BigQuery. The reference data is small enough to fit in memory on a single worker. The pipeline should write enriched results to BigQuery for analysis. Which job type and transforms should this pipeline use?;1;Batch job, PubSubIO, side-inputs;Streaming job, PubSubIO, JdbcIO, side-outputs;Streaming job, PubSubIO, BigQueryIO, side-inputs;Streaming job, PubSubIO, BigQueryIO, side-outputs;;;Streaming job, PubSubIO, BigQueryIO, side-inputs;You're ingesting data from Cloud Pub/Sub, which is a real-time messaging service, so you need a streaming job. PubSubIO is used to read data from Cloud Pub/Sub. Since the reference data from BigQuery is small enough to fit into memory on a single worker, it can be loaded into memory as a side input. Finally, you can use BigQueryIO to write the enriched data back to BigQuery for analysis. The other options are incorrect because they involve either the wrong job type or the wrong I/O operations.
95;You have a data pipeline that writes data to Cloud Bigtable using well-designed row keys. You want to monitor your pipeline to determine when to increase the size of your Cloud Bigtable cluster. Which two actions can you take to accomplish this? (Choose two.);2;Review Key Visualizer metrics. Increase the size of the Cloud Bigtable cluster when the Read pressure index is above 100.;Review Key Visualizer metrics. Increase the size of the Cloud Bigtable cluster when the Write pressure index is above 100.;Monitor the latency of write operations. Increase the size of the Cloud Bigtable cluster when there is a sustained increase in write latency.;Monitor storage utilization. Increase the size of the Cloud Bigtable cluster when utilization increases above 70% of max capacity.;Monitor latency of read operations. Increase the size of the Cloud Bigtable cluster of read operations take longer than 100 ms.;;Monitor storage utilization. Increase the size of the Cloud Bigtable cluster when utilization increases above 70% of max capacity.|Monitor the latency of write operations. Increase the size of the Cloud Bigtable cluster when there is a sustained increase in write latency.;Review Key Visualizer metrics and monitor latency of write operations. When the Write pressure index exceeds 100 or when there is a sustained increase in write latency, it could indicate that your cluster does not have enough resources to handle the workload. In such cases, increasing the size of your cluster could help.
96;You want to analyze hundreds of thousands of social media posts daily at the lowest cost and with the fewest steps. You have the following requirements:<br> <BR> You will batch-load the posts once per day and run them through the Cloud Natural Language API. <BR> You will extract topics and sentiment from the posts. <BR> You must store the raw posts for archiving and reprocessing. <BR> You will create dashboards to be shared with people both inside and outside your organization. You need to store both the data extracted from the API to perform analysis as well as the raw social media posts for historical archiving. What should you do?;1;Store the social media posts and the data extracted from the API in BigQuery.;Store the social media posts and the data extracted from the API in Cloud SQL.;Store the raw social media posts in Cloud Storage, and write the data extracted from the API into BigQuery.;Feed to social media posts into the API directly from the source, and write the extracted data from the API into BigQuery.;;;Store the raw social media posts in Cloud Storage, and write the data extracted from the API into BigQuery.;Google Cloud Storage is a cost-effective solution for storing large amounts of raw data, such as social media posts, for archiving purposes. On the other hand, BigQuery is designed for running fast, SQL-like queries against large datasets, so it's a good fit for storing the processed data that will be used for analysis. Thus, storing the raw posts in Cloud Storage and the extracted data in BigQuery will meet all the requirements, including cost-effectiveness and ease of analysis.
97;You store historic data in Cloud Storage. You need to perform analytics on the historic data. You want to use a solution to detect invalid data entries and perform data transformations that will not require programming or knowledge of SQL. What should you do?;1;Use Cloud Dataflow with Beam to detect errors and perform transformations.;Use Cloud Dataprep with recipes to detect errors and perform transformations.;Use Cloud Dataproc with a Hadoop job to detect errors and perform transformations.;Use federated tables in BigQuery with queries to detect errors and perform transformations.;;;Use Cloud Dataprep with recipes to detect errors and perform transformations.;Google Cloud Dataprep is an intelligent data service for visually exploring, cleaning, and preparing data for analysis. It is a serverless, no-code data preparation tool that is used to clean and transform data for analysis without the need for programming or SQL knowledge. It uses recipes, which are sets of steps to transform your data.
98;Your company needs to upload their historic data to Cloud Storage. The security rules don't allow access from external IPs to their on-premises resources. After an initial upload, they will add new data from existing on-premises applications every day. What should they do?;1;Execute gsutil rsync from the on-premises servers.;Use Dataflow and write the data to Cloud Storage.;Write a job template in Dataproc to perform the data transfer.;Install an FTP server on a Compute Engine VM to receive the files and move them to Cloud Storage.;;;Execute gsutil rsync from the on-premises servers.;gsutil is a Python application that lets you access Cloud Storage from the command line. The gsutil rsync command allows you to synchronize content of the source directory and the destination directory. Since this can be executed from the on-premise servers, it will not require access from external IPs to their on-premises resources.
99;"You have a query that filters a BigQuery table using a WHERE clause on timestamp and ID columns. By using bq query `""-dry_run you learn that the query triggers a full scan of the table, even though the filter on timestamp and ID select a tiny fraction of the overall data. You want to reduce the amount of data scanned by BigQuery with minimal changes to existing SQL queries. What should you do?";1;Create a separate table for each ID.;Use the LIMIT keyword to reduce the number of rows returned.;Recreate the table with a partitioning column and clustering column.;Use the bq query --maximum_bytes_billed flag to restrict the number of bytes billed.;;;Recreate the table with a partitioning column and clustering column.;In Google BigQuery, you can use partitioning and clustering to optimize the performance of your queries, as well as to control costs. Partitioning allows BigQuery to scan less data when you run queries, reducing costs and improving performance. Clustering reorganizes your data based on the contents of specific columns, which further improves query performance.
100;You have a requirement to insert minute-resolution data from 50,000 sensors into a BigQuery table. You expect significant growth in data volume and need the data to be available within 1 minute of ingestion for real-time analysis of aggregated trends. What should you do?;1;Use bq load to load a batch of sensor data every 60 seconds.;Use a Cloud Dataflow pipeline to stream data into the BigQuery table.;Use the INSERT statement to insert a batch of data every 60 seconds.;Use the MERGE statement to apply updates in batch every 60 seconds.;;;Use a Cloud Dataflow pipeline to stream data into the BigQuery table.;Cloud Dataflow is designed for processing both batch and real-time data streams, and it can support high-volume, high-velocity data. By using Cloud Dataflow, you can ensure that data will be available in BigQuery within 1 minute of ingestion, as it supports near real-time data processing.
101;You need to copy millions of sensitive patient records from a relational database to BigQuery. The total size of the database is 10 TB. You need to design a solution that is secure and time-efficient. What should you do?;1;Export the records from the database as an Avro file. Upload the file to GCS using gsutil, and then load the Avro file into BigQuery using the BigQuery web UI in the GCP Console.;Export the records from the database as an Avro file. Copy the file onto a Transfer Appliance and send it to Google, and then load the Avro file into BigQuery using the BigQuery web UI in the GCP Console.;Export the records from the database into a CSV file. Create a public URL for the CSV file, and then use Storage Transfer Service to move the file to Cloud Storage. Load the CSV file into BigQuery using the BigQuery web UI in the GCP Console.;Export the records from the database as an Avro file. Create a public URL for the Avro file, and then use Storage Transfer Service to move the file to Cloud Storage. Load the Avro file into BigQuery using the BigQuery web UI in the GCP Console.;;;Export the records from the database as an Avro file. Copy the file onto a Transfer Appliance and send it to Google, and then load the Avro file into BigQuery using the BigQuery web UI in the GCP Console.;Given the size of the database and the sensitive nature of the data, using the Google Transfer Appliance is the most secure and time-efficient method. The Transfer Appliance is a hardware appliance that you can use to securely and efficiently transfer large volumes of data (from hundreds of terabytes up to 1 petabyte) to Google Cloud. Once the data is in Google Cloud, it can be easily imported into BigQuery.
102;You need to create a near real-time inventory dashboard that reads the main inventory tables in your BigQuery data warehouse. Historical inventory data is stored as inventory balances by item and location. You have several thousand updates to inventory every hour. You want to maximize performance of the dashboard and ensure that the data is accurate. What should you do?;1;Leverage BigQuery UPDATE statements to update the inventory balances as they are changing.;Partition the inventory balance table by item to reduce the amount of data scanned with each inventory update.;Use the BigQuery streaming to stream changes into a daily inventory movement table. Calculate balances in a view that joins it to the historical inventory balance table. Update the inventory balance table nightly.;Use the BigQuery bulk loader to batch load inventory changes into a daily inventory movement table. Calculate balances in a view that joins it to the historical inventory balance table. Update the inventory balance table nightly.;;;Use the BigQuery streaming to stream changes into a daily inventory movement table. Calculate balances in a view that joins it to the historical inventory balance table. Update the inventory balance table nightly.;Streaming data into BigQuery is best for near real-time needs as it allows you to ingest and analyze data concurrently. By streaming changes into a daily inventory movement table and calculating balances in a view, you are reducing the latency between when data is ingested and when it becomes available for querying. Updating the inventory balance table nightly allows you to keep your historical data up to date without impacting the performance of your real-time dashboard.
103;You have a data stored in BigQuery. The data in the BigQuery dataset must be highly available. You need to define a storage, backup, and recovery strategy of this data that minimizes cost. How should you configure the BigQuery table that have a recovery point objective (RPO) of 30 days?;1;Set the BigQuery dataset to be regional. In the event of an emergency, use a point-in-time snapshot to recover the data.;Set the BigQuery dataset to be regional. Create a scheduled query to make copies of the data to tables suffixed with the time of the backup. In the event of an emergency, use the backup copy of the table.;Set the BigQuery dataset to be multi-regional. In the event of an emergency, use a point-in-time snapshot to recover the data.;Set the BigQuery dataset to be multi-regional. Create a scheduled query to make copies of the data to tables suffixed with the time of the backup. In the event of an emergency, use the backup copy of the table.;;;Set the BigQuery dataset to be multi-regional. In the event of an emergency, use a point-in-time snapshot to recover the data.;https://cloud.google.com/bigquery/docs/table-snapshots-intro#table_snapshots<BR> A BigQuery table snapshot preserves the contents of a table (called the base table) at a particular time. You can save a snapshot of a current table, or create a snapshot of a table as it was at any time in the past seven days. A table snapshot can have an expiration, when the configured amount of time has passed since the table snapshot was created, BigQuery deletes the table snapshot. You can query a table snapshot as you would a standard table. Table snapshots are read-only, but you can create (restore) a standard table from a table snapshot, and then you can modify the restored table.
104;You used Dataprep to create a recipe on a sample of data in a BigQuery table. You want to reuse this recipe on a daily upload of data with the same schema, after the load job with variable execution time completes. What should you do?;1;Create a cron schedule in Dataprep.;Create an App Engine cron job to schedule the execution of the Dataprep job.;Export the recipe as a Dataprep template, and create a job in Cloud Scheduler.;Export the Dataprep job as a Dataflow template, and incorporate it into a Composer job.;;;Export the Dataprep job as a Dataflow template, and incorporate it into a Composer job.;Dataprep by Trifacta,  doesn't provide a way to schedule jobs or directly integrate with Cloud Scheduler. However, it does allow users to export transformations as a Dataflow template. You can use this feature to export your Dataprep job as a Dataflow template. Then, you can use Cloud Composer, which is a managed Apache Airflow service, to schedule the execution of the Dataflow template job. This way, you can ensure that your recipe is applied to the new data on a daily basis.
105;You want to automate execution of a multi-step data pipeline running on Google Cloud. The pipeline includes Dataproc and Dataflow jobs that have multiple dependencies on each other. You want to use managed services where possible, and the pipeline will run every day. Which tool should you use?;1;cron;Cloud Composer;Cloud Scheduler;Workflow Templates on Dataproc;;;Cloud Composer;Cloud Composer is a fully managed workflow orchestration service that empowers you to author, schedule, and monitor pipelines that span across clouds and on-premises data centers. It is built on the popular open source project, Apache Airflow. You can use it to create, schedule, and manage workflows, which makes it a good fit for managing multi-step data pipelines involving Dataproc, Dataflow, and other Google Cloud services.
106;You are managing a Cloud Dataproc cluster. You need to make a job run faster while minimizing costs, without losing work in progress on your clusters. What should you do?;1;Increase the cluster size with more non-preemptible workers.;Increase the cluster size with preemptible worker nodes, and configure them to forcefully decommission.;Increase the cluster size with preemptible worker nodes, and use Cloud Stackdriver to trigger a script to preserve work.;Increase the cluster size with preemptible worker nodes, and configure them to use graceful decommissioning.;;;Increase the cluster size with preemptible worker nodes, and configure them to use graceful decommissioning.;Preemptible VMs in Google Cloud are a cost-effective choice if your applications are fault-tolerant. They can be shut down by Google Cloud at any time due to system demands, but this is where graceful decommissioning comes into play. Graceful decommissioning allows tasks running on preemptible VMs to finish before the VMs are preempted, which helps to not lose work in progress.
107;You work for a shipping company that uses handheld scanners to read shipping labels. Your company has strict data privacy standards that require scanners to only transmit tracking numbers when events are sent to Kafka topics. A recent software update caused the scanners to accidentally transmit recipients' personally identifiable information (PII) to analytics systems, which violates user privacy rules. You want to quickly build a scalable solution using cloud-native managed services to prevent exposure of PII to the analytics systems. What should you do?;1;Create an authorized view in BigQuery to restrict access to tables with sensitive data.;Install a third-party data validation tool on Compute Engine virtual machines to check the incoming data for sensitive information.;Use Cloud Logging to analyze the data passed through the total pipeline to identify transactions that may contain sensitive information.;Build a Cloud Function that reads the topics and makes a call to the Cloud Data Loss Prevention (Cloud DLP) API. Use the tagging and confidence levels to either pass or quarantine the data in a bucket for review.;;;Build a Cloud Function that reads the topics and makes a call to the Cloud Data Loss Prevention (Cloud DLP) API. Use the tagging and confidence levels to either pass or quarantine the data in a bucket for review.;Google Cloud Data Loss Prevention (Cloud DLP) API is designed to help discover, classify, and protect sensitive data. It can be effectively used in scenarios where PII might be exposed inadvertently. In this case, creating a Cloud Function to intercept the Kafka messages, process them through the Cloud DLP API, and then segregate or quarantine the sensitive data based on the API's response can help prevent PII from reaching the analytics systems.
108;You have developed three data processing jobs. One executes a Cloud Dataflow pipeline that transforms data uploaded to Cloud Storage and writes results to BigQuery. The second ingests data from on-premises servers and uploads it to Cloud Storage. The third is a Cloud Dataflow pipeline that gets information from third-party data providers and uploads the information to Cloud Storage. You need to be able to schedule and monitor the execution of these three workflows and manually execute them when needed. What should you do?;1;Create a Direct Acyclic Graph in Cloud Composer to schedule and monitor the jobs.;Use Stackdriver Monitoring and set up an alert with a Webhook notification to trigger the jobs.;Develop an App Engine application to schedule and request the status of the jobs using GCP API calls.;Set up cron jobs in a Compute Engine instance to schedule and monitor the pipelines using GCP API calls.;;;Create a Direct Acyclic Graph in Cloud Composer to schedule and monitor the jobs.;Cloud Composer is a fully managed workflow orchestration service built on Apache Airflow. It allows you to create, schedule, monitor, and control workflows as Directed Acyclic Graphs (DAGs). In this case, you can use Cloud Composer to schedule and monitor the execution of these three workflows as well as manually trigger them when needed.
109;You have Cloud Functions written in Node.js that pull messages from Cloud Pub/Sub and send the data to BigQuery. You observe that the message processing rate on the Pub/Sub topic is orders of magnitude higher than anticipated, but there is no error logged in Stackdriver Log Viewer. What are the two most likely causes of this problem? (Choose two.);2;Publisher throughput quota is too small.;Total outstanding messages exceed the 10-MB maximum.;Error handling in the subscriber code is not handling run-time errors properly.;The subscriber code cannot keep up with the messages.;The subscriber code does not acknowledge the messages that it pulls;;Error handling in the subscriber code is not handling run-time errors properly.|The subscriber code does not acknowledge the messages that it pulls;Poor error handling can lead to silent failures and unacknowledged messages can lead to their re-delivery, hence a higher message processing rate.
110;You are creating a new pipeline in Google Cloud to stream IoT data from Cloud Pub/Sub through Cloud Dataflow to BigQuery. While previewing the data, you notice that roughly 2% of the data appears to be corrupt. You need to modify the Cloud Dataflow pipeline to filter out this corrupt data. What should you do?;1;Add a SideInput that returns a Boolean if the element is corrupt.;Add a ParDo transform in Cloud Dataflow to discard corrupt elements.;Add a Partition transform in Cloud Dataflow to separate valid data from corrupt data.;Add a GroupByKey transform in Cloud Dataflow to group all of the valid data together and discard the rest.;;;Add a ParDo transform in Cloud Dataflow to discard corrupt elements.;The ParDo transform is a core element of Apache Beam, which underlies Google Cloud Dataflow. ParDo is short for 'Parallel Do'. It is used to perform parallel processing in Dataflow, and it's used for executing complex functions on every element in the input PCollection. You can use a ParDo transform in your pipeline to apply a function to each element that checks for corruption and discards corrupt elements.
111;You have historical data covering the last three years in BigQuery and a data pipeline that delivers new data to BigQuery daily. You have noticed that when the Data Science team runs a query filtered on a date column and limited to 30-90 days of data, the query scans the entire table. You also noticed that your bill is increasing more quickly than you expected. You want to resolve the issue as cost-effectively as possible while maintaining the ability to conduct SQL queries. What should you do?;1;Re-create the tables using DDL. Partition the tables by a column containing a TIMESTAMP or DATE Type.;Recommend that the Data Science team export the table to a CSV file on Cloud Storage and use Cloud Datalab to explore the data by reading the files directly.;Modify your pipeline to maintain the last 30-90 days of data in one table and the longer history in a different table to minimize full table scans over the entire history.;Write an Apache Beam pipeline that creates a BigQuery table per day. Recommend that the Data Science team use wildcards on the table name suffixes to select the data they need.;;;Re-create the tables using DDL. Partition the tables by a column containing a TIMESTAMP or DATE Type.;BigQuery supports partitioned tables which can significantly improve query performance and costs when a query filters data using the partitioned column. In this case, if the Data Science team regularly filters on a date column, partitioning the table by this column could drastically reduce the amount of data scanned, thus reducing costs and improving query performance.
112;You operate a logistics company, and you want to improve event delivery reliability for vehicle-based sensors. You operate small data centers around the world to capture these events, but leased lines that provide connectivity from your event collection infrastructure to your event processing infrastructure are unreliable, with unpredictable latency. You want to address this issue in the most cost-effective way. What should you do?;1;Deploy small Kafka clusters in your data centers to buffer events.;Have the data acquisition devices publish data to Cloud Pub/Sub.;Establish a Cloud Interconnect between all remote data centers and Google.;Write a Cloud Dataflow pipeline that aggregates all data in session windows.;;;Have the data acquisition devices publish data to Cloud Pub/Sub.;Google Cloud Pub/Sub provides a simple, reliable, scalable foundation for event-driven computing systems. By integrating applications with Pub/Sub, they can independently send and receive messages to and from topics and use subscription(s) to consume those messages. This service can be a good fit to publish data reliably from vehicle-based sensors even when connectivity is unreliable or latency is unpredictable. This is also cost-effective as you pay for what you use and it removes the necessity of managing your own Kafka clusters or establishing a Cloud Interconnect.
113;You are a retailer that wants to integrate your online sales capabilities with different in-home assistants, such as Google Home. You need to interpret customer voice commands and issue an order to the backend systems. Which solutions should you choose?;1;Speech-to-Text API;Cloud Natural Language API;Dialogflow Enterprise Edition;AutoML Natural Language;;;Dialogflow Enterprise Edition;Dialogflow Enterprise Edition is Google's human-computer interaction technology based on natural language conversations. It is the right tool for building voice and text-based conversational applications that can be integrated with many popular conversational platforms including Google Assistant (which powers Google Home). It not only provides speech recognition capabilities (which makes Speech-to-Text API redundant in this scenario), but also excels in intent recognition and conversational context management which is essential to understand customer's voice commands and respond appropriately.
114;Your company has a hybrid cloud initiative. You have a complex data pipeline that moves data between cloud provider services and leverages services from each of the cloud providers. Which cloud-native service should you use to orchestrate the entire pipeline?;1;Cloud Dataflow;Cloud Composer;Cloud Dataprep;Cloud Dataproc;;;Cloud Composer;Cloud Composer is a fully managed workflow orchestration service built on Apache Airflow that is ideal for creating, scheduling, monitoring, and managing multi-cloud and hybrid data pipelines. It is designed to be flexible and portable, meaning workflows can be developed and tested on any Apache Airflow environment and then deployed to Cloud Composer. It is integrated with a wide array of Google Cloud and third-party services.
115;You use a dataset in BigQuery for analysis. You want to provide third-party companies with access to the same dataset. You need to keep the costs of data sharing low and ensure that the data is current. Which solution should you choose?;1;Use Analytics Hub to control data access, and provide third party companies with access to the dataset;Use Cloud Scheduler to export the data on a regular basis to Cloud Storage, and provide third-party companies with access to the bucket;Create a separate dataset in BigQuery that contains the relevant data to share, and provide third-party companies with access to the new dataset;Create a Dataflow job that reads the data in frequent time intervals, and writes it to the relevant BigQuery dataset or Cloud Storage bucket for third-party companies to use;;;Use Analytics Hub to control data access, and provide third party companies with access to the dataset;Google Cloud's Analytics Hub is designed to facilitate data sharing and collaboration. With Analytics Hub, you can manage, curate, and share data assets across your organization and with external organizations. It allows secure access to shared data assets directly within BigQuery, ensuring real-time data availability.
116;Your company is in the process of migrating its on-premises data warehousing solutions to BigQuery. The existing data warehouse uses trigger-based change data capture (CDC) to apply updates from multiple transactional database sources on a daily basis. With BigQuery, your company hopes to improve its handling of CDC so that changes to the source systems are available to query in BigQuery in near-real time using log-based CDC streams, while also optimizing for the performance of applying changes to the data warehouse. Which two steps should they take to ensure that changes are available in the BigQuery reporting table with minimal latency while reducing compute overhead?(Choose two.);2;Perform a DML INSERT, UPDATE, or DELETE to replicate each individual CDC record in real time directly on the reporting table;Insert each new CDC record and corresponding operation type to a staging table in real time;Periodically DELETE outdated records from the reporting table;Periodically use a DML MERGE to perform several DML INSERT, UPDATE, and DELETE operations at the same time on the reporting table;Insert each new CDC record and corresponding operation type in real time to the reporting table, and use a materialized view to expose only the newest version of each unique record;;Insert each new CDC record and corresponding operation type to a staging table in real time|Periodically use a DML MERGE to perform several DML INSERT, UPDATE, and DELETE operations at the same time on the reporting table;In the case of near-real-time requirements, it's more efficient to stream changes to a staging table (B) rather than directly applying each change to the main reporting table, which could cause performance issues due to excessive computation for each individual record. Once the changes are collected in the staging table, you can periodically use a DML MERGE statement (D) to apply batches of changes to the main table in a single operation. This reduces the computational overhead, as it applies many changes at once rather than one-by-one, and provides an efficient way to keep the BigQuery reporting table updated.
117;You are designing a data processing pipeline. The pipeline must be able to scale automatically as load increases. Messages must be processed at least once and must be ordered within windows of 1 hour. How should you design the solution?;1;Use Apache Kafka for message ingestion and use Cloud Dataproc for streaming analysis.;Use Apache Kafka for message ingestion and use Cloud Dataflow for streaming analysis.;Use Cloud Pub/Sub for message ingestion and Cloud Dataproc for streaming analysis.;Use Cloud Pub/Sub for message ingestion and Cloud Dataflow for streaming analysis.;;;Use Cloud Pub/Sub for message ingestion and Cloud Dataflow for streaming analysis.;Google Cloud Pub/Sub is a scalable, reliable, fast, and secure real-time messaging service that allows senders to send messages and receivers to receive them. It supports many-to-many, asynchronous messaging that decouples senders and receivers, making it an excellent choice for ingesting data. Google Cloud Dataflow is a fully managed service for executing Apache Beam pipelines within the Google Cloud platform. It provides efficient and automatic resource management and dynamic work rebalancing, which can help with scaling your pipeline as load increases. In this case, Cloud Dataflow's streaming capabilities will support the real-time analysis requirements and ensure that messages are processed at least once.
118;You need to set access to BigQuery for different departments within your company. Your solution should comply with the following requirements:<br> Each department should have access only to their data. Each department will have one or more leads who need to be able to create and update tables and provide them to their team. Each department has data analysts who need to be able to query but not modify data. How should you set access to the data in BigQuery?;1;Create a dataset for each department. Assign the department leads the role of OWNER, and assign the data analysts the role of WRITER on their dataset.;Create a dataset for each department. Assign the department leads the role of WRITER, and assign the data analysts the role of READER on their dataset.;Create a table for each department. Assign the department leads the role of Owner, and assign the data analysts the role of Editor on the project the table is in.;Create a table for each department. Assign the department leads the role of Editor, and assign the data analysts the role of Viewer on the project the table is in.;;;Create a dataset for each department. Assign the department leads the role of WRITER, and assign the data analysts the role of READER on their dataset.;BigQuery datasets are top-level containers used to organize and control access to your tables and views. Datasets are ideal for providing the level of access granularity needed in this case. Assigning the role of WRITER to the department leads allows them to create and update tables while assigning the role of READER to the data analysts allows them to run queries on the tables but not modify the data.
119;You operate a database that stores stock trades and an application that retrieves average stock price for a given company over an adjustable window of time. The data is stored in Cloud Bigtable where the datetime of the stock trade is the beginning of the row key. Your application has thousands of concurrent users, and you notice that performance is starting to degrade as more stocks are added. What should you do to improve the performance of your application?;1;Change the row key syntax in your Cloud Bigtable table to begin with the stock symbol.;Change the row key syntax in your Cloud Bigtable table to begin with a random number per second.;Change the data pipeline to use BigQuery for storing stock trades, and update your application.;Use Cloud Dataflow to write a summary of each day's stock trades to an Avro file on Cloud Storage. Update your application to read from Cloud Storage and Cloud Bigtable to compute the responses.;;;Change the row key syntax in your Cloud Bigtable table to begin with the stock symbol.;Cloud Bigtable's performance depends heavily on the design of the row keys. Cloud Bigtable distributes read and write operations across your rows according to the row key, so if all your requests are for a small range of keys, you could overload a small subset of your nodes. If the datetime is the beginning of the row key, then requests for recent trades (which are likely to be more common) would all be routed to a small subset of nodes. Instead, beginning the row key with the stock symbol should distribute the reads and writes more evenly across the entire range of keys, improving performance.
120;You are operating a Cloud Dataflow streaming pipeline. The pipeline aggregates events from a Cloud Pub/Sub subscription source, within a window, and sinks the resulting aggregation to a Cloud Storage bucket. The source has consistent throughput. You want to monitor an alert on behavior of the pipeline with Cloud Stackdriver to ensure that it is processing data. Which Stackdriver alerts should you create?;1;An alert based on a decrease of subscription/num_undelivered_messages for the source and a rate of change increase of instance/storage/ used_bytes for the destination;An alert based on an increase of subscription/num_undelivered_messages for the source and a rate of change decrease of instance/storage/ used_bytes for the destination;An alert based on a decrease of instance/storage/used_bytes for the source and a rate of change increase of subscription/ num_undelivered_messages for the destination;An alert based on an increase of instance/storage/used_bytes for the source and a rate of change decrease of subscription/ num_undelivered_messages for the destination;;;An alert based on an increase of subscription/num_undelivered_messages for the source and a rate of change decrease of instance/storage/ used_bytes for the destination;In a well-functioning Cloud Dataflow pipeline, the number of undelivered messages in the Cloud Pub/Sub subscription (subscription/num_undelivered_messages) should remain steady or decrease as messages are processed by the pipeline. If this number increases, it indicates that the pipeline is not processing messages as fast as they are being added to the subscription. This could indicate a problem with the pipeline's ability to keep up with the message rate. Similarly, the amount of used storage in the Cloud Storage bucket (instance/storage/used_bytes) should increase over time as the pipeline writes its output. If the rate of change of this metric decreases, it indicates that fewer bytes are being written to the bucket, which may suggest a problem with the pipeline's output operations. So, setting alerts based on these two metrics can help monitor and alert on the behavior of the pipeline.
121;You currently have a single on-premises Kafka cluster in a data center in the us-east region that is responsible for ingesting messages from IoT devices globally. Because large parts of globe have poor internet connectivity, messages sometimes batch at the edge, come in all at once, and cause a spike in load on your Kafka cluster. This is becoming difficult to manage and prohibitively expensive. What is the Google-recommended cloud native architecture for this scenario?;1;Edge TPUs as sensor devices for storing and transmitting the messages.;Cloud Dataflow connected to the Kafka cluster to scale the processing of incoming messages.;An IoT gateway connected to Cloud Pub/Sub, with Cloud Dataflow to read and process the messages from Cloud Pub/Sub.;A Kafka cluster virtualized on Compute Engine in us-east with Cloud Load Balancing to connect to the devices around the world.;;;An IoT gateway connected to Cloud Pub/Sub, with Cloud Dataflow to read and process the messages from Cloud Pub/Sub.;Google Cloud Platform (GCP) recommends the use of Cloud Pub/Sub and Cloud Dataflow for real-time data ingestion and processing. IoT devices can connect to the cloud using an IoT gateway, and then the data can be pushed to Cloud Pub/Sub, which provides a scalable and reliable messaging infrastructure. Cloud Pub/Sub can handle spikes in load by scaling up and down automatically as needed. Cloud Dataflow can then be used to read and process the data from Cloud Pub/Sub, providing a fully managed, auto-scaling data processing service. This approach allows for real-time, scalable data processing and doesn't require the management of a Kafka cluster
122;You decided to use Cloud Datastore to ingest vehicle telemetry data in real time. You want to build a storage system that will account for the long-term data growth, while keeping the costs low. You also want to create snapshots of the data periodically, so that you can make a point-in-time (PIT) recovery, or clone a copy of the data for Cloud Datastore in a different environment. You want to archive these snapshots for a long time. Which two methods can accomplish this? (Choose two.);2;Use managed export, and store the data in a Cloud Storage bucket using Nearline or Coldline class.;Use managed export, and then import to Cloud Datastore in a separate project under a unique namespace reserved for that export.;Use managed export, and then import the data into a BigQuery table created just for that export, and delete temporary export files.;Write an application that uses Cloud Datastore client libraries to read all the entities. Treat each entity as a BigQuery table row via BigQuery streaming insert. Assign an export timestamp for each export, and attach it as an extra column for each row. Make sure that the BigQuery table is partitioned using the export timestamp column.;Write an application that uses Cloud Datastore client libraries to read all the entities. Format the exported data into a JSON file. Apply compression before storing the data in Cloud Source Repositories.;;Use managed export, and store the data in a Cloud Storage bucket using Nearline or Coldline class.|Use managed export, and then import to Cloud Datastore in a separate project under a unique namespace reserved for that export.;Managed exports can be used to create a snapshot of the datastore entities and store it in a Cloud Storage bucket. The Nearline or Coldline storage classes can be used for data that is accessed less frequently, making it a cost-effective solution for long-term data storage. You can also use managed export and then import the exported data into Cloud Datastore in a separate project, using a unique namespace reserved for that export. This allows you to clone a copy of the data for use in a different environment.
123;You need to create a data pipeline that copies time-series transaction data so that it can be queried from within BigQuery by your data science team for analysis. Every hour, thousands of transactions are updated with a new status. The size of the initial dataset is 1.5 PB, and it will grow by 3 TB per day. The data is heavily structured, and your data science team will build machine learning models based on this data. You want to maximize performance and usability for your data science team. Which two strategies should you adopt? (Choose two.);2;Denormalize the data as must as possible.;Preserve the structure of the data as much as possible.;Use BigQuery UPDATE to further reduce the size of the dataset.;Develop a data pipeline where status updates are appended to BigQuery instead of updated.;Copy a daily snapshot of transaction data to Cloud Storage and store it as an Avro file. Use BigQuery's support for external data sources to query.;;Denormalize the data as must as possible.|Develop a data pipeline where status updates are appended to BigQuery instead of updated.;Denormalization often improves the read performance of a database because it reduces the need for costly join operations. By denormalizing the data, the data science team can perform queries more efficiently which will improve the performance of their machine learning models.,In BigQuery, it's more cost-efficient and performant to append data rather than updating existing rows. Therefore, developing a data pipeline where status updates are appended to BigQuery instead of updated can provide performance benefits.
124;You are designing a cloud-native historical data processing system to meet the following conditions:<br> The data being analyzed is in CSV, Avro, and PDF formats and will be accessed by multiple analysis tools including Dataproc, BigQuery, and Compute Engine. A batch pipeline moves daily data. Performance is not a factor in the solution. The solution design should maximize availability. How should you design data storage for this solution?;1;Create a Dataproc cluster with high availability. Store the data in HDFS, and perform analysis as needed.;Store the data in BigQuery. Access the data using the BigQuery Connector on Dataproc and Compute Engine.;Store the data in a regional Cloud Storage bucket. Access the bucket directly using Dataproc, BigQuery, and Compute Engine.;Store the data in a multi-regional Cloud Storage bucket. Access the data directly using Dataproc, BigQuery, and Compute Engine.;;;Store the data in a multi-regional Cloud Storage bucket. Access the data directly using Dataproc, BigQuery, and Compute Engine.;When the system requires high availability and data is in different formats, Google Cloud Storage (GCS) is a great choice. It's durable, inexpensive, and can store a variety of data formats including CSV, Avro, and PDF. Storing data in a multi-regional bucket provides the highest level of availability because data is stored redundantly in multiple geographically separate locations. This ensures that the data remains available even if one location experiences an outage. GCS is also natively integrated with many GCP services. Dataproc, BigQuery, and Compute Engine can all directly access data stored in GCS.
125;You have a petabyte of analytics data and need to design a storage and processing platform for it. You must be able to perform data warehouse-style analytics on the data in Google Cloud and expose the dataset as files for batch analysis tools in other cloud providers. What should you do?;1;Store and process the entire dataset in BigQuery.;Store and process the entire dataset in Bigtable.;Store the full dataset in BigQuery, and store a compressed copy of the data in a Cloud Storage bucket.;Store the warm data as files in Cloud Storage, and store the active data in BigQuery. Keep this ratio as 80% warm and 20% active.;;;Store the full dataset in BigQuery, and store a compressed copy of the data in a Cloud Storage bucket.;BigQuery is a fully managed, serverless, and highly scalable enterprise data warehouse that is designed to make all your data analysts productive at an unmatched price-performance ratio. It allows you to analyze large datasets using ANSI SQL at high speed, and it has built-in machine learning capabilities. Storing the full dataset in BigQuery allows your team to query and analyze it efficiently using SQL-like queries. Meanwhile, Google Cloud Storage is a robust, scalable object storage solution for your data, making it a great option for storing a compressed copy of your dataset for accessibility outside Google Cloud, such as for batch analysis tools in other cloud providers.
126;You work for a manufacturing company that sources up to 750 different components, each from a different supplier. You've collected a labeled dataset that has on average 1000 examples for each unique component. Your team wants to implement an app to help warehouse workers recognize incoming components based on a photo of the component. You want to implement the first working version of this app (as Proof-Of-Concept) within a few working days. What should you do?;1;A. Use Cloud Vision AutoML with the existing dataset.;B. Use Cloud Vision AutoML, but reduce your dataset twice;C. Use Cloud Vision API by providing custom labels as recognition hints.;D. Train your own image recognition model leveraging transfer learning techniques.;;;A. Use Cloud Vision AutoML with the existing dataset.;
127;You are working on a niche product in the image recognition domain. Your team has developed a model that is dominated by custom C++ TensorFlow ops your team has implemented. These ops are used inside your main training loop and are performing bulky matrix multiplications. It currently takes up to several days to train a model. You want to decrease this time significantly and keep the cost low by using an accelerator on Google Cloud. What should you do?;1;Use Cloud TPUs without any additional adjustment to your code.;Use Cloud TPUs after implementing GPU kernel support for your customs ops.;Use Cloud GPUs after implementing GPU kernel support for your customs ops.;Stay on CPUs, and increase the size of the cluster you're training your model on.;;;Use Cloud GPUs after implementing GPU kernel support for your customs ops.;When dealing with custom TensorFlow operations in a complex model, making these operations compatible with a specific type of accelerator is necessary to utilize it effectively. Cloud TPUs (Tensor Processing Units) and GPUs (Graphics Processing Units) can significantly accelerate the training process, but they require compatible operations. In this case, since the operations are custom-made and not already optimized for TPUs, it might be more practical to adjust the custom operations for GPU compatibility and use Cloud GPUs.
128;You work on a regression problem in a natural language processing domain, and you have 100M labeled examples in your dataset. You have randomly shuffled your data and split your dataset into train and test samples (in a 90/10 ratio). After you trained the neural network and evaluated your model on a test set, you discover that the root-mean-squared error (RMSE) of your model is twice as high on the train set as on the test set. How should you improve the performance of your model?;1;Increase the share of the test sample in the train-test split.;Try to collect more data and increase the size of your dataset.;Try out regularization techniques (e.g., dropout of batch normalization) to avoid overfitting.;Increase the complexity of your model by, e.g., introducing an additional layer or increase sizing the size of vocabularies or n-grams used.;;;Increase the complexity of your model by, e.g., introducing an additional layer or increase sizing the size of vocabularies or n-grams used.;If the root-mean-squared error (RMSE) of your model is higher on the training set than on the test set, it suggests that the model is underfitting the training data. This means the model is too simple and not capturing the underlying patterns of the data well enough. To address underfitting, you can increase the complexity of the model, such as adding more layers to a neural network or increasing the size of vocabularies or n-grams used.
129;You use BigQuery as your centralized analytics platform. New data is loaded every day, and an ETL pipeline modifies the original data and prepares it for the final users. This ETL pipeline is regularly modified and can generate errors, but sometimes the errors are detected only after 2 weeks. You need to provide a method to recover from these errors, and your backups should be optimized for storage costs. How should you organize your data in BigQuery and store your backups?;1;Organize your data in a single table, export, and compress and store the BigQuery data in Cloud Storage.;Organize your data in separate tables for each month, and export, compress, and store the data in Cloud Storage.;Organize your data in separate tables for each month, and duplicate your data on a separate dataset in BigQuery.;Organize your data in separate tables for each month, and use snapshot decorators to restore the table to a time prior to the corruption.;;;Organize your data in separate tables for each month, and use snapshot decorators to restore the table to a time prior to the corruption.;BigQuery provides a feature called 'Table Decorators' that allow you to access a view of the table at a specific time, effectively providing a way to view and query historical versions of the table. This feature is particularly useful for recovering from errors, as it allows you to restore the table to a state before the error occurred. Organizing the data in separate tables for each month helps to manage the data more effectively, and using snapshot decorators to restore the table helps to minimize storage costs as you do not need to keep separate copies of your data.
130;The marketing team at your organization provides regular updates of a segment of your customer dataset. The marketing team has given you a CSV with 1 million records that must be updated in BigQuery. When you use the UPDATE statement in BigQuery, you receive a quotaExceeded error. What should you do?;1;Reduce the number of records updated each day to stay within the BigQuery UPDATE DML statement limit.;Increase the BigQuery UPDATE DML statement limit in the Quota management section of the Google Cloud Platform Console.;Split the source CSV file into smaller CSV files in Cloud Storage to reduce the number of BigQuery UPDATE DML statements per BigQuery job.;Import the new records from the CSV file into a new BigQuery table. Create a BigQuery job that merges the new records with the existing records and writes the results to a new BigQuery table.;;;Import the new records from the CSV file into a new BigQuery table. Create a BigQuery job that merges the new records with the existing records and writes the results to a new BigQuery table.;BigQuery's UPDATE DML statement has limits, and if those limits are exceeded, a quotaExceeded error is returned. Since increasing the quota is typically not an option, one way to resolve this is to take a different approach: instead of using UPDATE statements, you can import the new records into a separate BigQuery table and then create a job to merge these records with the existing records. This approach is effective for large updates, and it also avoids the issue of the quotaExceeded error.
131;As your organization expands its usage of GCP, many teams have started to create their own projects. Projects are further multiplied to accommodate different stages of deployments and target audiences. Each project requires unique access control configurations. The central IT team needs to have access to all projects. Furthermore, data from Cloud Storage buckets and BigQuery datasets must be shared for use in other projects in an ad hoc way. You want to simplify access control management by minimizing the number of policies. Which two steps should you take?;2;Use Cloud Deployment Manager to automate access provision.;Introduce resource hierarchy to leverage access control policy inheritance.;Create distinct groups for various teams, and specify groups in Cloud IAM policies.;Only use service accounts when sharing data for Cloud Storage buckets and BigQuery datasets.;For each Cloud Storage bucket or BigQuery dataset, decide which projects need access. Find all the active members who have access to these projects, and create a Cloud IAM policy to grant access to all these users.;;Introduce resource hierarchy to leverage access control policy inheritance.|Create distinct groups for various teams, and specify groups in Cloud IAM policies.;By introducing a resource hierarchy (Organization -> Folder -> Project -> Resources), you can leverage IAM inheritance. Policies set at a higher level in the hierarchy are inherited by all the resources lower down. This simplifies access control management by reducing the number of policies you have to maintain. Creating distinct groups for different teams and specifying those groups in Cloud IAM policies is a good way to manage access control. If an individual's role changes, you can simply move them to a different group, instead of having to edit IAM policies. This is also a good practice for the principle of least privilege, as you can ensure that each team only has the access it needs.
132;Your United States-based company has created an application for assessing and responding to user actions. The primary table's data volume grows by 250,000 records per second. Many third parties use your application's APIs to build the functionality into their own frontend applications. Your application's APIs should comply with the following requirements:<br> <br> Single global endpoint <br> ANSI SQL support <br> Consistent access to the most up-to-date data <br> What should you do?;1;Implement BigQuery with no region selected for storage or processing.;Implement Cloud Spanner with the leader in North America and read-only replicas in Asia and Europe.;Implement Cloud SQL for PostgreSQL with the master in North America and read replicas in Asia and Europe.;Implement Bigtable with the primary cluster in North America and secondary clusters in Asia and Europe.;;;Implement Cloud Spanner with the leader in North America and read-only replicas in Asia and Europe.;Google Cloud Spanner provides a single global endpoint that supports ANSI SQL. It allows consistent access to the most up-to-date data due to its strong global consistency. This is accomplished by using a leader replica (to serve write requests) and multiple read-only replicas (to serve read requests). Therefore, it fits all the mentioned requirements perfectly.
133;A data scientist has created a BigQuery ML model and asks you to create an ML pipeline to serve predictions. You have a REST API application with the requirement to serve predictions for an individual user ID with latency under 100 milliseconds. You use the following query to generate predictions:<br> SELECT predicted_label, user_id FROM ML.PREDICT (MODEL 'dataset.model', table user_features).;1;Add a WHERE clause to the query, and grant the BigQuery Data Viewer role to the application service account.;Create an Authorized View with the provided query. Share the dataset that contains the view with the application service account.;Create a Dataflow pipeline using BigQueryIO to read results from the query. Grant the Dataflow Worker role to the application service account.;Create a Dataflow pipeline using BigQueryIO to read predictions for all users from the query. Write the results to Bigtable using BigtableIO. Grant the Bigtable Reader role to the application service account so that the application can read predictions for individual users from Bigtable.;;;Create a Dataflow pipeline using BigQueryIO to read predictions for all users from the query. Write the results to Bigtable using BigtableIO. Grant the Bigtable Reader role to the application service account so that the application can read predictions for individual users from Bigtable.;Given the requirement to serve predictions with latency under 100 milliseconds for an individual user ID, the most effective approach is to pre-compute predictions for all users and then serve the individual predictions from a low-latency database such as Bigtable. Dataflow can be used to manage the ML pipeline, fetching the predictions from BigQuery and writing them to Bigtable. Bigtable is a high performance, fully-managed NoSQL database service suitable for real-time access, making it ideal for this use case. The application service account can then be granted the Bigtable Reader role to access the individual user predictions.
134;You are building an application to share financial market data with consumers, who will receive data feeds. Data is collected from the markets in real time. Consumers will receive the data in the following ways:<br> Real-time event stream, ANSI SQL access to real-time stream and historical data, Batch historical exports. Which solution should you use?;1;Cloud Dataflow, Cloud SQL, Cloud Spanner;Cloud Pub/Sub, Cloud Storage, BigQuery;Cloud Dataproc, Cloud Dataflow, BigQuery;Cloud Pub/Sub, Cloud Dataproc, Cloud SQL;;;Cloud Pub/Sub, Cloud Storage, BigQuery;Cloud Pub/Sub is a messaging service that is well-suited for handling real-time event streams, such as the financial market data in this scenario. It is capable of ingesting event-driven data and dispatching it to many types of consumers. BigQuery supports ANSI SQL queries, making it a good fit for providing SQL access to both real-time and historical data. BigQuery's high-speed streaming insertion API also allows you to insert rows of data into BigQuery table at a high rate, making it suitable for real-time data analysis. Cloud Storage is a scalable, fully-managed, highly reliable, and cost-efficient object/blob store which can be used for batch historical exports of data.
135;You are building a new application that you need to collect data from in a scalable way. Data arrives continuously from the application throughout the day, and you expect to generate approximately 150 GB of JSON data per day by the end of the year. Your requirements are:<br> Decoupling producer from consumer, Space and cost-efficient storage of the raw ingested data, which is to be stored indefinitely, Near real-time SQL query, Maintain at least 2 years of historical data, which will be queried with SQL. Which pipeline should you use to meet these requirements?;1;Create an application that provides an API. Write a tool to poll the API and write data to Cloud Storage as gzipped JSON files.;Create an application that writes to a Cloud SQL database to store the data. Set up periodic exports of the database to write to Cloud Storage and load into BigQuery.;Create an application that publishes events to Cloud Pub/Sub, and create Spark jobs on Cloud Dataproc to convert the JSON data to Avro format, stored on HDFS on Persistent Disk.;Create an application that publishes events to Cloud Pub/Sub, and create a Cloud Dataflow pipeline that transforms the JSON event payloads to Avro, writing the data to Cloud Storage and BigQuery.;;;Create an application that publishes events to Cloud Pub/Sub, and create a Cloud Dataflow pipeline that transforms the JSON event payloads to Avro, writing the data to Cloud Storage and BigQuery.;This solution meets all the requirements outlined in the question. Cloud Pub/Sub allows you to decouple the producer from the consumer. It provides a flexible, reliable, real-time messaging service for independent applications to publish and subscribe to asynchronous events. Cloud Storage is cost-efficient and is excellent for storing large amounts of data indefinitely. BigQuery enables you to execute SQL queries in near real-time. Both BigQuery and Cloud Storage can maintain historical data and support SQL queries.
136;You are running a pipeline in Dataflow that receives messages from a Pub/Sub topic and writes the results to a BigQuery dataset in the EU. Currently, your pipeline is located in europe-west4 and has a maximum of 3 workers, instance type n1-standard-1. You notice that during peak periods, your pipeline is struggling to process records in a timely fashion, when all 3 workers are at maximum CPU utilization. Which two actions can you take to increase performance of your pipeline?;2;Increase the number of max workers;Use a larger instance type for your Dataflow workers;Change the zone of your Dataflow pipeline to run in us-central1;Create a temporary table in Bigtable that will act as a buffer for new data. Create a new step in your pipeline to write to this table first, and then create a new pipeline to write from Bigtable to BigQuery;Create a temporary table in Cloud Spanner that will act as a buffer for new data. Create a new step in your pipeline to write to this table first, and then create a new pipeline to write from Cloud Spanner to BigQuery;;Increase the number of max workers| Use a larger instance type for your Dataflow workers;Increasing the number of maximum workers will provide more processing power to handle peak loads. It allows Dataflow to use additional resources when the demand increases. Using a larger instance type for your Dataflow workers will provide more CPU and memory resources per worker, which can improve the overall performance of your pipeline. Option C isn't appropriate as you typically want to locate your resources in the same region to minimize latency and cost. Also, since the BigQuery dataset is in the EU, moving the pipeline to the US wouldn't make sense from a data governance and latency point of view. Options D and E involve creating temporary tables in Bigtable and Cloud Spanner respectively. These options are not ideal because they add complexity to the pipeline without necessarily increasing performance. They would also increase the overall cost and might introduce latency in processing.
137;You have a data pipeline with a Dataflow job that aggregates and writes time series metrics to Bigtable. You notice that data is slow to update in Bigtable. This data feeds a dashboard used by thousands of users across the organization. You need to support additional concurrent users and reduce the amount of time required to write the data. Which two actions should you take?;2;Configure your Dataflow pipeline to use local execution;Increase the maximum number of Dataflow workers by setting maxNumWorkers in PipelineOptions;Increase the number of nodes in the Bigtable cluster;Modify your Dataflow pipeline to use the Flatten transform before writing to Bigtable;Modify your Dataflow pipeline to use the CoGroupByKey transform before writing to Bigtable;;Increase the maximum number of Dataflow workers by setting maxNumWorkers in PipelineOptions, Increase the number of nodes in the Bigtable cluster|Increase the number of nodes in the Bigtable cluster;Increasing the maximum number of Dataflow workers can help scale out processing capacity. This allows Google Cloud Dataflow to use more resources when the demand increases, which can improve the overall throughput and efficiency of the pipeline. Increasing the number of nodes in the Bigtable cluster can help increase the read and write capacity. This can help reduce the time required to write data, which will be beneficial in this situation where the update in Bigtable is slow. Option A, configuring your Dataflow pipeline to use local execution, wouldn't help here. Local execution is typically used for development and testing, not for improving performance in a production environment. Options D and E, modifying your Dataflow pipeline to use the Flatten transform or the CoGroupByKey transform before writing to Bigtable, would not necessarily improve performance. The choice of transform depends on the specifics of the data processing logic, and neither of these transforms is specifically designed to improve writing performance to Bigtable.
138;You have several Spark jobs that run on a Cloud Dataproc cluster on a schedule. Some of the jobs run in sequence, and some of the jobs run concurrently. You need to automate this process. What should you do?;1;Create a Cloud Dataproc Workflow Template;Create an initialization action to execute the jobs;Create a Directed Acyclic Graph in Cloud Composer;Create a Bash script that uses the Cloud SDK to create a cluster, execute jobs, and then tear down the cluster;;;Create a Directed Acyclic Graph in Cloud Composer;Cloud Composer is a fully managed workflow orchestration service that empowers you to author, schedule, and monitor pipelines that span across clouds and on-premises data centers. Cloud Composer is built on Apache Airflow, an open-source project focused on workflows. You can create a Directed Acyclic Graph (DAG) in Cloud Composer to automate the process, handle dependencies, and manage the order of the jobs. Cloud Dataproc Workflow Templates are used to automate job and cluster creation, but they are not designed to handle complex scenarios where some jobs run in sequence, and some run concurrently. An initialization action runs when a Dataproc cluster is created. This would not help in automating a complex job sequence or scheduling. A Bash script could work, but this would require a lot of manual work and may not be easily maintainable. It doesn't offer the robust features of a workflow orchestration tool like Cloud Composer.
139;You are building a new data pipeline to share data between two different types of applications:<br> jobs generators and job runners. Your solution must scale to accommodate increases in usage and must accommodate the addition of new applications without negatively affecting the performance of existing ones. What should you do?;1;Create an API using App Engine to receive and send messages to the applications;Use a Cloud Pub/Sub topic to publish jobs, and use subscriptions to execute them;Create a table on Cloud SQL, and insert and delete rows with the job information;Create a table on Cloud Spanner, and insert and delete rows with the job information;;;Use a Cloud Pub/Sub topic to publish jobs, and use subscriptions to execute them;Cloud Pub/Sub provides a highly scalable, flexible, and reliable messaging system that decouples senders and receivers. It's a great solution for data pipelines that require high-throughput and low-latency processing, and it offers at-least-once message delivery. In this scenario, job generators could publish jobs to a Pub/Sub topic, and job runners could subscribe to this topic to execute the jobs. Option A might not scale as efficiently as Cloud Pub/Sub, especially under a high load of messages. Besides, it could introduce additional latency, as all messages would need to be processed by the App Engine service. Option C and D, using Cloud SQL or Cloud Spanner as a messaging queue is not a good idea. These are relational databases designed for structured data storage, not for messaging. Also, they might not be able to scale horizontally as efficiently as Cloud Pub/Sub can, which could negatively affect the performance of the system under high loads.
140;You need to create a new transaction table in Cloud Spanner that stores product sales data. You are deciding what to use as a primary key. From a performance perspective, which strategy should you choose?;1;The current epoch time;A concatenation of the product name and the current epoch time;A random universally unique identifier number (version 4 UUID);The original order identification number from the sales system, which is a monotonically increasing integer;;;A random universally unique identifier number (version 4 UUID);Cloud Spanner distributes user data across multiple servers according to the lexicographic order of the key. If you use monotonically increasing or decreasing values like epoch time or order IDs as the key (Options A and D), it can lead to 'hotspotting,' where a disproportionate amount of workload is directed at a small number of servers. This can seriously harm the performance of a Cloud Spanner database. Random UUIDs (Option C) do a much better job of distributing data evenly across servers, which leads to better performance. Using the product name concatenated with the current epoch time (Option B) could also lead to hotspotting, especially if a small number of products are sold frequently. It's generally not recommended to use keys that could be unevenly distributed or predictable.
141;Data Analysts in your company have the Cloud IAM Owner role assigned to them in their projects to allow them to work with multiple GCP products in their projects. Your organization requires that all BigQuery data access logs be retained for 6 months. You need to ensure that only audit personnel in your company can access the data access logs for all projects. What should you do?;1;Enable data access logs in each Data Analyst's project. Restrict access to Stackdriver Logging via Cloud IAM roles.;Export the data access logs via a project-level export sink to a Cloud Storage bucket in the Data Analysts' projects. Restrict access to the Cloud Storage bucket.;Export the data access logs via a project-level export sink to a Cloud Storage bucket in a newly created projects for audit logs. Restrict access to the project with the exported logs.;Export the data access logs via an aggregated export sink to a Cloud Storage bucket in a newly created project for audit logs. Restrict access to the project that contains the exported logs.;;;Export the data access logs via an aggregated export sink to a Cloud Storage bucket in a newly created project for audit logs. Restrict access to the project that contains the exported logs.;You want to aggregate logs from all projects into one project and then restrict access to only those who need to see the logs. This can be accomplished by using an aggregated export sink, which will capture logs from all the projects in the organization and export them to a specified destination, in this case, a Cloud Storage bucket in a new project. Then, by using Cloud IAM, you can restrict access to the project containing the logs so only audit personnel can view them. This solution provides a centralized, secure location for all logs while ensuring that only authorized personnel have access. Note: Stackdriver Logging has been renamed to Cloud Logging.
142;Each analytics team in your organization is running BigQuery jobs in their own projects. You want to enable each team to monitor slot usage within their projects. What should you do?;1;Create a Cloud Monitoring dashboard based on the BigQuery metric query/scanned_bytes;Create a Cloud Monitoring dashboard based on the BigQuery metric slots/allocated_for_project;Create a log export for each project, capture the BigQuery job execution logs, create a custom metric based on the totalSlotMs, and create a Cloud Monitoring dashboard based on the custom metric;Create an aggregated log export at the organization level, capture the BigQuery job execution logs, create a custom metric based on the totalSlotMs, and create a Cloud Monitoring dashboard based on the custom metric;;;Create a Cloud Monitoring dashboard based on the BigQuery metric slots/allocated_for_project;Cloud Monitoring provides visibility into the performance, uptime, and overall health of cloud-powered applications. Google Cloud’s operations suite (formerly Stackdriver) aggregates metrics, logs, and events from infrastructure, giving developers and operators a rich set of observable signals that speed root-cause analysis and reduce mean time to resolution (MTTR). BigQuery has built-in metrics such as slots/allocated_for_project, which shows the average number of slots allocated during a time interval, available in Cloud Monitoring. By creating a Cloud Monitoring dashboard based on this metric, each team can monitor their slot usage within their projects.
143;You are operating a streaming Cloud Dataflow pipeline. Your engineers have a new version of the pipeline with a different windowing algorithm and triggering strategy. You want to update the running pipeline with the new version. You want to ensure that no data is lost during the update. What should you do?;1;Update the Cloud Dataflow pipeline inflight by passing the --update option with the --jobName set to the existing job name;Update the Cloud Dataflow pipeline inflight by passing the --update option with the --jobName set to a new unique job name;Stop the Cloud Dataflow pipeline with the Cancel option. Create a new Cloud Dataflow job with the updated code;Stop the Cloud Dataflow pipeline with the Drain option. Create a new Cloud Dataflow job with the updated code;;;Stop the Cloud Dataflow pipeline with the Drain option. Create a new Cloud Dataflow job with the updated code;Updating a Cloud Dataflow pipeline in-place (options A and B) is possible, but it's not suitable for all changes, especially changes to the windowing and triggering strategy, because they can significantly change the pipeline's structure. Stopping a pipeline with the Cancel option (option C) will immediately halt the pipeline, potentially losing any data that's currently being processed. Draining a pipeline, on the other hand, ensures that the pipeline finishes processing all data as of the point when the drain was requested. Once drained, you can deploy the new version of the pipeline without the risk of data loss. Hence, option D is the right choice.
144;You need to move 2 PB of historical data from an on-premises storage appliance to Cloud Storage within six months, and your outbound network capacity is constrained to 20 Mb/sec. How should you migrate this data to Cloud Storage?;1;Use Transfer Appliance to copy the data to Cloud Storage;"Use gsutil cp ג€""J to compress the content being uploaded to Cloud Storage";Create a private URL for the historical data, and then use Storage Transfer Service to copy the data to Cloud Storage;Use trickle or ionice along with gsutil cp to limit the amount of bandwidth gsutil utilizes to less than 20 Mb/sec so it does not interfere with the production traffic;;;Use Transfer Appliance to copy the data to Cloud Storage;Given the amount of data (2 PB), the time constraint (six months), and the limited network bandwidth (20 Mb/sec), using a network-based solution for data transfer is not feasible. The Google Cloud Transfer Appliance, a hardware device that you install in your data center, is designed for such scenarios. You can load your data onto the appliance and then ship it to a Google upload facility, where the data is uploaded to Cloud Storage.
145;You receive data files in CSV format monthly from a third party. You need to cleanse this data, but every third month the schema of the files changes. Your requirements for implementing these transformations include:<br>-Executing the transformations on a schedule<br>- Enabling non-developer analysts to modify transformations<br> -Providing a graphical tool for designing transformations <br>What should you do?;1;Use Dataprep by Trifacta to build and maintain the transformation recipes, and execute them on a scheduled basis;Load each month's CSV data into BigQuery, and write a SQL query to transform the data to a standard schema. Merge the transformed tables together with a SQL query;Help the analysts write a Dataflow pipeline in Python to perform the transformation. The Python code should be stored in a revision control system and modified as the incoming data's schema changes;Use Apache Spark on Dataproc to infer the schema of the CSV file before creating a Dataframe. Then implement the transformations in Spark SQL before writing the data out to Cloud Storage and loading into BigQuery;;;Use Dataprep by Trifacta to build and maintain the transformation recipes, and execute them on a scheduled basis;Dataprep by Trifacta is a visual tool designed to explore and transform raw data from various sources. It is user-friendly and does not require coding skills, making it ideal for non-developer analysts. It also allows for building and maintaining transformation recipes, which can be executed on a schedule.
146;You want to migrate an on-premises Hadoop system to Cloud Dataproc. Hive is the primary tool in use, and the data format is Optimized Row Columnar (ORC). All ORC files have been successfully copied to a Cloud Storage bucket. You need to replicate some data to the cluster's local Hadoop Distributed File System (HDFS) to maximize performance. What are two ways to start using Hive in Cloud Dataproc? (Choose two.);2;Run the gsutil utility to transfer all ORC files from the Cloud Storage bucket to HDFS. Mount the Hive tables locally.;Run the gsutil utility to transfer all ORC files from the Cloud Storage bucket to any node of the Dataproc cluster. Mount the Hive tables locally.;Run the gsutil utility to transfer all ORC files from the Cloud Storage bucket to the master node of the Dataproc cluster. Then run the Hadoop utility to copy them do HDFS. Mount the Hive tables from HDFS.;Leverage Cloud Storage connector for Hadoop to mount the ORC files as external Hive tables. Replicate external Hive tables to the native ones.;Load the ORC files into BigQuery. Leverage BigQuery connector for Hadoop to mount the BigQuery tables as external Hive tables. Replicate external Hive tables to the native ones.;;Run the gsutil utility to transfer all ORC files from the Cloud Storage bucket to HDFS. Mount the Hive tables locally.|Leverage Cloud Storage connector for Hadoop to mount the ORC files as external Hive tables. Replicate external Hive tables to the native ones.;You can use the gsutil command-line tool to transfer your ORC files from Cloud Storage to HDFS. Then you can mount the Hive tables locally for querying with Hive on your Cloud Dataproc cluster. The Google Cloud Storage connector for Hadoop enables the Hadoop application to use Google Cloud Storage as an input/output source. By leveraging it, you can mount the ORC files stored in Google Cloud Storage as external Hive tables. Then you can create native Hive tables based on the external ones.
147;You are implementing several batch jobs that must be executed on a schedule. These jobs have many interdependent steps that must be executed in a specific order. Portions of the jobs involve executing shell scripts, running Hadoop jobs, and running queries in BigQuery. The jobs are expected to run for many minutes up to several hours. If the steps fail, they must be retried a fixed number of times. Which service should you use to manage the execution of these jobs?;1;Cloud Scheduler;Cloud Dataflow;Cloud Functions;Cloud Composer;;;Cloud Composer;Cloud Composer, which is a managed Apache Airflow service, is designed to create, schedule, monitor and manage workflows, making it an ideal choice for the described scenario. With Cloud Composer, you can manage complex workflows and dependencies with built-in retry and failure handling mechanisms.
148;You work for a shipping company that has distribution centers where packages move on delivery lines to route them properly. The company wants to add cameras to the delivery lines to detect and track any visual damage to the packages in transit. You need to create a way to automate the detection of damaged packages and flag them for human review in real time while the packages are in transit. Which solution should you choose?;1;Use BigQuery machine learning to be able to train the model at scale, so you can analyze the packages in batches.;Train an AutoML model on your corpus of images, and build an API around that model to integrate with the package tracking applications.;Use the Cloud Vision API to detect for damage, and raise an alert through Cloud Functions. Integrate the package tracking applications with this function.;Use TensorFlow to create a model that is trained on your corpus of images. Create a Python notebook in Cloud Datalab that uses this model so you can analyze for damaged packages.;;;Train an AutoML model on your corpus of images, and build an API around that model to integrate with the package tracking applications.;AutoML Vision is a powerful tool from Google Cloud that uses machine learning models to analyze images and provide predictions. It allows you to train a custom model using your own images, making it a great fit for this use case where you have a very specific task of detecting damage on packages in images. IM NOT SUREEEEE
149;You are migrating your data warehouse to BigQuery. You have migrated all of your data into tables in a dataset. Multiple users from your organization will be using the data. They should only see certain tables based on their team membership. How should you set user permissions?;1;A. Assign the users/groups data viewer access at the table level for each table;B. Create SQL views for each team in the same dataset in which the data resides, and assign the users/groups data viewer access to the SQL views;C. Create authorized views for each team in the same dataset in which the data resides, and assign the users/groups data viewer access to the authorized views;D. Create authorized views for each team in datasets created for each team. Assign the authorized views data viewer access to the dataset in which the data resides. Assign the users/groups data viewer access to the datasets in which the authorized views reside;;;A. Assign the users/groups data viewer access at the table level for each table;
150;You want to build a managed Hadoop system as your data lake. The data transformation process is composed of a series of Hadoop jobs executed in sequence. To accomplish the design of separating storage from compute, you decided to use the Cloud Storage connector to store all input data, output data, and intermediary data. However, you noticed that one Hadoop job runs very slowly with Cloud Dataproc, when compared with the on-premises bare-metal Hadoop environment (8-core nodes with 100-GB RAM). Analysis shows that this particular Hadoop job is disk I/O intensive. You want to resolve the issue. What should you do?;1;Allocate sufficient memory to the Hadoop cluster, so that the intermediary data of that particular Hadoop job can be held in memory;Allocate sufficient persistent disk space to the Hadoop cluster, and store the intermediate data of that particular Hadoop job on native HDFS;Allocate more CPU cores of the virtual machine instances of the Hadoop cluster so that the networking bandwidth for each instance can scale up;Allocate additional network interface card (NIC), and configure link aggregation in the operating system to use the combined throughput when working with Cloud Storage;;;Allocate sufficient persistent disk space to the Hadoop cluster, and store the intermediate data of that particular Hadoop job on native HDFS;If a particular Hadoop job is disk I/O intensive, storing intermediate data in Cloud Storage may not be optimal because of the network latency involved in accessing Cloud Storage. Instead, storing the intermediate data on local HDFS (Hadoop Distributed File System) on the Dataproc nodes could lead to faster data access, thereby improving the performance of the Hadoop job.
151;You work for an advertising company, and you've developed a Spark ML model to predict click-through rates at advertisement blocks. You've been developing everything at your on-premises data center, and now your company is migrating to Google Cloud. Your data center will be closing soon, so a rapid lift-and-shift migration is necessary. However, the data you've been using will be migrated to migrated to BigQuery. You periodically retrain your Spark ML models, so you need to migrate existing training pipelines to Google Cloud. What should you do?;1;Use Vertex AI for training existing Spark ML models;Rewrite your models on TensorFlow, and start using Vertex AI;Use Dataproc for training existing Spark ML models, but start reading data directly from BigQuery;Spin up a Spark cluster on Compute Engine, and train Spark ML models on the data exported from BigQuery;;;Use Dataproc for training existing Spark ML models, but start reading data directly from BigQuery;Google Cloud Dataproc is a managed Spark and Hadoop service that lets you run your existing Spark ML jobs on Google Cloud by migrating your data to BigQuery and adjusting your jobs to read data from BigQuery MAKE SHURE IS JUST GPT ANSWER
152;You work for a global shipping company. You want to train a model on 40 TB of data to predict which ships in each geographic region are likely to cause delivery delays on any given day. The model will be based on multiple attributes collected from multiple sources. Telemetry data, including location in GeoJSON format, will be pulled from each ship and loaded every hour. You want to have a dashboard that shows how many and which ships are likely to cause delays within a region. You want to use a storage solution that has native functionality for prediction and geospatial processing. Which storage solution should you use?;1;BigQuery;Cloud Bigtable;Cloud Datastore;Cloud SQL for PostgreSQL;;;BigQuery;Google BigQuery is a fully-managed, serverless data warehouse that enables super-fast SQL queries using the processing power of Google's infrastructure. It has native support for GeoJSON and geospatial processing. MAKE SHURE IS JUST GPT ANSWER
153;You operate an IoT pipeline built around Apache Kafka that normally receives around 5000 messages per second. You want to use Google Cloud Platform to create an alert as soon as the moving average over 1 hour drops below 4000 messages per second. What should you do?;1;Consume the stream of data in Dataflow using Kafka IO. Set a sliding time window of 1 hour every 5 minutes. Compute the average when the window closes, and send an alert if the average is less than 4000 messages.;Consume the stream of data in Dataflow using Kafka IO. Set a fixed time window of 1 hour. Compute the average when the window closes, and send an alert if the average is less than 4000 messages.;Use Kafka Connect to link your Kafka message queue to Pub/Sub. Use a Dataflow template to write your messages from Pub/Sub to Bigtable. Use Cloud Scheduler to run a script every hour that counts the number of rows created in Bigtable in the last hour. If that number falls below 4000, send an alert.;Use Kafka Connect to link your Kafka message queue to Pub/Sub. Use a Dataflow template to write your messages from Pub/Sub to BigQuery. Use Cloud Scheduler to run a script every five minutes that counts the number of rows created in BigQuery in the last hour. If that number falls below 4000, send an alert.;;;Consume the stream of data in Dataflow using Kafka IO. Set a sliding time window of 1 hour every 5 minutes. Compute the average when the window closes, and send an alert if the average is less than 4000 messages.;This solution leverages Google Cloud's Dataflow service, which is designed for exactly this type of real-time, window-based stream processing. MAKE SHURE IS JUST GPT ANSWER
154;You plan to deploy Cloud SQL using MySQL. You need to ensure high availability in the event of a zone failure. What should you do?;1;Create a Cloud SQL instance in one zone, and create a failover replica in another zone within the same region.;Create a Cloud SQL instance in one zone, and create a read replica in another zone within the same region.;Create a Cloud SQL instance in one zone, and configure an external read replica in a zone in a different region.;Create a Cloud SQL instance in a region, and configure automatic backup to a Cloud Storage bucket in the same region.;;;Create a Cloud SQL instance in one zone, and create a failover replica in another zone within the same region.;This configuration ensures that if the Cloud SQL instance in the primary zone becomes unavailable, traffic is automatically redirected to the failover replica in the other zone. MAKE SHURE IS JUST GPT ANSWER
155;Your company is selecting a system to centralize data ingestion and delivery. You are considering messaging and data integration systems to address the requirements. The key requirements are:<br> The ability to seek to a particular offset in a topic, possibly back to the start of all data ever captured. Support for publish/subscribe semantics on hundreds of topics. Retain per-key ordering - Which system should you choose?;1;Apache Kafka;Cloud Storage;Dataflow;Firebase Cloud Messaging;;;Apache Kafka;Apache Kafka is a highly scalable messaging system that can handle huge volumes of data in real time, supports a publish/subscribe model, and allows consumers to seek to a particular offset in a topic. MAKE SHURE IS JUST GPT ANSWER
156;You are planning to migrate your current on-premises Apache Hadoop deployment to the cloud. You need to ensure that the deployment is as fault-tolerant and cost-effective as possible for long-running batch jobs. You want to use a managed service. What should you do?;1;Deploy a Dataproc cluster. Use a standard persistent disk and 50% preemptible workers. Store data in Cloud Storage, and change references in scripts from hdfs:// to gs://.;Deploy a Dataproc cluster. Use an SSD persistent disk and 50% preemptible workers. Store data in Cloud Storage, and change references in scripts from hdfs:// to gs://.;Install Hadoop and Spark on a 10-node Compute Engine instance group with standard instances. Install the Cloud Storage connector, and store the data in Cloud Storage. Change references in scripts from hdfs:// to gs://.;Install Hadoop and Spark on a 10-node Compute Engine instance group with preemptible instances. Store data in HDFS. Change references in scripts from hdfs:// to gs://.;;;Deploy a Dataproc cluster. Use a standard persistent disk and 50% preemptible workers. Store data in Cloud Storage, and change references in scripts from hdfs:// to gs://.;This setup leverages Google Cloud's Dataproc service and Cloud Storage, providing a cost-effective and fault-tolerant solution for migrating Apache Hadoop to the cloud. MAKE SHURE IS JUST GPT ANSWER
157;Your team is working on a binary classification problem. You have trained a support vector machine (SVM) classifier with default parameters, and received an area under the Curve (AUC) of 0.87 on the validation set. You want to increase the AUC of the model. What should you do?;1;Perform hyperparameter tuning;Train a classifier with deep neural networks, because neural networks would always beat SVMs;Deploy the model and measure the real-world AUC,it's always higher because of generalization;Scale predictions you get out of the model (tune a scaling factor as a hyperparameter) in order to get the highest AUC;;;Perform hyperparameter tuning;This process can help to improve the performance of the SVM classifier by tuning the parameters of the model. MAKE SHURE IS JUST GPT ANSWER
158;You need to deploy additional dependencies to all nodes of a Cloud Dataproc cluster at startup using an existing initialization action. Company security policies require that Cloud Dataproc nodes do not have access to the Internet so public initialization actions cannot fetch resources. What should you do?;1;Deploy the Cloud SQL Proxy on the Cloud Dataproc master;Use an SSH tunnel to give the Cloud Dataproc cluster access to the Internet;Copy all dependencies to a Cloud Storage bucket within your VPC security perimeter;Use Resource Manager to add the service account used by the Cloud Dataproc cluster to the Network User role;;;Copy all dependencies to a Cloud Storage bucket within your VPC security perimeter;This ensures that the necessary dependencies can be deployed to the Dataproc nodes without needing access to the internet, thus satisfying the company's security policies. MAKE SHURE IS JUST GPT ANSWER
159;You need to choose a database for a new project that has the following requirements:<br> Fully managed, Able to automatically scale up, Transactionally consistent, Able to scale up to 6 TB, Able to be queried using SQL. Which database do you choose?;1;Cloud SQL;Cloud Bigtable;Cloud Spanner;Cloud Datastore;;;Cloud Spanner;Google Cloud Spanner is a fully managed, scalable, and transactionally consistent database service that supports SQL queries and can scale up to petabytes. MAKE SHURE IS JUST GPT ANSWER
160;You work for a mid-sized enterprise that needs to move its operational system transaction data from an on-premises database to GCP. The database is about 20 TB in size. Which database should you choose?;1;Cloud SQL;Cloud Bigtable;Cloud Spanner;Cloud Datastore;;;Cloud Spanner;Google Cloud Spanner is ideal for large-scale databases like a 20 TB operational system as it is designed to handle large volumes of data across many nodes, offering high transaction consistency and availability. MAKE SHURE IS JUST GPT ANSWER
161;You need to choose a database to store time series CPU and memory usage for millions of computers. You need to store this data in one-second interval samples. Analysts will be performing real-time, ad hoc analytics against the database. You want to avoid being charged for every query executed and ensure that the schema design will allow for future growth of the dataset. Which database and data model should you choose?;1;Create a table in BigQuery, and append the new samples for CPU and memory to the table;Create a wide table in BigQuery, create a column for the sample value at each second, and update the row with the interval for each second;Create a narrow table in Bigtable with a row key that combines the Computer Engine computer identifier with the sample time at each second;Create a wide table in Bigtable with a row key that combines the computer identifier with the sample time at each minute, and combine the values for each second as column data;;;Create a narrow table in Bigtable with a row key that combines the Computer Engine computer identifier with the sample time at each second;Cloud Bigtable is designed for real-time access for time-series data, and offers throughput, low latency, and scalability. MAKE SURE GPT ANSWERS
162;You want to archive data in Cloud Storage. Because some data is very sensitive, you want to use the Trust No One (TNO) approach to encrypt your data to prevent the cloud provider staff from decrypting your data. What should you do?;1;Use gcloud kms keys create to create a symmetric key. Then use gcloud kms encrypt to encrypt each archival file with the key and unique additional authenticated data (AAD). Use gsutil cp to upload each encrypted file to the Cloud Storage bucket, and keep the AAD outside of Google Cloud.;Use gcloud kms keys create to create a symmetric key. Then use gcloud kms encrypt to encrypt each archival file with the key. Use gsutil cp to upload each encrypted file to the Cloud Storage bucket. Manually destroy the key previously used for encryption, and rotate the key once.;Specify customer-supplied encryption key (CSEK) in the .boto configuration file. Use gsutil cp to upload each archival file to the Cloud Storage bucket. Save the CSEK in Cloud Memorystore as permanent storage of the secret.;Specify customer-supplied encryption key (CSEK) in the .boto configuration file. Use gsutil cp to upload each archival file to the Cloud Storage bucket. Save the CSEK in a different project that only the security team can access.;;;Specify customer-supplied encryption key (CSEK) in the .boto configuration file. Use gsutil cp to upload each archival file to the Cloud Storage bucket. Save the CSEK in a different project that only the security team can access.;This approach gives you full control over the encryption key, and the cloud provider doesn't have access to it, which is the essence of the Trust No One (TNO) approach. MAKE SURE GPT ANSWERS
163;You have data pipelines running on BigQuery, Dataflow, and Dataproc. You need to perform health checks and monitor their behavior, and then notify the team managing the pipelines if they fail. You also need to be able to work across multiple projects. Your preference is to use managed products or features of the platform. What should you do?;1;Export the information to Cloud Monitoring, and set up an Alerting policy;Run a Virtual Machine in Compute Engine with Airflow, and export the information to Cloud Monitoring;Export the logs to BigQuery, and set up App Engine to read that information and send emails if you find a failure in the logs;Develop an App Engine application to consume logs using GCP API calls, and send emails if you find a failure in the logs;;;Export the information to Cloud Monitoring, and set up an Alerting policy;Cloud Monitoring provides visibility into the performance, uptime, and overall health of applications. MAKE SURE GPT ANSWERS
164;You are working on a linear regression model on BigQuery ML to predict a customer's likelihood of purchasing your company's products. Your model uses a city name variable as a key predictive component. In order to train and serve the model, your data must be organized in columns. You want to prepare your data using the least amount of coding while maintaining the predictable variables. What should you do?;1;Create a new view with BigQuery that does not include a column with city information.;Use SQL in BigQuery to transform the state column using a one-hot encoding method, and make each city a column with binary values.;Use TensorFlow to create a categorical variable with a vocabulary list. Create the vocabulary file and upload that as part of your model to BigQuery ML.;Use Cloud Data Fusion to assign each city to a region that is labeled as 1, 2, 3, 4, or 5, and then use that number to represent the city in the model.;;;Use SQL in BigQuery to transform the state column using a one-hot encoding method, and make each city a column with binary values.;One-hot encoding is a process by which categorical variables are converted into a binary vector. This encoding will help you to use the city name variable as a key predictive component in the linear regression model. MAKE SURE GPT ANSWERS
165;You work for a large bank that operates in locations throughout North America. You are setting up a data storage system that will handle bank account transactions. You require ACID compliance and the ability to access data with SQL. Which solution is appropriate?;1;Store transaction data in Cloud Spanner. Enable stale reads to reduce latency.;Store transaction data in Cloud Spanner. Use locking read-write transactions.;Store transaction data in BigQuery. Disabled the query cache to ensure consistency.;Store transaction data in Cloud SQL. Use a federated query BigQuery for analysis.;;;Store transaction data in Cloud Spanner. Use locking read-write transactions.;Cloud Spanner is a fully managed, mission-critical relational database service that offers transactional consistency at global scale, schemas, SQL semantics, high availability, and strong read and write consistency across regions and continents. MAKE SURE GPT ANSWERS
166;A shipping company has live package-tracking data that is sent to an Apache Kafka stream in real time. This is then loaded into BigQuery. Analysts in your company want to query the tracking data in BigQuery to analyze geospatial trends in the lifecycle of a package. The table was originally created with ingest-date partitioning. Over time, the query processing time has increased. You need to implement a change that would improve query performance in BigQuery. What should you do?;1;Implement clustering in BigQuery on the ingest date column.;Implement clustering in BigQuery on the package-tracking ID column.;Tier older data onto Cloud Storage files and create a BigQuery table using Cloud Storage as an external data source.;Re-create the table using data partitioning on the package delivery date.;;;Implement clustering in BigQuery on the package-tracking ID column.;Clustering organizes data based on the contents of specific columns, which then helps with the efficiency of queries that filter on those columns. MAKE SURE GPT ANSWERS
167;Your company currently runs a large on-premises cluster using Spark, Hive, and HDFS in a colocation facility. The cluster is designed to accommodate peak usage on the system, however, many jobs are batch in nature, and usage of the cluster fluctuates quite dramatically. Your company is eager to move to the cloud to reduce the overhead associated with on-premises infrastructure and maintenance and to benefit from the cost savings. They are also hoping to modernize their existing infrastructure to use more serverless offerings in order to take advantage of the cloud. Because of the timing of their contract renewal with the colocation facility, they have only 2 months for their initial migration. How would you recommend they approach their upcoming migration strategy so they can maximize their cost savings in the cloud while still executing the migration in time?;1;Migrate the workloads to Dataproc plus HDFS, modernize later.;Migrate the workloads to Dataproc plus Cloud Storage, modernize later.;Migrate the Spark workload to Dataproc plus HDFS, and modernize the Hive workload for BigQuery.;Modernize the Spark workload for Dataflow and the Hive workload for BigQuery.;;;Migrate the workloads to Dataproc plus Cloud Storage, modernize later.;Migrate the existing Spark and HDFS workloads to Google Cloud using managed services like Dataproc and Cloud Storage. This allows for a quick lift and shift migration with minimal changes to the current workloads. MAKE SURE GPT ANSWERS
168;data is sent to Pub/Sub before being ingested into BigQuery. For security reasons, you decide to redact your customers' Government issued Identification Number while allowing customer service representatives to view the original values when necessary. What should you do?;1;Use BigQuery's built-in AEAD encryption to encrypt the SSN column. Save the keys to a new table that is only viewable by permissioned users.;Use BigQuery column-level security. Set the table permissions so that only members of the Customer Service user group can see the SSN column.;Before loading the data into BigQuery, use Cloud Data Loss Prevention (DLP) to replace input values with a cryptographic hash.;Before loading the data into BigQuery, use Cloud Data Loss Prevention (DLP) to replace input values with a cryptographic format-preserving encryption token.;;;Before loading the data into BigQuery, use Cloud Data Loss Prevention (DLP) to replace input values with a cryptographic format-preserving encryption token.;Cloud Data Loss Prevention (DLP) offers a way to transform sensitive data in a format-preserving manner, allowing authorized individuals to access the original data when necessary. MAKE SURE GPT ANSWERS
169;You are migrating a table to BigQuery and are deciding on the data model. Your table stores information related to purchases made across several store locations and includes information like the time of the transaction, items purchased, the store ID, and the city and state in which the store is located. You frequently query this table to see how many of each item were sold over the past 30 days and to look at purchasing trends by state, city, and individual store. How would you model this table for the best query performance?;1;Partition by transaction time, cluster by state first, then city, then store ID.;Partition by transaction time, cluster by store ID first, then city, then state.;Top-level cluster by state first, then city, then store ID.;Top-level cluster by store ID first, then city, then state.;;;Partition by transaction time, cluster by state first, then city, then store ID.;By partitioning the data by the transaction time, you optimize queries that filter by date range, which is common for sales data. Clustering by the location hierarchy (state, city, store ID) helps improve performance when analyzing sales by geographical area. MAKE SURE GPT ANSWERS
170;You are updating the code for a subscriber to a Pub/Sub feed. You are concerned that upon deployment the subscriber may erroneously acknowledge messages, leading to message loss. Your subscriber is not set up to retain acknowledged messages. What should you do to ensure that you can recover from errors after deployment?;1;Set up the Pub/Sub emulator on your local machine. Validate the behavior of your new subscriber logic before deploying it to production.;Create a Pub/Sub snapshot before deploying new subscriber code. Use a Seek operation to re-deliver messages that became available after the snapshot was created.;Use Cloud Build for your deployment. If an error occurs after deployment, use a Seek operation to locate a timestamp logged by Cloud Build at the start of the deployment.;Enable dead-lettering on the Pub/Sub topic to capture messages that aren't successfully acknowledged. If an error occurs after deployment, re-deliver any messages captured by the dead-letter queue.;;;Create a Pub/Sub snapshot before deploying new subscriber code. Use a Seek operation to re-deliver messages that became available after the snapshot was created.;Creating a Pub/Sub snapshot prior to deployment ensures that you have a fallback mechanism in place in case of errors. The snapshot stores the state of all unacknowledged messages at a given point in time. If any issues arise, the Seek operation can be used to redeliver  MAKE SURE GPT ANSWERSmessages.
171;You work for a large real estate firm and are preparing 6 TB of home sales data to be used for machine learning. You will use SQL to transform the data and use BigQuery ML to create a machine learning model. You plan to use the model for predictions against a raw dataset that has not been transformed. How should you set up your workflow in order to prevent skew at prediction time?;1;When creating your model, use BigQuery's TRANSFORM clause to define preprocessing steps. At prediction time, use BigQuery's ML.EVALUATE clause without specifying any transformations on the raw input data;When creating your model, use BigQuery's TRANSFORM clause to define preprocessing steps. Before requesting predictions, use a saved query to transform your raw input data, and then use ML.EVALUATE;Use a BigQuery view to define your preprocessing logic. When creating your model, use the view as your model training data. At prediction time, use BigQuery's ML.EVALUATE clause without specifying any transformations on the raw input data;Preprocess all data using Dataflow. At prediction time, use BigQuery's ML.EVALUATE clause without specifying any further transformations on the input data;;;When creating your model, use BigQuery's TRANSFORM clause to define preprocessing steps. At prediction time, use BigQuery's ML.EVALUATE clause without specifying any transformations on the raw input data;The TRANSFORM clause in BigQuery ML allows you to preprocess the input features before training. The same transformations are automatically applied during the prediction or evaluation. MAKE SURE GPT ANSWER
172;You are analyzing the price of a company's stock. Every 5 seconds, you need to compute a moving average of the past 30 seconds' worth of data. You are reading data from Pub/Sub and using DataFlow to conduct the analysis. How should you set up your windowed pipeline?;1;Use a fixed window with a duration of 5 seconds. Emit results by setting the following trigger: AfterProcessingTime.pastFirstElementInPane().plusDelayOf (Duration.standardSeconds(30));Use a fixed window with a duration of 30 seconds. Emit results by setting the following trigger: AfterWatermark.pastEndOfWindow().plusDelayOf (Duration.standardSeconds(5));Use a sliding window with a duration of 5 seconds. Emit results by setting the following trigger: AfterProcessingTime.pastFirstElementInPane().plusDelayOf (Duration.standardSeconds(30));Use a sliding window with a duration of 30 seconds and a period of 5 seconds. Emit results by setting the following trigger: AfterWatermark.pastEndOfWindow ();;;Use a sliding window with a duration of 30 seconds and a period of 5 seconds. Emit results by setting the following trigger: AfterWatermark.pastEndOfWindow();Sliding windows are a type of windowing strategy that suits your need because you want to compute an average over the past 30 seconds every 5 seconds. In other words, the windows overlap and each element may fall into multiple windows. MAKE SURE GPT ANSWER
173;You are designing a pipeline that publishes application events to a Pub/Sub topic. Although message ordering is not important, you need to be able to aggregate events across disjoint hourly intervals before loading the results to BigQuery for analysis. What technology should you use to process and load this data to BigQuery while ensuring that it will scale with large volumes of events?;1;Create a Cloud Function to perform the necessary data processing that executes using the Pub/Sub trigger every time a new message is published to the topic;Schedule a Cloud Function to run hourly, pulling all available messages from the Pub/Sub topic and performing the necessary aggregations;Schedule a batch Dataflow job to run hourly, pulling all available messages from the Pub/Sub topic and performing the necessary aggregations;Create a streaming Dataflow job that reads continually from the Pub/Sub topic and performs the necessary aggregations using tumbling windows;;;Create a streaming Dataflow job that reads continually from the Pub/Sub topic and performs the necessary aggregations using tumbling windows;Dataflow is designed for large-scale processing scenarios and offers both batch and stream processing capabilities. In this case, you are processing streaming data, so a streaming job is appropriate. You can use tumbling windows to aggregate events across disjoint hourly intervals. MAKE SURE GPT ANSWER
174;You work for a large financial institution that is planning to use Dialogflow to create a chatbot for the company's mobile app. You have reviewed old chat logs and tagged each conversation for intent based on each customer's stated intention for contacting customer service. About 70% of customer requests are simple requests that are solved within 10 intents. The remaining 30% of inquiries require much longer, more complicated requests. Which intents should you automate first?;1;Automate the 10 intents that cover 70% of the requests so that live agents can handle more complicated requests.;Automate the more complicated requests first because those require more of the agents' time.;Automate a blend of the shortest and longest intents to be representative of all intents.;Automate intents in places where common words such as 'payment' appear only once so the software isn't confused.;;;Automate the 10 intents that cover 70% of the requests so that live agents can handle more complicated requests.;By automating these intents, you can free up a significant amount of time for customer service agents, allowing them to focus on more complex tasks. This strategy allows for a more efficient use of resources. MAKE SURE GPT ANSWER
175;Your company is implementing a data warehouse using BigQuery, and you have been tasked with designing the data model. You move your on-premises sales data warehouse with a star data schema to BigQuery but notice performance issues when querying the data of the past 30 days. Based on Google's recommended practices, what should you do to speed up the query without increasing storage costs?;1;Denormalize the data.;Shard the data by customer ID.;Materialize the dimensional data in views.;Partition the data by transaction date.;;;Partition the data by transaction date.;In BigQuery, you can reduce the cost of queries by structuring your data so that you can exclude irrelevant data. By partitioning your table by transaction date, BigQuery processes less data when executing the query. MAKE SURE GPT ANSWER
176;You have uploaded 5 years of log data to Cloud Storage. A user reported that some data points in the log data are outside of their expected ranges, which indicates errors. You need to address this issue and be able to run the process again in the future while keeping the original data for compliance reasons. What should you do?;1;Import the data from Cloud Storage into BigQuery. Create a new BigQuery table, and skip the rows with errors.;Create a Compute Engine instance and create a new copy of the data in Cloud Storage. Skip the rows with errors.;Create a Dataflow workflow that reads the data from Cloud Storage, checks for values outside the expected range, sets the value to an appropriate default, and writes the updated records to a new dataset in Cloud Storage.;Create a Dataflow workflow that reads the data from Cloud Storage, checks for values outside the expected range, sets the value to an appropriate default, and writes the updated records to the same dataset in Cloud Storage.;;;Create a Dataflow workflow that reads the data from Cloud Storage, checks for values outside the expected range, sets the value to an appropriate default, and writes the updated records to a new dataset in Cloud Storage.;This method allows you to keep the original data for compliance reasons while ensuring that future data integrity checks and operations are performed on the cleaned data. MAKE SURE GPT ANSWER
177;You want to rebuild your batch pipeline for structured data on Google Cloud. You are using PySpark to conduct data transformations at scale, but your pipelines are taking over twelve hours to run. To expedite development and pipeline run time, you want to use a serverless tool and SOL syntax. You have already moved your raw data into Cloud Storage. How should you build the pipeline on Google Cloud while meeting speed and processing requirements?;1;Convert your PySpark commands into SparkSQL queries to transform the data, and then run your pipeline on Dataproc to write the data into BigQuery.;Ingest your data into Cloud SQL, convert your PySpark commands into SparkSQL queries to transform the data, and then use federated quenes from BigQuery for machine learning.;Ingest your data into BigQuery from Cloud Storage, convert your PySpark commands into BigQuery SQL queries to transform the data, and then write the transformations to a new table.;Use Apache Beam Python SDK to build the transformation pipelines, and write the data into BigQuery.;;;Ingest your data into BigQuery from Cloud Storage, convert your PySpark commands into BigQuery SQL queries to transform the data, and then write the transformations to a new table.;BigQuery is a fully managed, serverless data warehouse that enables super-fast SQL queries using the processing power of Google's infrastructure. It also supports SQL syntax for data transformation, making it a suitable choice for rebuilding the batch pipeline. MAKE SURE GPT ANSWER
178;You are testing a Dataflow pipeline to ingest and transform text files. The files are compressed gzip, errors are written to a dead-letter queue, and you are using SideInputs to join data. You noticed that the pipeline is taking longer to complete than expected, what should you do to expedite the Dataflow job?;1;Switch to compressed Avro files.;Reduce the batch size.;Retry records that throw an error.;Use CoGroupByKey instead of the SideInput.;;;Use CoGroupByKey instead of the SideInput.;In Apache Beam and thus in Dataflow, using SideInputs can slow down your pipeline if the amount of data is large because all the data needs to be loaded into memory. CoGroupByKey is a better solution when dealing with large datasets as it doesn't require all data to be loaded into memory. MAKE SURE GPT ANSWER
179;You are building a real-time prediction engine that streams files, which may contain PII (personal identifiable information) data, into Cloud Storage and eventually into BigQuery. You want to ensure that the sensitive data is masked but still maintains referential integrity, because names and emails are often used as join keys. How should you use the Cloud Data Loss Prevention API (DLP API) to ensure that the PII data is not accessible by unauthorized individuals?;1;Create a pseudonym by replacing the PII data with cryptogenic tokens, and store the non-tokenized data in a locked-down button.;Redact all PII data, and store a version of the unredacted data in a locked-down bucket.;Scan every table in BigQuery, and mask the data it finds that has PII.;Create a pseudonym by replacing PII data with a cryptographic format-preserving token.;;;Create a pseudonym by replacing PII data with a cryptographic format-preserving token.;This method helps ensure the sensitive data is not accessible by unauthorized individuals while maintaining referential integrity. Cryptographic tokens cannot be reversed without the encryption key, and the format-preserving feature ensures the tokenized data retains the format of the original data, enabling it to be used as join keys. MAKE SURE GPT ANSWER
180;You are migrating an application that tracks library books and information about each book, such as author or year published, from an on-premises data warehouse to BigQuery. In your current relational database, the author information is kept in a separate table and joined to the book information on a common key. Based on Google's recommended practice for schema design, how would you structure the data to ensure optimal speed of queries about the author of each book that has been borrowed?;1;Keep the schema the same, maintain the different tables for the book and each of the attributes, and query as you are doing today.;Create a table that is wide and includes a column for each attribute, including the author's first name, last name, date of birth, etc.;Create a table that includes information about the books and authors, but nest the author fields inside the author column.;Keep the schema the same, create a view that joins all of the tables, and always query the view.;;;Create a table that includes information about the books and authors, but nest the author fields inside the author column.;In BigQuery, you can create nested and repeated fields to represent hierarchical data structures. This way, you would keep data about authors associated with each book, and it would allow fast queries since all the necessary information is in the same table MAKE SURE GPT ANSWER.
181;You need to give new website users a globally unique identifier (GUID) using a service that takes in data points and returns a GUID. This data is sourced from both internal and external systems via HTTP calls that you will make via microservices within your pipeline. There will be tens of thousands of messages per second and that can be multi-threaded. and you worry about the backpressure on the system. How should you design your pipeline to minimize that backpressure?;1;Call out to the service via HTTP;Create the pipeline statically in the class definition;Create a new object in the startBundle method of DoFn;Batch the job into ten-second increments;;;Batch the job into ten-second increments;Batching the job into ten-second increments helps to avoid overwhelming the system with too many concurrent requests, thus mitigating backpressure.
182;You are migrating your data warehouse to Google Cloud and decommissioning your on-premises data center. Because this is a priority for your company, you know that bandwidth will be made available for the initial data load to the cloud. The files being transferred are not large in number, but each file is 90 GB. Additionally, you want your transactional systems to continually update the warehouse on Google Cloud in real time. What tools should you use to migrate the data and ensure that it continues to write to your warehouse?;1;Storage Transfer Service for the migration, Pub/Sub and Cloud Data Fusion for the real-time updates;BigQuery Data Transfer Service for the migration, Pub/Sub and Dataproc for the real-time updates;gsutil for the migration, Pub/Sub and Dataflow for the real-time updates;gsutil for both the migration and the real-time updates;;;gsutil for the migration, Pub/Sub and Dataflow for the real-time updates;gsutil can be used for the initial large data migration, and Google Cloud Pub/Sub combined with Cloud Dataflow can handle real-time data updates effectively.
183;You are using Bigtable to persist and serve stock market data for each of the major indices. To serve the trading application, you need to access only the most recent stock prices that are streaming in. How should you design your row key and tables to ensure that you can access the data with the simplest query?;1;Create one unique table for all of the indices, and then use the index and timestamp as the row key design;Create one unique table for all of the indices, and then use a reverse timestamp as the row key design;For each index, have a separate table and use a timestamp as the row key design;For each index, have a separate table and use a reverse timestamp as the row key design;;;Create one unique table for all of the indices, and then use a reverse timestamp as the row key design;Using a reverse timestamp as the row key in a single table will ensure that the most recent stock prices are at the top of the table and can be easily accessed. MAKE SURE GPT ANSWER
184;You are building a report-only data warehouse where the data is streamed into BigQuery via the streaming API. Following Google's best practices, you have both a staging and a production table for the data. How should you design your data loading to ensure that there is only one master dataset without affecting performance on either the ingestion or reporting pieces?;1;Have a staging table that is an append-only model, and then update the production table every three hours with the changes written to staging;Have a staging table that is an append-only model, and then update the production table every ninety minutes with the changes written to staging;Have a staging table that moves the staged data over to the production table and deletes the contents of the staging table every three hours;Have a staging table that moves the staged data over to the production table and deletes the contents of the staging table every thirty minutes;;;Have a staging table that is an append-only model, and then update the production table every three hours with the changes written to staging;Using a staging table as an append-only model, then updating the production table every three hours ensures a single master dataset and does not disrupt the ingestion or reporting processes. MAKE SURE community C
185;You issue a new batch job to Dataflow. The job starts successfully, processes a few elements, and then suddenly fails and shuts down. You navigate to the Dataflow monitoring interface where you find errors related to a particular DoFn in your pipeline. What is the most likely cause of the errors?;1;Job validation;Exceptions in worker code;Graph or pipeline construction;Insufficient permissions;;;Exceptions in worker code;Errors related to a particular DoFn (data processing function) in your Dataflow pipeline are commonly due to issues in the worker code.
186;Your new customer has requested daily reports that show their net consumption of Google Cloud compute resources and who used the resources. You need to quickly and efficiently generate these daily reports. What should you do?;1;Do daily exports of Cloud Logging data to BigQuery. Create views filtering by project, log type, resource, and user;Filter data in Cloud Logging by project, resource, and user then export the data in CSV format;Filter data in Cloud Logging by project, log type, resource, and user, then import the data into BigQuery;Export Cloud Logging data to Cloud Storage in CSV format. Cleanse the data using Dataprep, filtering by project, resource, and user;;;Do daily exports of Cloud Logging data to BigQuery. Create views filtering by project, log type, resource, and user;Exporting Cloud Logging data to BigQuery and creating views with the necessary filters allow you to quickly generate detailed reports about resource usage.
187;"The Development and External teams have the project viewer Identity and Access Management (IAM) role in a folder named Visualization. You want the Development Team to be able to read data from both Cloud Storage and BigQuery, but the External Team should only be able to read data from BigQuery. What should you do? <img src=""https://www.examtopics.com/assets/media/exam-media/04341/0012100001.jpg"" alt=""Italian Trulli"">";1;Remove Cloud Storage IAM permissions to the External Team on the acme-raw-data project;Create Virtual Private Cloud (VPC) firewall rules on the acme-raw-data project that deny all ingress traffic from the External Team CIDR range;Create a VPC Service Controls perimeter containing both projects and BigQuery as a restricted API. Add the External Team users to the perimeter's Access Level;Create a VPC Service Controls perimeter containing both projects and Cloud Storage as a restricted API. Add the Development Team users to the perimeter's Access Level;;;Remove Cloud Storage IAM permissions to the External Team on the acme-raw-data project;By removing the Cloud Storage IAM permissions to the External Team on the specific project, it ensures the Development Team can read data from both Cloud Storage and BigQuery, while the External Team can only read data from BigQuery. MAKE SURE community D
188;Your startup has a web application that currently serves customers out of a single region in Asia. You are targeting funding that will allow your startup to serve customers globally. Your current goal is to optimize for cost, and your post-funding goal is to optimize for global presence and performance. You must use a native JDBC driver. What should you do?;1;Use Cloud Spanner to configure a single region instance initially, and then configure multi-region Cloud Spanner instances after securing funding;Use a Cloud SQL for PostgreSQL highly available instance first, and Bigtable with US, Europe, and Asia replication after securing funding;Use a Cloud SQL for PostgreSQL zonal instance first, and Bigtable with US, Europe, and Asia after securing funding;Use a Cloud SQL for PostgreSQL zonal instance first, and Cloud SQL for PostgreSQL with highly available configuration after securing funding;;;Use Cloud Spanner to configure a single region instance initially, and then configure multi-region Cloud Spanner instances after securing funding;Using Cloud Spanner, a single-region instance can be initially configured for cost optimization, and then multi-region instances can be configured after securing funding for global presence and performance optimization.
189;You need to migrate 1 PB of data from an on-premises data center to Google Cloud. Data transfer time during the migration should take only a few hours. You want to follow Google-recommended practices to facilitate the large data transfer over a secure connection. What should you do?;1;Establish a Cloud Interconnect connection between the on-premises data center and Google Cloud, and then use the Storage Transfer Service;Use a Transfer Appliance and have engineers manually encrypt, decrypt, and verify the data;Establish a Cloud VPN connection, start gcloud compute scp jobs in parallel, and run checksums to verify the data;Reduce the data into 3 TB batches, transfer the data using gsutil, and run checksums to verify the data;;;Establish a Cloud Interconnect connection between the on-premises data center and Google Cloud, and then use the Storage Transfer Service;Establishing a Cloud Interconnect connection between the on-premises data center and Google Cloud, then using the Storage Transfer Service is a Google-recommended practice for a secure and rapid large data transfer.
190;You are loading CSV files from Cloud Storage to BigQuery. The files have known data quality issues, including mismatched data types, such as STRINGs and INT64s in the same column, and inconsistent formatting of values such as phone numbers or addresses. You need to create the data pipeline to maintain data quality and perform the required cleansing and transformation. What should you do?;1;Use Data Fusion to transform the data before loading it into BigQuery;Use Data Fusion to convert the CSV files to a self-describing data format, such as AVRO, before loading the data to BigQuery;Load the CSV files into a staging table with the desired schema, perform the transformations with SQL, and then write the results to the final destination table;Create a table with the desired schema, load the CSV files into the table, and perform the transformations in place using SQL;;;Use Data Fusion to transform the data before loading it into BigQuery;Using Data Fusion to transform the data before loading it into BigQuery helps maintain data quality and perform the necessary cleansing and transformation of data.
191;You are developing a new deep learning model that predicts a customer's likelihood to buy on your ecommerce site. After running an evaluation of the model against both the original training data and new test data, you find that your model is overfitting the data. You want to improve the accuracy of the model when predicting new data. What should you do?;1;Increase the size of the training dataset, and increase the number of input features.;Increase the size of the training dataset, and decrease the number of input features.;Reduce the size of the training dataset, and increase the number of input features.;Reduce the size of the training dataset, and decrease the number of input features.;;;Increase the size of the training dataset, and decrease the number of input features.;Overfitting occurs when a model is excessively complex, such as having too many parameters relative to the number of observations. Increasing the size of the dataset and reducing the number of features can help alleviate overfitting.
192;You are implementing a chatbot to help an online retailer streamline their customer service. The chatbot must be able to respond to both text and voice inquiries. You are looking for a low-code or no-cade option, and you want to be able to easily train the chatbot to provide answers to keywords. What should you do?;1;Use the Cloud Speech-to-Text API to build a Python application in App Engine.;Use the Cloud Speech-to-Text API to build a Python application in a Compute Engine instance.;Use Dialogflow for simple queries and the Cloud Speech-to-Text API for complex queries.;Use Dialogflow to implement the chatbot, defining the intents based on the most common queries collected.;;;Use Dialogflow to implement the chatbot, defining the intents based on the most common queries collected.;Dialogflow is a natural language understanding platform that makes it easy to design and integrate a conversational user interface. It's ideal for implementing chatbots and processing both text and voice inputs.
193;An aerospace company uses a proprietary data format to store its flight data. You need to connect this new data source to BigQuery and stream the data into BigQuery. You want to efficiently import the data into BigQuery while consuming as few resources as possible. What should you do?;1;Write a shell script that triggers a Cloud Function that performs periodic ETL batch jobs on the new data source.;Use a standard Dataflow pipeline to store the raw data in BigQuery, and then transform the format later when the data is used.;Use Apache Hive to write a Dataproc job that streams the data into BigQuery in CSV format.;Use an Apache Beam custom connector to write a Dataflow pipeline that streams the data into BigQuery in Avro format.;;;Use an Apache Beam custom connector to write a Dataflow pipeline that streams the data into BigQuery in Avro format.;Apache Beam is a unified model for defining both batch and streaming data-parallel processing pipelines. Using it with Dataflow allows you to process the data efficiently.
194;An online brokerage company requires a high volume trade processing architecture. You need to create a secure queuing system that triggers jobs. The jobs will run in Google Cloud and call the company's Python API to execute trades. You need to efficiently implement a solution. What should you do?;1;Use a Pub/Sub push subscription to trigger a Cloud Function to pass the data to the Python API;Write an application hosted on a Compute Engine instance that makes a push subscription to the Pub/Sub topic;Write an application that makes a queue in a NoSQL database;Use Cloud Composer to subscribe to a Pub/Sub topic and call the Python API;;;Use a Pub/Sub push subscription to trigger a Cloud Function to pass the data to the Python API;This approach leverages Google Cloud's serverless solutions, allowing for the efficient management of high-volume data processing. Pub/Sub can handle the high volume of messages, and Cloud Function can effectively trigger the Python API.
195;Your company wants to be able to retrieve large result sets of medical information from your current system, which has over 10 TBs in the database, and store the data in new tables for further query. The database must have a low-maintenance architecture and be accessible via SQL. You need to implement a cost-effective solution that can support data analytics for large result sets. What should you do?;1;Use Cloud SQL, but first organize the data into tables. Use JOIN in queries to retrieve data.;Use BigQuery as a data warehouse. Set output destinations for caching large queries.;Use a MySQL cluster installed on a Compute Engine managed instance group for scalability.;Use Cloud Spanner to replicate the data across regions. Normalize the data in a series of tables.;;;Use BigQuery as a data warehouse. Set output destinations for caching large queries.;BigQuery is Google's fully managed, petabyte-scale, low-cost analytics data warehouse. It's designed to be easy to use with SQL and it's ideal for analyzing large datasets
196;You have 15 TB of data in your on-premises data center that you want to transfer to Google Cloud. Your data changes weekly and is stored in a POSIX-compliant source. The network operations team has granted you 500 Mbps bandwidth to the public internet. You want to follow Google-recommended practices to reliably transfer your data to Google Cloud on a weekly basis. What should you do?;1;Use Cloud Scheduler to trigger the gsutil command. Use the -m parameter for optimal parallelism.;Use Transfer Appliance to migrate your data into a Google Kubernetes Engine cluster, and then configure a weekly transfer job.;Install Storage Transfer Service for on-premises data in your data center, and then configure a weekly transfer job.;Install Storage Transfer Service for on-premises data on a Google Cloud virtual machine, and then configure a weekly transfer job.;;;Install Storage Transfer Service for on-premises data in your data center, and then configure a weekly transfer job.;Google Cloud's Storage Transfer Service allows the movement of large amounts of data from on-premise into Google Cloud Storage.
197;You are designing a system that requires an ACID-compliant database. You must ensure that the system requires minimal human intervention in case of a failure. What should you do?;1;Configure a Cloud SQL for MySQL instance with point-in-time recovery enabled.;Configure a Cloud SQL for PostgreSQL instance with high availability enabled.;Configure a Bigtable instance with more than one cluster.;Configure a BigQuery table with a multi-region configuration.;;;Configure a Cloud SQL for PostgreSQL instance with high availability enabled.;Cloud SQL for PostgreSQL is a fully-managed database service that allows easy setup, maintenance, and administration of PostgreSQL relational databases on Google Cloud. It also offers high availability.
198;You are implementing workflow pipeline scheduling using open source-based tools and Google Kubernetes Engine (GKE). You want to use a Google managed service to simplify and automate the task. You also want to accommodate Shared VPC networking considerations. What should you do?;1;Use Dataflow for your workflow pipelines. Use Cloud Run triggers for scheduling.;Use Dataflow for your workflow pipelines. Use shell scripts to schedule workflows.;Use Cloud Composer in a Shared VPC configuration. Place the Cloud Composer resources in the host project.;Use Cloud Composer in a Shared VPC configuration. Place the Cloud Composer resources in the service project.;;;Use Cloud Composer in a Shared VPC configuration. Place the Cloud Composer resources in the host project.;Cloud Composer is a fully managed workflow orchestration service. Placing resources in the host project with a Shared VPC configuration accommodates the necessary networking considerations. MAKE SURE  community D
199;You are using BigQuery and Data Studio to design a customer-facing dashboard that displays large quantities of aggregated data. You expect a high volume of concurrent users. You need to optimize the dashboard to provide quick visualizations with minimal latency. What should you do?;1;Use BigQuery BI Engine with materialized views.;Use BigQuery BI Engine with logical views.;Use BigQuery BI Engine with streaming data.;Use BigQuery BI Engine with authorized views.;;;Use BigQuery BI Engine with materialized views.;BigQuery BI Engine is a fast, in-memory analysis service for BigQuery that allows users to analyze large and complex datasets interactively with sub-second query response time and high concurrency. Materialized views help you maintain fast query performance as your data scales.
200;Government regulations in the banking industry mandate the protection of clients personally identifiable information (PII). Your company requires PII to be access controlled, encrypted, and compliant with major data protection standards. In addition to using Cloud Data Loss Prevention (Cloud DLP), you want to follow Google-recommended practices and use service accounts to control access to PII. What should you do?;1;Assign the required Identity and Access Management (IAM) roles to every employee, and create a single service account to access project resources.;Use one service account to access a Cloud SQL database, and use separate service accounts for each human user.;Use Cloud Storage to comply with major data protection standards. Use one service account shared by all users.;Use Cloud Storage to comply with major data protection standards. Use multiple service accounts attached to IAM groups to grant the appropriate access to each group.;;;Use Cloud Storage to comply with major data protection standards. Use multiple service accounts attached to IAM groups to grant the appropriate access to each group.;Google Cloud Storage provides a flexible, scalable, and durable storage option. Cloud Storage is built for secure and global-scale storage of your data. It also complies with major data protection standards. MAKE SURE community spilit D AND A
201;You need to migrate a Redis database from an on-premises data center to a Memorystore for Redis instance. You want to follow Google-recommended practices and perform the migration for minimal cost, time and effort. What should you do?;1;Make an RDB backup of the Redis database, use the gsutil utility to copy the RDB file into a Cloud Storage bucket, and then import the RDB file into the Memorystore for Redis instance;Make a secondary instance of the Redis database on a Compute Engine instance and then perform a live cutover;Create a Dataflow job to read the Redis database from the on-premises data center and write the data to a Memorystore for Redis instance;Write a shell script to migrate the Redis data and create a new Memorystore for Redis instance;;;Make an RDB backup of the Redis database, use the gsutil utility to copy the RDB file into a Cloud Storage bucket, and then import the RDB file into the Memorystore for Redis instance;Google Cloud Memorystore for Redis is a fully managed in-memory datastore service that allows you to use gsutil to transfer files to Google Cloud Storage and then import data to Memorystore.
202;Your platform on your on-premises environment generates 100 GB of data daily, composed of millions of structured JSON text files. Your on-premises environment cannot be accessed from the public internet. You want to use Google Cloud products to query and explore the platform data. What should you do?;1;Use Cloud Scheduler to copy data daily from your on-premises environment to Cloud Storage. Use the BigQuery Data Transfer Service to import data into BigQuery;Use a Transfer Appliance to copy data from your on-premises environment to Cloud Storage. Use the BigQuery Data Transfer Service to import data into BigQuery;Use Transfer Service for on-premises data to copy data from your on-premises environment to Cloud Storage. Use the BigQuery Data Transfer Service to import data into BigQuery;Use the BigQuery Data Transfer Service dataset copy to transfer all data into BigQuery;;;Use Transfer Service for on-premises data to copy data from your on-premises environment to Cloud Storage. Use the BigQuery Data Transfer Service to import data into BigQuery;Transfer Service for on-premises data (Transfer Appliance) allows you to securely move large datasets from your on-premises data center to Google Cloud Storage.
203;A TensorFlow machine learning model on Compute Engine virtual machines (n2-standard-32) takes two days to complete training. The model has custom TensorFlow operations that must run partially on a CPU. You want to reduce the training time in a cost-effective manner. What should you do?;1;Change the VM type to n2-highmem-32;Change the VM type to e2-standard-32;Train the model using a VM with a GPU hardware accelerator;Train the model using a VM with a TPU hardware accelerator;;;Train the model using a VM with a TPU hardware accelerator;Google's Tensor Processing Unit (TPU) is a custom-developed ASIC designed to accelerate machine learning workloads and can offer more efficient training times for models. MAKE SURE community C
204;You want to create a machine learning model using BigQuery ML and create an endpoint for hosting the model using Vertex AI. This will enable the processing of continuous streaming data in near-real time from multiple vendors. The data may contain invalid values. What should you do?;1;Create a new BigQuery dataset and use streaming inserts to land the data from multiple vendors. Configure your BigQuery ML model to use the ingestion dataset as the framing data;Use BigQuery streaming inserts to land the data from multiple vendors where your BigQuery dataset ML model is deployed;Create a Pub/Sub topic and send all vendor data to it. Connect a Cloud Function to the topic to process the data and store it in BigQuery;Create a Pub/Sub topic and send all vendor data to it. Use Dataflow to process and sanitize the Pub/Sub data and stream it to BigQuery;;;Create a Pub/Sub topic and send all vendor data to it. Use Dataflow to process and sanitize the Pub/Sub data and stream it to BigQuery;This option allows handling continuous streaming data by collecting and distributing the data to various consumers through Pub/Sub, and processing it with Dataflow to stream it into BigQuery.
205;You have a data processing application that runs on Google Kubernetes Engine (GKE). Containers need to be launched with their latest available configurations from a container registry. Your GKE nodes need to have GPUs, local SSDs, and 8 Gbps bandwidth. You want to efficiently provision the data processing infrastructure and manage the deployment process. What should you do?;1;Use Compute Engine startup scripts to pull container images, and use gcloud commands to provision the infrastructure;Use Cloud Build to schedule a job using Terraform build to provision the infrastructure and launch with the most current container images;Use GKE to autoscale containers, and use gcloud commands to provision the infrastructure;Use Dataflow to provision the data pipeline, and use Cloud Scheduler to run the job;;;Use GKE to autoscale containers, and use gcloud commands to provision the infrastructure;Using GKE to autoscale containers along with gcloud commands for provisioning allows for a robust, scalable solution that adjusts to workload demands and efficiently manages resources. make sure community B
